{
    "connection_string": "Driver=ODBC Driver 18 for SQL Server;Server=10.40.9.26,17001;Database=LND_TBOS;Trusted_Connection=yes;Encrypt=no;",
    "connection_details": {
        "driver": "ODBC Driver 18 for SQL Server",
        "server": "10.40.7.45,17001",
        "database": "EDW_NAGIOS",
        "trusted_connection": "yes",
        "encrypt": "no",
        "username": "LoadSmallRC",
        "password_secret_id": "APS3_SMALL_USERID_KEY",
        "secret_version": "1"
    },
    "gcs_bucket_name": "prj-ntta-ops-bi-devt-nagios-data",
    "database_type": "SQLServer",
    "source_database": "EDW_NAGIOS",
    "project_id": "prj-ntta-ops-bi-devt-svc-01",
    "chunk_file_size_gb": 1.0,
    "compression_type": "gzip",
    "parquet_file_page_size_bytes": 1048576,
    "output_folder": "D:\\gcp-data-transfer-csv\\Parallel_Data_Extraction\\edw_nagios",
    "log_folder_path": "E:\\bcp_logs\\edw_nagios",
    "max_process_count": 15,
    "file_type": ".csv",
    "bq_dataset_map": {
        "LND_TBOS": {
            "TollPlus": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TollPlus_"
            },
            "dbo": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "dbo_"
            },
            "Finance": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Finance_"
            },
            "History": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "History_"
            },
            "IOP": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "IOP_"
            },
            "Rbac": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Rbac_"
            },
            "TER": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TER_"
            },
            "TranProcessing": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TranProcessing_"
            },
            "CaseManager": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "CaseManager_"
            },
            "Court": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Court_"
            },
            "Inventory": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Inventory_"
            },
            "Notifications": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Notifications_"
            },
            "TSA": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TSA_"
            },
            "Utility": {
                "bq_dataset": "LND_TBOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Reporting": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Reporting_"
            },
            "docmgr": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "docmgr_"
            }
        },
        "EDW_TRIPS": {
            "dbo": {
                "bq_dataset": "EDW_TRIPS_APS",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_TRIPS_STAGE",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            }
        },
        "EDW_RITE": {
            "dbo": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": ""
            },
            "land": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": ""
            },
            "land_perm": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": ""
            },
            "stage": {
                "bq_dataset": "EDW_RITE_STAGE",
                "table_name_prefix": ""
            }
        },
        "EDW_TER": {
            "dbo": {
                "bq_dataset": "EDW_TER",
                "table_name_prefix": ""
            }
        },
        "LND_TER": {
            "dbo": {
                "bq_dataset": "LND_TER",
                "table_name_prefix": ""
            }
        },
        "LND_LG_DMV": {
            "dbo": {
                "bq_dataset": "LND_LG_DMV",
                "table_name_prefix": ""
            },
            "DMVLD": {
                "bq_dataset": "LND_LG_DMV",
                "table_name_prefix": ""
            }
        },
        "LND_LG_HOST": {
            "dbo": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "TSA_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "TXNOWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "HAS_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            }
        },
        "LND_LG_ICRS": {
            "dbo": {
                "bq_dataset": "LND_LG_ICRS",
                "table_name_prefix": ""
            },
            "ICRS_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            }
        },
        "LND_LG_IOP": {
            "dbo": {
                "bq_dataset": "LND_LG_IOP",
                "table_name_prefix": ""
            },
            "IOP_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            }
        },
        "LND_LG_TS": {
            "dbo": {
                "bq_dataset": "LND_LG_TS",
                "table_name_prefix": ""
            },
            "TAG_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "TIM_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "OLR": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            }
        },
        "LND_LG_VPS": {
            "dbo": {
                "bq_dataset": "LND_LG_VPS",
                "table_name_prefix": ""
            },
            "VP_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "HV_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            }
        },
        "EDW_NAGIOS": {
            "dbo": {
                "bq_dataset": "EDW_NAGIOS_APS",
                "table_name_prefix": ""
            },
            "Old": {
                "bq_dataset": "EDW_NAGIOS_APS",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_NAGIOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_NAGIOS_STAGE_APS",
                "table_name_prefix": ""
            },
            "Temp": {
                "bq_dataset": "EDW_NAGIOS_DELETE",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_NAGIOS_SUPPORT",
                "table_name_prefix": ""
            }
        },
        "LND_NAGIOS": {
            "dbo": {
                "bq_dataset": "LND_NAGIOS",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "LND_NAGIOS_SUPPORT",
                "table_name_prefix": ""
            }
        }
    },
    "log": {
        "log_level": "INFO",
        "log_name": "data_transfer_log",
        "labels": {}
    },
    "tables": [
        {
            "table_name": "Dim_Day",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DayID, DayDate, CASE when DayDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DayDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DayDesc, CASE when DayName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DayName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DayName, DayOfMonth, DayOfYear, IsWeekDay, IsWeekEnd, IsBusinessday, IsHoliday, CASE when HolidayName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HolidayName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HolidayName, WeekID, WeekBeginDate, WeekEndDate, CASE when WeekDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WeekDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WeekDesc, WeekOfYear, MonthID, MonthBeginDate, MonthEndDate, CASE when YearMonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearMonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearMonthDesc, CASE when MonthYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthYearDesc, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, MonthOfYear, MonthDuration, QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1DayID, P2DayID, P3DayID, P4DayID, P5DayID, P6DayID, P7DayID, P1WeekID, P2WeekID, P3WeekID, P4WeekID, P1MonthID, P2MonthID, P3MonthID, P4MonthID, P5MonthID, P6MonthID, P7MonthID, P8MonthID, P9MonthID, P10MonthID, P11MonthID, P12MonthID, P1QuarterID, P2QuarterID, P3QuarterID, P4QuarterID, LY1QuarterID, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Day",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Day_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DayID, DayDate, CASE when DayDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DayDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DayDesc, CASE when DayName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DayName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DayName, DayOfMonth, DayOfYear, IsWeekDay, IsWeekEnd, IsBusinessday, IsHoliday, CASE when HolidayName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HolidayName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HolidayName, WeekID, WeekBeginDate, WeekEndDate, CASE when WeekDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WeekDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WeekDesc, WeekOfYear, MonthID, MonthBeginDate, MonthEndDate, CASE when YearMonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearMonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearMonthDesc, CASE when MonthYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthYearDesc, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, MonthOfYear, MonthDuration, QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1DayID, P2DayID, P3DayID, P4DayID, P5DayID, P6DayID, P7DayID, P1WeekID, P2WeekID, P3WeekID, P4WeekID, P1MonthID, P2MonthID, P3MonthID, P4MonthID, P5MonthID, P6MonthID, P7MonthID, P8MonthID, P9MonthID, P10MonthID, P11MonthID, P12MonthID, P1QuarterID, P2QuarterID, P3QuarterID, P4QuarterID, LY1QuarterID, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Day_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Host_Service",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Nagios_Object_ID, CASE when Object_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Object_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Object_Type, CASE when Host_Facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Facility, CASE when Host_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Type, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Host_Plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Plaza, Plaza_Latitude, Plaza_Longitude, Is_Active, Is_Deleted, LND_UpdateDate, EDW_UpdateDate from dbo.Dim_Host_Service",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Host_Service_Metric",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Metric_ID, Nagios_Object_ID, CASE when Object_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Object_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Object_Type, CASE when Host_Facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Facility, CASE when Host_Plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Plaza, CASE when Host_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Type, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, Plaza_Latitude, Plaza_Longitude, Is_Active, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, Metric_Suffix, CASE when Metric_Target_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Target_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Target_Type, CASE when Metric_Target is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Target, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Target, LND_UpdateDate, EDW_UpdateDate from dbo.Dim_Host_Service_Metric",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Host_Service_Metric_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Metric_ID, Nagios_Object_ID, CASE when Object_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Object_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Object_Type, CASE when Host_Facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Facility, CASE when Host_Plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Plaza, CASE when Host_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Type, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, Plaza_Latitude, Plaza_Longitude, Is_Active, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, Metric_Suffix, CASE when Metric_Target_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Target_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Target_Type, CASE when Metric_Target is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Target, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Target, LND_UpdateDate, EDW_UpdateDate from dbo.Dim_Host_Service_Metric_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Host_Service_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Nagios_Object_ID, CASE when Object_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Object_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Object_Type, CASE when Host_Facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Facility, CASE when Host_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Type, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Host_Plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Plaza, Plaza_Latitude, Plaza_Longitude, Is_Active, Is_Deleted, LND_UpdateDate, EDW_UpdateDate from dbo.Dim_Host_Service_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Month",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MonthID, MonthBeginDate, MonthEndDate, CASE when YearMonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearMonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearMonthDesc, CASE when MonthYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthYearDesc, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, MonthOfYear, MonthDuration, QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1MonthID, P2MonthID, P3MonthID, P4MonthID, P5MonthID, P6MonthID, P7MonthID, P8MonthID, P9MonthID, P10MonthID, P11MonthID, P12MonthID, LY1MonthID, P1QuarterID, P2QuarterID, P3QuarterID, P4QuarterID, LY1QuarterID, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Month",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Month_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MonthID, MonthBeginDate, MonthEndDate, CASE when YearMonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearMonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearMonthDesc, CASE when MonthYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthYearDesc, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, MonthOfYear, MonthDuration, QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1MonthID, P2MonthID, P3MonthID, P4MonthID, P5MonthID, P6MonthID, P7MonthID, P8MonthID, P9MonthID, P10MonthID, P11MonthID, P12MonthID, LY1MonthID, P1QuarterID, P2QuarterID, P3QuarterID, P4QuarterID, LY1QuarterID, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Month_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Quarter",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1QuarterID, P2QuarterID, P3QuarterID, P4QuarterID, LY1QuarterID, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Quarter",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Quarter_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1QuarterID, P2QuarterID, P3QuarterID, P4QuarterID, LY1QuarterID, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Quarter_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_State",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select State_ID, CASE when Object_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Object_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Object_Type, State_Value, CASE when State_Desc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State_Desc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State_Desc, EDW_UpdateDate from dbo.Dim_State",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Time",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TimeID, CASE when Hour is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Hour, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Hour, CASE when Minute is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Minute, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Minute, CASE when Second is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Second, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Second, CASE when [12_Hour] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([12_Hour], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [12_Hour], CASE when AM_PM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AM_PM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AM_PM, CASE when [5_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([5_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [5_Minute], CASE when [10_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([10_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [10_Minute], CASE when [15_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([15_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [15_Minute], CASE when [30_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([30_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [30_Minute], LastModified from dbo.Dim_Time",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Time_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TimeID, CASE when Hour is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Hour, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Hour, CASE when Minute is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Minute, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Minute, CASE when Second is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Second, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Second, CASE when [12_Hour] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([12_Hour], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [12_Hour], CASE when AM_PM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AM_PM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AM_PM, CASE when [5_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([5_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [5_Minute], CASE when [10_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([10_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [10_Minute], CASE when [15_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([15_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [15_Minute], CASE when [30_Minute] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([30_Minute], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [30_Minute], LastModified from dbo.Dim_Time_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Week",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select WeekID, WeekBeginDate, WeekEndDate, CASE when WeekDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WeekDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WeekDesc, WeekOfYear, MonthID, MonthBeginDate, MonthEndDate, CASE when YearMonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearMonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearMonthDesc, CASE when MonthYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthYearDesc, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, MonthOfYear, MonthDuration, QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1WeekID, P2WeekID, P3WeekID, P4WeekID, LastModified from dbo.Dim_Week",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Week_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select WeekID, WeekBeginDate, WeekEndDate, CASE when WeekDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WeekDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WeekDesc, WeekOfYear, MonthID, MonthBeginDate, MonthEndDate, CASE when YearMonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearMonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearMonthDesc, CASE when MonthYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthYearDesc, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, MonthOfYear, MonthDuration, QuarterID, QuarterBeginDate, QuarterEndDate, CASE when YearQuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YearQuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YearQuarterDesc, CASE when QuarterYearDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterYearDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterYearDesc, CASE when QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QuarterDesc, QuarterDuration, YearID, YearBeginDate, YearDuration, P1WeekID, P2WeekID, P3WeekID, P4WeekID, LastModified from dbo.Dim_Week_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Year",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select YearID, YearBeginDate, YearDuration, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Year",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_Year_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select YearID, YearBeginDate, YearDuration, P1YearID, P2YearID, P3YearID, P4YearID, P5YearID, P6YearID, P7YearID, LastModified from dbo.Dim_Year_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event",
            "schema_name": "dbo",
            "id_field": "Nagios_Object_ID",
            "row_chunk_size": "1000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Nagios_Object_ID, Event_Date, Event_Day_ID, Event_Time_ID, Host_Service_State_ID, Metric_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric",
            "schema_name": "dbo",
            "id_field": "Host_Service_Metric_ID",
            "row_chunk_size": "500",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_Metric_ID, Event_Day_ID, Event_Time_ID, Metric_State_ID, Event_Date, Metric_Index, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value, Percent_Warning, Percent_Critical, Percent_Max, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Metric",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric_NEW",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_Metric_ID, Event_Day_ID, Event_Time_ID, Metric_State_ID, Event_Date, Metric_Index, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value, Percent_Warning, Percent_Critical, Percent_Max, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Metric_NEW",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_Metric_ID, Event_Day_ID, Event_Time_ID, Metric_State_ID, Event_Date, Metric_Index, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value, Percent_Warning, Percent_Critical, Percent_Max, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Metric_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric_Summary",
            "schema_name": "dbo",
            "id_field": "Event_Metric_Summary_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Event_Metric_Summary_ID, Event_Day_ID, Host_Service_Metric_ID, Metric_State_ID, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Total_Metric_Value, Metric_Value_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Metric_Summary",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric_Summary_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Event_Metric_Summary_ID, Event_Day_ID, Host_Service_Metric_ID, Metric_State_ID, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Total_Metric_Value, Metric_Value_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Metric_Summary_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_NEW",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Nagios_Object_ID, Event_Date, Event_Day_ID, Event_Time_ID, Host_Service_State_ID, Metric_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_NEW",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Nagios_Object_ID, Event_Date, Event_Day_ID, Event_Time_ID, Host_Service_State_ID, Metric_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Summary",
            "schema_name": "dbo",
            "id_field": "Event_Summary_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Event_Summary_ID, Event_Day_ID, Nagios_Object_ID, Host_Service_State_ID, Event_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Summary",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Summary_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Event_Summary_ID, Event_Day_ID, Nagios_Object_ID, Host_Service_State_ID, Event_Count, LND_UpdateDate, EDW_UpdateDate from dbo.Fact_Host_Service_Event_Summary_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric_Switch",
            "schema_name": "Old",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_Metric_ID, Event_Day_ID, Event_Time_ID, Metric_State_ID, Event_Date, Metric_Index, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value, Percent_Warning, Percent_Critical, Percent_Max, LND_UpdateDate, EDW_UpdateDate from Old.Fact_Host_Service_Event_Metric_Switch",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Switch",
            "schema_name": "Old",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Nagios_Object_ID, Event_Date, Event_Day_ID, Event_Time_ID, Host_Service_State_ID, Metric_Count, LND_UpdateDate, EDW_UpdateDate from Old.Fact_Host_Service_Event_Switch",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Lane_Camera_Mapping",
            "schema_name": "Ref",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when Controller is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Controller, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Controller, Metric_Suffix, CASE when Camera is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Camera, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Camera, EDW_UpdateDate, CASE when MSTR_UpdateUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MSTR_UpdateUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MSTR_UpdateUser, MSTR_UpdateDate from Ref.Lane_Camera_Mapping",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Event",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Nagios_Object_ID, Event_Date, Host_Service_State, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Event_Info is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Event_Info, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Event_Info, CASE when Perf_Data is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Perf_Data, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Perf_Data, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Count, LND_UpdateDate from Stage.Host_Service_Event",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Event_Date, Nagios_Object_ID, CASE when Host_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host_Type, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, Host_Service_State, CASE when Event_Info is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Event_Info, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Event_Info, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Index, Metric_Suffix, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value, Metric_State, Percent_Warning, Percent_Critical, Percent_Max, LND_UpdateDate, EDW_UpdateDate from Stage.Host_Service_Metric_Data",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data1",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_State, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Count, EQ_1, EQ_2, EQ_3, EQ_4, EQ_5, EQ_6, EQ_7, EQ_8, EQ_9, EQ_10, EQ_11, EQ_12, EQ_13, EQ_14, EQ_15, EQ_16, EQ_17 from Stage.Host_Service_Metric_Data1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data2",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_State, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Count, EQ_1, EQ_2, EQ_3, EQ_4, EQ_5, EQ_6, EQ_7, EQ_8, EQ_9, EQ_10, EQ_11, EQ_12, EQ_13, EQ_14, EQ_15, EQ_16, EQ_17, M_1, M_2, M_3, M_4, M_5, M_6, M_7, M_8, M_9, M_10, M_11, M_12, M_13, M_14, M_15, M_16, M_17 from Stage.Host_Service_Metric_Data2",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data3",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, Host_Service_State, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Count, Metric_Index, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, CASE when Value_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Value_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Value_String from Stage.Host_Service_Metric_Data3",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data4",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_State, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, Metric_Count, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Index, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, CASE when Value_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Value_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Value_String, CASE when Value_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Value_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Value_Unit, DELIM_1, DELIM_2, DELIM_3, DELIM_4 from Stage.Host_Service_Metric_Data4",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data5",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_State, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, Metric_Count, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Index, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, CASE when Value_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Value_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Value_String, CASE when Value_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Value_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Value_Unit, CASE when Metric_Value is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Value, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, CASE when Warning_Value is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Warning_Value, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Warning_Value, CASE when Critical_Value is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Critical_Value, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Critical_Value, CASE when Min_Value is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Min_Value, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Min_Value, CASE when Max_Value is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Max_Value, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Max_Value from Stage.Host_Service_Metric_Data5",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric_Data6",
            "schema_name": "Stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_State, CASE when Host is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Host, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Host, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Metric_String is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_String, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_String, Metric_Index, Metric_Suffix, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value from Stage.Host_Service_Metric_Data6",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event",
            "schema_name": "Temp",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Nagios_Object_ID, Event_Date, Event_Day_ID, Event_Time_ID, Host_Service_State_ID, Metric_Count, LND_UpdateDate, EDW_UpdateDate from Temp.Fact_Host_Service_Event",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Fact_Host_Service_Event_Metric",
            "schema_name": "Temp",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Host_Service_Event_ID, Host_Service_Metric_ID, Event_Day_ID, Event_Time_ID, Metric_State_ID, Event_Date, Metric_Index, Metric_Value, CASE when Metric_Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Unit, Warning_Value, Critical_Value, Min_Value, Max_Value, Percent_Warning, Percent_Critical, Percent_Max, LND_UpdateDate, EDW_UpdateDate from Temp.Fact_Host_Service_Event_Metric",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Host_Service_Metric",
            "schema_name": "Temp",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Nagios_Object_ID, CASE when Service is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Service, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Service, CASE when Metric_Name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Name, Metric_Suffix, CASE when Metric_Target is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Metric_Target, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Metric_Target, LND_UpdateDate from Temp.Host_Service_Metric",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LoadProcessControl",
            "schema_name": "Utility",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TableName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TableName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TableName, LastUpdatedDate, EDW_UpdateDate from Utility.LoadProcessControl",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Number",
            "schema_name": "Utility",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select N from Utility.Number",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PartitionSwitchLog",
            "schema_name": "Utility",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select SwitchLogID, SeqID, CASE when TableName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TableName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TableName, PartitionNum, NumberValueFrom, NumberValueTo, DateValueFrom, DateValueTo, NewRowCount, TableRowCount, CASE when ActionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ActionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ActionType, LogDate from Utility.PartitionSwitchLog",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ProcessLog",
            "schema_name": "Utility",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LogDate, CASE when LogSource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LogSource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LogSource, CASE when LogMessage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LogMessage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LogMessage, CASE when LogType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LogType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LogType, Row_Count, CASE when ProcTime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ProcTime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ProcTime, CASE when QueryTime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QueryTime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QueryTime, ProcTimeInSec, QueryTimeInSec, ProcStartDate, QuerySubmitDate, QueryEndDate, CASE when SessionID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SessionID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SessionID, CASE when QueryID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QueryID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QueryID, CASE when Query is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Query, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Query, CASE when ResourceClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ResourceClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ResourceClass from Utility.ProcessLog",
            "gcs_upload_flag": "FALSE"
        }
    ]
}