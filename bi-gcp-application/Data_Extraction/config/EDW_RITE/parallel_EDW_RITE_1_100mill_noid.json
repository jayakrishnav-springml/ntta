{
    "connection_string": "Driver=ODBC Driver 18 for SQL Server;Server=10.40.9.26,17001;Database=LND_TBOS;Trusted_Connection=yes;Encrypt=no;",
    "connection_details": {
        "driver": "ODBC Driver 18 for SQL Server",
        "server": "10.40.9.26,17001",
        "database": "EDW_RITE",
        "trusted_connection": "yes",
        "encrypt": "no",
        "username": "LoadMediumRC",
        "password_secret_id": "APS_DEV_MEDUIM_USERID_KEY",
        "secret_version": "1"
    },
    "gcs_bucket_name": "prj-ntta-ops-bi-devt-raw-data",
    "database_type": "SQLServer",
    "source_database": "EDW_RITE",
    "project_id": "prj-ntta-ops-bi-devt-svc-01",
    "chunk_file_size_gb": 1.0,
    "compression_type": "gzip",
    "parquet_file_page_size_bytes": 1048576,
    "output_folder": "D:\\gcp-data-transfer-csv\\Parallel_Data_Extraction\\priority_tables",
    "log_folder_path": "E:\\bcp_logs\\priority_tables",
    "max_process_count": 8,
    "file_type": ".csv",
    "bq_dataset_map": {
        "LND_TBOS": {
            "TollPlus": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TollPlus_"
            },
            "dbo": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "dbo_"
            },
            "Finance": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Finance_"
            },
            "History": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "History_"
            },
            "IOP": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "IOP_"
            },
            "Rbac": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Rbac_"
            },
            "TER": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TER_"
            },
            "TranProcessing": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TranProcessing_"
            },
            "CaseManager": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "CaseManager_"
            },
            "Court": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Court_"
            },
            "Inventory": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Inventory_"
            },
            "Notifications": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Notifications_"
            },
            "TSA": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TSA_"
            },
            "Utility": {
                "bq_dataset": "LND_TBOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Reporting": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Reporting_"
            },
            "docmgr": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "docmgr_"
            }
        },
        "EDW_TRIPS": {
            "dbo": {
                "bq_dataset": "EDW_TRIPS_APS",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_TRIPS_STAGE",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            }
        },
        "EDW_RITE": {
            "dbo": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": ""
            },
            "land": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "land_"
            },
            "land_perm": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "land_perm_"
            },
            "stage": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "stage_"
            }
        }
    },
    "log": {
        "log_level": "INFO",
        "log_name": "data_transfer_log",
        "labels": {}
    },
    "tables": [
        {
            "table_name": "DIM_CATEGORY_LEVEL_0",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_0",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PURSUED_LEVEL_0",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, MULTIPLIER, [ORDER] from dbo.DIM_PURSUED_LEVEL_0",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LOAD_CONTROL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select USE_LOAD_CONTROL_DATE_IND, LOAD_CONTROL_DATE from dbo.LOAD_CONTROL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_load",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_dflt_day_bgn, cal_dflt_day_end from land_perm.cal_load",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_day_bgn, cal_day_end, cal_day_typ_id, cal_day_typ_grp_id, cal_day_wk_bgn, cal_day_prd_bgn, cal_day_qtr_bgn, cal_day_sea_bgn, cal_day_yr_bgn, cal_wk_bgn, cal_wk_end, cal_wk_prd_bgn, cal_wk_qtr_bgn, cal_wk_sea_bgn, cal_wk_yr_bgn, cal_prd_bgn, cal_prd_end, cal_prd_qtr_bgn, cal_prd_sea_bgn, cal_prd_yr_bgn, cal_qtr_bgn, cal_qtr_end, cal_qtr_sea_bgn, cal_qtr_yr_bgn, cal_sea_bgn, cal_sea_end, cal_sea_yr_bgn, cal_yr_bgn, cal_yr_end, cal_yr_leap, cal_days_wk, cal_day_wk, cal_days_prd, cal_day_prd, cal_days_qtr, cal_day_qtr, cal_days_sea, cal_day_sea, cal_days_yr, cal_day_yr, cal_wks_prd, cal_wk_prd, cal_wks_qtr, cal_wk_qtr, cal_wks_sea, cal_wk_sea, cal_wks_yr, cal_wk_yr, cal_prds_qtr, cal_prd_qtr, cal_prds_sea, cal_prd_sea, cal_prds_yr, cal_prd_yr, cal_qtrs_sea, cal_qtr_sea, cal_qtrs_yr, cal_qtr_yr, cal_seas_yr, cal_sea_yr, CASE when cal_day_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_sid, CASE when cal_day_typ_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_typ_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_typ_sid, CASE when cal_day_typ_grp_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_typ_grp_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_typ_grp_sid, CASE when cal_wk_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sid, CASE when cal_prd_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sid, CASE when cal_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sid, CASE when cal_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_sid, CASE when cal_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_sid, CASE when cal_day_wk_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_sid, CASE when cal_day_prd_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_sid, CASE when cal_day_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_sid, CASE when cal_day_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_sea_sid, CASE when cal_day_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_sid, CASE when cal_wk_prd_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_prd_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_prd_sid, CASE when cal_wk_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_qtr_sid, CASE when cal_wk_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sea_sid, CASE when cal_wk_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_yr_sid, CASE when cal_prd_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_sid, CASE when cal_prd_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sea_sid, CASE when cal_prd_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_sid, CASE when cal_qtr_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_sid, CASE when cal_qtr_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_sid, CASE when cal_sea_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_sid, CASE when cal_day_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_desc_1, CASE when cal_day_typ_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_typ_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_typ_desc_1, CASE when cal_day_typ_grp_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_typ_grp_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_typ_grp_desc_1, CASE when cal_wk_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_desc_1, CASE when cal_prd_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_desc_1, CASE when cal_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_desc_1, CASE when cal_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_desc_1, CASE when cal_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_1, CASE when cal_day_wk_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_desc_1, CASE when cal_day_prd_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_desc_1, CASE when cal_day_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_desc_1, CASE when cal_day_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_sea_desc_1, CASE when cal_day_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_desc_1, CASE when cal_wk_prd_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_prd_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_prd_desc_1, CASE when cal_wk_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_qtr_desc_1, CASE when cal_wk_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sea_desc_1, CASE when cal_wk_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_yr_desc_1, CASE when cal_prd_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_1, CASE when cal_prd_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sea_desc_1, CASE when cal_prd_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_1, CASE when cal_qtr_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_desc_1, CASE when cal_qtr_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_1, CASE when cal_sea_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_desc_1, CASE when cal_day_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_desc_2, CASE when cal_day_typ_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_typ_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_typ_desc_2, CASE when cal_day_typ_grp_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_typ_grp_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_typ_grp_desc_2, CASE when cal_wk_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_desc_2, CASE when cal_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_desc_2, CASE when cal_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_desc_2, CASE when cal_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_desc_2, CASE when cal_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_2, CASE when cal_day_wk_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_desc_2, CASE when cal_day_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_desc_2, CASE when cal_day_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_desc_2, CASE when cal_day_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_sea_desc_2, CASE when cal_day_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_desc_2, CASE when cal_wk_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_prd_desc_2, CASE when cal_wk_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_qtr_desc_2, CASE when cal_wk_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sea_desc_2, CASE when cal_wk_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_yr_desc_2, CASE when cal_prd_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_2, CASE when cal_prd_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sea_desc_2, CASE when cal_prd_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_2, CASE when cal_qtr_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_desc_2, CASE when cal_qtr_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_2, CASE when cal_sea_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_desc_2, etl_sid, etl_chg from stage.cal_day",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_load",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_load_day_bgn, cal_dflt_day_bgn, cal_dflt_day_end, etl_sid, etl_chg from stage.cal_load",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_mxm_wk_prd",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_wk_bgn, cal_prd_bgn, etl_sid, etl_chg from stage.cal_mxm_wk_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_prd_bgn, cal_prd_end, cal_prd_qtr_bgn, cal_prd_sea_bgn, cal_prd_yr_bgn, cal_qtr_bgn, cal_qtr_end, cal_qtr_sea_bgn, cal_qtr_yr_bgn, cal_sea_bgn, cal_sea_end, cal_sea_yr_bgn, cal_yr_bgn, cal_yr_end, cal_yr_leap, cal_prds_qtr, cal_prd_qtr, cal_prds_sea, cal_prd_sea, cal_prds_yr, cal_prd_yr, cal_qtrs_sea, cal_qtr_sea, cal_qtrs_yr, cal_qtr_yr, cal_seas_yr, cal_sea_yr, CASE when cal_prd_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sid, CASE when cal_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sid, CASE when cal_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_sid, CASE when cal_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_sid, CASE when cal_prd_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_sid, CASE when cal_prd_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sea_sid, CASE when cal_prd_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_sid, CASE when cal_qtr_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_sid, CASE when cal_qtr_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_sid, CASE when cal_sea_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_sid, CASE when cal_prd_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_desc_1, CASE when cal_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_desc_1, CASE when cal_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_desc_1, CASE when cal_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_1, CASE when cal_prd_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_1, CASE when cal_prd_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sea_desc_1, CASE when cal_prd_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_1, CASE when cal_qtr_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_desc_1, CASE when cal_qtr_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_1, CASE when cal_sea_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_desc_1, CASE when cal_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_desc_2, CASE when cal_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_desc_2, CASE when cal_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_desc_2, CASE when cal_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_2, CASE when cal_prd_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_2, CASE when cal_prd_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_sea_desc_2, CASE when cal_prd_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_2, CASE when cal_qtr_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_desc_2, CASE when cal_qtr_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_2, CASE when cal_sea_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_desc_2, etl_sid, etl_chg from stage.cal_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_qtr_bgn, cal_qtr_end, cal_qtr_sea_bgn, cal_qtr_yr_bgn, cal_sea_bgn, cal_sea_end, cal_sea_yr_bgn, cal_yr_bgn, cal_yr_end, cal_yr_leap, cal_qtrs_sea, cal_qtr_sea, cal_qtrs_yr, cal_qtr_yr, cal_seas_yr, cal_sea_yr, CASE when cal_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sid, CASE when cal_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_sid, CASE when cal_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_sid, CASE when cal_qtr_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_sid, CASE when cal_qtr_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_sid, CASE when cal_sea_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_sid, CASE when cal_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_desc_1, CASE when cal_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_desc_1, CASE when cal_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_1, CASE when cal_qtr_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_desc_1, CASE when cal_qtr_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_1, CASE when cal_sea_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_desc_1, CASE when cal_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_desc_2, CASE when cal_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_desc_2, CASE when cal_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_2, CASE when cal_qtr_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_sea_desc_2, CASE when cal_qtr_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_2, CASE when cal_sea_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_sea_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_sea_yr_desc_2, etl_sid, etl_chg from stage.cal_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_wk_bgn, cal_wk_end, cal_wk_prd_bgn, cal_wk_qtr_bgn, cal_wk_sea_bgn, cal_wk_yr_bgn, cal_yr_bgn, cal_yr_end, cal_yr_leap, cal_wks_prd, cal_wk_prd, cal_wks_qtr, cal_wk_qtr, cal_wks_sea, cal_wk_sea, cal_wks_yr, cal_wk_yr, CASE when cal_wk_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sid, CASE when cal_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_sid, CASE when cal_wk_prd_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_prd_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_prd_sid, CASE when cal_wk_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_qtr_sid, CASE when cal_wk_sea_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sea_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sea_sid, CASE when cal_wk_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_yr_sid, CASE when cal_wk_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_desc_1, CASE when cal_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_1, CASE when cal_wk_prd_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_prd_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_prd_desc_1, CASE when cal_wk_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_qtr_desc_1, CASE when cal_wk_sea_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sea_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sea_desc_1, CASE when cal_wk_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_yr_desc_1, CASE when cal_wk_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_desc_2, CASE when cal_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_2, CASE when cal_wk_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_prd_desc_2, CASE when cal_wk_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_qtr_desc_2, CASE when cal_wk_sea_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_sea_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_sea_desc_2, CASE when cal_wk_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_yr_desc_2, etl_sid, etl_chg from stage.cal_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_yr_bgn, cal_yr_end, cal_yr_leap, CASE when cal_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_sid, CASE when cal_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_1, CASE when cal_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_yr_desc_2, etl_sid, etl_chg from stage.cal_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_PAYMENT_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PMT_TYPE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TYPE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TYPE_CODE, CASE when PMT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TYPE_DESCR, LAST_UPDATE_DATE from dbo.ACCOUNT_PAYMENT_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CLOSE_OUT_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CLOSE_OUT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_TYPE, CASE when CLOSE_OUT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_TYPE_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.CLOSE_OUT_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_bgn, cal_end, CASE when cal_wk_day_end is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_wk_day_end, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_wk_day_end, cal_days_nrml, cal_days_leap, cal_wks_nrml, cal_wks_leap, cal_prds_nrml, cal_prds_leap, cal_qtrs_nrml, cal_qtrs_leap, cal_seas_nrml, cal_seas_leap, CASE when cal_desc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_desc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_desc from land_perm.cal",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_1x1",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_1x1_id, CASE when cal_x_1x1_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_1x1_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_1x1_desc_1, CASE when cal_x_1x1_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_1x1_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_1x1_desc_2 from land_perm.cal_x_1x1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_PAYMENT_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PMT_TYPE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TYPE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TYPE_CODE, CASE when PMT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TYPE_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.ACCOUNT_PAYMENT_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CLOSE_OUT_STATUSES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CLOSE_OUT_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_STATUS, CASE when CLOSE_OUT_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_STATUS_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.CLOSE_OUT_STATUSES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CLOSE_OUT_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CLOSE_OUT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_TYPE, CASE when CLOSE_OUT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_TYPE_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.CLOSE_OUT_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_DISPOSITION",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, CASE when DISPOSITION_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_DISPOSITION",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INDICATOR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select INDICATOR_ID, CASE when YES_NO_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YES_NO_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YES_NO_ABBREV, CASE when INDICATOR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INDICATOR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INDICATOR from dbo.DIM_INDICATOR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_TYPE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when INVOICE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_TYPE, CASE when INVOICE_TYPE_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_TYPE_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_TYPE_DESC from dbo.DIM_INVOICE_TYPE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PURSUED_LEVEL_1",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, MULTIPLIER, [ORDER] from dbo.DIM_PURSUED_LEVEL_1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VIOLATION_OR_ZIPCASH",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, CASE when VIOLATION_OR_ZIPCASH_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_VIOLATION_OR_ZIPCASH",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ZI_STG",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ZI_STAGE_ID, CASE when ZI_STAGE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZI_STAGE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZI_STAGE_NAME from dbo.DIM_ZI_STG",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, CASE when VIOL_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.VIOL_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ADDRESS_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ADDR_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS, CASE when ADDR_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS_DESCR, LAST_UPDATE_DATE from dbo.ADDRESS_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CLOSE_OUT_STATUSES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CLOSE_OUT_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_STATUS, CASE when CLOSE_OUT_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_STATUS_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.CLOSE_OUT_STATUSES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_REBILL_AMT_GRP",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select REBILL_AMT_GRP_ID, CASE when REBILL_AMT_GRP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REBILL_AMT_GRP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REBILL_AMT_GRP, CREATED_DATE from dbo.DIM_REBILL_AMT_GRP",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MONTHLY_LOAD_CHECK_SOURCE_TABLES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CHECK_NUMBER, CASE when TABLE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TABLE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TABLE_NAME, CASE when FILTER_PATTERN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FILTER_PATTERN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FILTER_PATTERN, CASE when FIELD_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FIELD_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FIELD_NAME, FIELD_VALUE from dbo.MONTHLY_LOAD_CHECK_SOURCE_TABLES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "REL_HVFlag_GROUP_TO_HVFlag",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when HVFlag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HVFlag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HVFlag, CASE when HVFlag_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HVFlag_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HVFlag_GROUP from dbo.REL_HVFlag_GROUP_TO_HVFlag",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "REL_PaidStatus_GROUP_TO_PaidStatus",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PaidStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaidStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaidStatus, CASE when PaidStatus_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaidStatus_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaidStatus_GROUP from dbo.REL_PaidStatus_GROUP_TO_PaidStatus",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TAG_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TAG_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE, CASE when TAG_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE_DESCR, TAG_TYPE_ORDER, CASE when DEFAULT_VALUE_FLAG is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DEFAULT_VALUE_FLAG, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DEFAULT_VALUE_FLAG, CASE when ACTIVE_FLAG is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACTIVE_FLAG, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACTIVE_FLAG, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.TAG_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TAG_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TAG_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE, CASE when TAG_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE_DESCR, TAG_TYPE_ORDER, CASE when DEFAULT_VALUE_FLAG is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DEFAULT_VALUE_FLAG, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DEFAULT_VALUE_FLAG, CASE when ACTIVE_FLAG is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACTIVE_FLAG, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACTIVE_FLAG, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.TAG_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_PAY_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_PAY_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_PAY_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_PAY_TYPE, CASE when VIOL_PAY_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_PAY_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_PAY_TYPE_DESCR, LAST_UPDATE_DATE from dbo.VIOL_PAY_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, CASE when VIOL_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.VIOL_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_STATUSES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_STATUS_CODE, CASE when ACCT_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_STATUS_DESCR, LAST_UPDATE_DATE from dbo.ACCOUNT_STATUSES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ADDRESS_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ADDR_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS, CASE when ADDR_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.ADDRESS_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CREDIT_CARD_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CARD_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CARD_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CARD_CODE, CASE when CARD_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CARD_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CARD_NAME, LAST_UPDATE_DATE from dbo.CREDIT_CARD_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_1",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_6",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_6",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VEHICLE_CLASSES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VEHICLE_CLASS_CODE, CASE when VEHICLE_CLASS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_CLASS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_CLASS_DESCR, LAST_UPDATE_DATE from dbo.VEHICLE_CLASSES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_PAY_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_PAY_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_PAY_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_PAY_TYPE, CASE when VIOL_PAY_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_PAY_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_PAY_TYPE_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.VIOL_PAY_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_STATUSES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ACCT_STATUS_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_STATUS_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_STATUS_CODE, CASE when ACCT_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_STATUS_DESCR, INSERT_DATE from dbo.ACCOUNT_STATUSES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CREDIT_CARD_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CARD_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CARD_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CARD_CODE, CASE when CARD_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CARD_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CARD_NAME, INSERT_DATE, LAST_UPDATE_DATE from dbo.CREDIT_CARD_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_2",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_2",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_FACILITY_GROUP",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when FACILITY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_GROUP, FACILITY_GROUP_ORDER from dbo.DIM_FACILITY_GROUP",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VEH_CLSS_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VCLY_ID, VEHY_ID, CASE when VCLY_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VCLY_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VCLY_DESC, CASE when NOTE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOTE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOTE, AXLES, CASE when CREATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CREATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CREATED_BY, CREATION_DATE, CASE when UPDATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UPDATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UPDATED_BY, UPDATED_DATE, CASE when DISPLAYED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPLAYED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPLAYED, VCLY_ORDER, LAST_UPDATE_DATE, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE from dbo.DIM_VEH_CLSS_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VEHICLE_CLASSES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VEHICLE_CLASS_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_CLASS_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_CLASS_CODE, CASE when VEHICLE_CLASS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_CLASS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_CLASS_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.VEHICLE_CLASSES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_qtr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_prd_qtr_bgn, cal_prd_qtr_ix, cal_prds_qtr, cal_prd_qtr, CASE when cal_prd_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_sid, CASE when cal_prd_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_1, CASE when cal_prd_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_2 from land_perm.cal_prd_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_7",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_7",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_ANALYSIS_CATEGORY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select INVOICE_ANALYSIS_CATEGORY_ID, CASE when INVOICE_ANALYSIS_CATEGORY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_ANALYSIS_CATEGORY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_ANALYSIS_CATEGORY from dbo.DIM_INVOICE_ANALYSIS_CATEGORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PAYMENT_FORMS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, CASE when PAYMENT_FORM_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM_DESCR, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.PAYMENT_FORMS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_RETAIL_TRXN_DETAILS_TRANS_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TRANS_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANS_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANS_STATUS, CASE when TRANS_STATUS_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANS_STATUS_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANS_STATUS_DESC from dbo.DIM_RETAIL_TRXN_DETAILS_TRANS_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HOW_DELIVERED_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when DELIVERY_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_DESCR, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.HOW_DELIVERED_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "REL_ADDR_STATUS_GROUP_TO_ADDR_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ADDR_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS, CASE when ADDR_STATUS_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS_GROUP from dbo.REL_ADDR_STATUS_GROUP_TO_ADDR_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VB_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS, CASE when DESCRIPTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DESCRIPTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DESCRIPTION, CASE when STATUS_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_GROUP, CASE when STATUS_SUM_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_SUM_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_SUM_GROUP, CASE when IS_CLOSED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_CLOSED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_CLOSED, INSERT_DATE, LAST_UPDATE_DATE from dbo.VB_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VB_INV_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS, CASE when DESCRIPTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DESCRIPTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DESCRIPTION, IS_CLOSED, LAST_UPDATE_DATE from dbo.VB_INV_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_yr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_qtr_yr_bgn, cal_qtr_yr_ix, cal_qtrs_yr, cal_qtr_yr, cal_qtr_sea, cal_sea_yr, CASE when cal_qtr_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_sid, CASE when cal_qtr_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_1, CASE when cal_qtr_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_2 from land_perm.cal_qtr_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ADDRESS_SOURCES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ADDR_SOURCE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_SOURCE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_SOURCE, CASE when ADDR_SOURCE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_SOURCE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_SOURCE_DESCR, LAST_UPDATE_DATE from dbo.ADDRESS_SOURCES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CA_COMPANIES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CA_COMPANY_ID, CASE when CA_COMPANY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_COMPANY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_COMPANY_NAME, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.CA_COMPANIES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_STG",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select INVOICE_STAGE_ID, CASE when INVOICE_STAGE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STAGE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STAGE_NAME, CASE when INVOICE_STAGE_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STAGE_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STAGE_GROUP from dbo.DIM_INVOICE_STG",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PAYMENT_TYPE_HOST",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PMTY_ID, CASE when PMTY_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMTY_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMTY_DESC, CASE when NOTE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOTE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOTE, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_PAYMENT_TYPE_HOST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PAYMENT_TYPE_HOST_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PMTY_ID, CASE when PMTY_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMTY_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMTY_DESC, CASE when NOTE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOTE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOTE, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_PAYMENT_TYPE_HOST_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HOST_AVI_TAG_STATUSES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AVI_TAG_STATUS, CASE when AVI_TAG_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS_DESCR, INSERT_DATE from dbo.HOST_AVI_TAG_STATUSES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HOW_DELIVERED",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when DELIVERY_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_DESCR, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.HOW_DELIVERED",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PAYMENT_SOURCE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when PAYMENT_SOURCE_CODE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE_DESCR, LAST_UPDATE_DATE from dbo.PAYMENT_SOURCE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Service_Monthly_Table_Count",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TABLE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TABLE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TABLE_NAME, Row_Count, Last_Update_Date from dbo.Service_Monthly_Table_Count",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOLATOR_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_TYPE, CASE when VIOLATOR_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_TYPE_DESCR, LAST_UPDATE_DATE from dbo.VIOLATOR_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_role",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_role_id, cal_role_ix, CASE when cal_role_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_role_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_role_desc_1, CASE when cal_role_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_role_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_role_desc_2 from land_perm.cal_role",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ADDRESS_SOURCES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ADDR_SOURCE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_SOURCE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_SOURCE, CASE when ADDR_SOURCE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_SOURCE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_SOURCE_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.ADDRESS_SOURCES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CA_COMPANIES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CA_COMPANY_ID, CASE when CA_COMPANY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_COMPANY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_COMPANY_NAME, CASE when CA_COMPANY_ABBREV_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_COMPANY_ABBREV_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_COMPANY_ABBREV_NAME, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.CA_COMPANIES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_3",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_3",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_SOURCE_TS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DIM_SOURCE_TS_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when SC_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SC_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SC_DESCR from dbo.DIM_SOURCE_TS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "SOURCE_CODE_TOLL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when SC_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SC_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SC_DESCR, CASE when SOURCE_CODE_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE_GROUP, LAST_UPDATE_DATE from dbo.SOURCE_CODE_TOLL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOLATOR_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_TYPE, CASE when VIOLATOR_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_TYPE_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.VIOLATOR_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_mxm",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_mxm_id, CASE when cal_x_mxm_attrib is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_mxm_attrib, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_mxm_attrib, CASE when cal_x_mxm_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_mxm_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_mxm_desc_1, CASE when cal_x_mxm_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_mxm_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_mxm_desc_2 from land_perm.cal_x_mxm",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_TYPES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ACCT_TYPE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TYPE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TYPE_CODE, CASE when ACCT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TYPE_DESCR, LAST_UPDATE_DATE from dbo.ACCOUNT_TYPES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_5",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_5",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ACCT_TYPE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TYPE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TYPE_CODE, CASE when ACCT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TYPE_DESCR, INSERT_DATE, LAST_UPDATE_DATE from dbo.ACCOUNT_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCT_TAG_STATUSES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ACCT_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TAG_STATUS, CASE when ACCT_TAG_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TAG_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TAG_STATUS_DESCR, INSERT_DATE from dbo.ACCT_TAG_STATUSES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DPS_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when DPS_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DPS_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DPS_INV_STATUS, CASE when DPS_INV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DPS_INV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DPS_INV_STATUS_DESCR, CASE when DPS_INV_STATUS_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DPS_INV_STATUS_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DPS_INV_STATUS_GROUP, INSERT_DATE, LAST_UPDATE_DATE from dbo.DPS_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LANE_VIOL_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_VIOL_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS_DESCR, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.LANE_VIOL_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LANE_VIOL_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_VIOL_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS_DESCR, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.LANE_VIOL_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PMT_TXN_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PMT_TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TXN_TYPE, CASE when PMT_TXN_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TXN_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TXN_TYPE_DESCR, LAST_UPDATE_DATE from dbo.PMT_TXN_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_wk",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_day_wk_bgn, cal_day_wk_ix, cal_day_wk_greg_ix, cal_days_wk, cal_day_wk, CASE when cal_day_wk_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_sid, CASE when cal_day_wk_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_desc_1, CASE when cal_day_wk_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_desc_2 from land_perm.cal_day_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PARTITION_AS_OF_DATE_TABLE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TABLE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TABLE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TABLE_NAME, CASE when DISTRIBUTION_SQL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISTRIBUTION_SQL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISTRIBUTION_SQL, CASE when INDEX_SQL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INDEX_SQL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INDEX_SQL, INSERT_DATE from dbo.PARTITION_AS_OF_DATE_TABLE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TRANSACTION_TYPES_UNDO_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when RETURN_TRANSACTION_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RETURN_TRANSACTION_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RETURN_TRANSACTION_TYPE, CASE when PAYMENT_TRANSACTION_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_TRANSACTION_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_TRANSACTION_TYPE from dbo.TRANSACTION_TYPES_UNDO_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "REVIEW_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEW_STATUS, CASE when REV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REV_STATUS_DESCR, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.REVIEW_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CA_INV_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CA_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS, CASE when CA_INV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS_DESCR, LAST_UPDATE_DATE from dbo.CA_INV_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CA_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CA_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS, CASE when CA_INV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS_DESCR, CASE when CA_INV_STATUS_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS_GROUP, INSERT_DATE, LAST_UPDATE_DATE from dbo.CA_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LANE_SUB_AGENCY_ABBREV",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when SUB_AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUB_AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUB_AGENCY_ABBREV, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_LANE_SUB_AGENCY_ABBREV",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_yr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_prd_yr_bgn, cal_prd_yr_ix, cal_prd_yr_greg_ix, cal_prds_yr, cal_prd_yr, cal_prd_sea, cal_prd_qtr, cal_qtr_yr, cal_yr_adj, CASE when cal_prd_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_sid, CASE when cal_prd_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_1, CASE when cal_prd_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_2 from land_perm.cal_prd_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_REJECT_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, CASE when VIOL_REJECT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE_DESCR, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.VIOL_REJECT_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "REL_FACILITY_GROUP_TO_FACILITY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when FACILITY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_GROUP from dbo.REL_FACILITY_GROUP_TO_FACILITY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Time_Zone_Offset",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select YYYY, DST_Start_Date, DST_End_Date, Daylight_Weeks, CASE when Source_TZ is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Source_TZ, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Source_TZ, CASE when Target_TZ is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Target_TZ, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Target_TZ, DST_Offset, Non_DST_Offset from dbo.Time_Zone_Offset",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_INV_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, CASE when VIOL_INV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS_DESCR, VIOL_INV_STATUS_ORDER, CASE when IS_CLOSED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_CLOSED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_CLOSED, CASE when SUPERVISOR_ONLY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUPERVISOR_ONLY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUPERVISOR_ONLY, CASE when INVOICE_ONLY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_ONLY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_ONLY, CASE when IS_ACTIVE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_ACTIVE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_ACTIVE, CASE when ARCHIVE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ARCHIVE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ARCHIVE, CASE when IS_AGABLE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_AGABLE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_AGABLE, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.VIOL_INV_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, CASE when VIOL_INV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS_DESCR, CASE when VIOL_INV_STATUS_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS_GROUP, CASE when VIOL_INV_STATUS_SUM_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS_SUM_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS_SUM_GROUP, CASE when IS_CLOSED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_CLOSED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_CLOSED, VIOL_INV_STATUS_ORDER, CASE when SUPERVISOR_ONLY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUPERVISOR_ONLY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUPERVISOR_ONLY, CASE when INVOICE_ONLY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_ONLY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_ONLY, CASE when IS_ACTIVE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_ACTIVE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_ACTIVE, CASE when ARCHIVE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ARCHIVE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ARCHIVE, CASE when IS_AGABLE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_AGABLE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_AGABLE, INSERT_DATE, LAST_UPDATE_DATE from dbo.VIOL_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_YEAR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Cal_YearID, Fiscal_YearID, Year_Desc, YearDate, YearDuration, Cal_PrevYearID, Cal_Prev2YearID, Cal_Prev3YearID, Cal_Prev4YearID, Cal_Prev5YearID, Cal_Prev6YearID, Cal_Prev7YearID from dbo.DIM_YEAR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LOAD_PROCESS_CONTROL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TABLE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TABLE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TABLE_NAME, LAST_RUN_DATE from dbo.LOAD_PROCESS_CONTROL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when VIOL_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS_DESCR, LAST_UPDATE_DATE from dbo.VIOL_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when VIOL_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS_DESCR, CASE when VIOL_STATUS_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS_GROUP, CASE when VIOL_STATUS_SUM_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS_SUM_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS_SUM_GROUP, INSERT_DATE, LAST_UPDATE_DATE from dbo.VIOL_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, [ORDER] from dbo.DIM_CATEGORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_TX_TA_IDENTITIES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when TXID_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXID_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXID_DESC, CASE when CREATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CREATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CREATED_BY, CREATION_DATE, CASE when UPDATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UPDATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UPDATED_BY, UPDATED_DATE, TXID_ID, TXBE_ID, CASE when TRANSACTION_RPT_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_RPT_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_RPT_NAME, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_TX_TA_IDENTITIES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "EXCUSAL_REASONS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_REAS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REAS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REAS_DESCR, EXCUSED_REAS_ORDER, CASE when SUPERVISOR_ONLY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUPERVISOR_ONLY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUPERVISOR_ONLY, CASE when IS_ACTIVE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IS_ACTIVE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IS_ACTIVE, CASE when EXCUSE_TOLL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSE_TOLL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSE_TOLL, CASE when EXCUSE_FINE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSE_FINE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSE_FINE, LAST_UPDATE_DATE, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE from dbo.EXCUSAL_REASONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PARTITION_AS_OF_DATE_CONTROL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_DATE, DATA_AS_OF_DATE, KEEP_PARTITION_IND, CURRENT_IND from dbo.PARTITION_AS_OF_DATE_CONTROL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_yr_bgn, cal_comp_yr_bgn, cal_comp_bgn, cal_comp_end, cal_yr_x_bgn, cal_yr_x_end from land.cal_yr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_yr_bgn, cal_comp_yr_bgn, cal_comp_bgn, cal_comp_end, cal_yr_x_bgn, cal_yr_x_end, etl_sid, etl_chg from stage.cal_yr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TAG_TYPES_XREF_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TAG_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE, CASE when TAG_ID_BEGIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID_BEGIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID_BEGIN, CASE when TAG_ID_END is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID_END, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID_END, CASE when TAG_MODEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_MODEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_MODEL, QTY from dbo.TAG_TYPES_XREF_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_prd",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_day_prd_bgn, cal_day_prd_ix, cal_days_prd, cal_day_prd, CASE when cal_day_prd_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_sid, CASE when cal_day_prd_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_desc_1, CASE when cal_day_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_desc_2 from land_perm.cal_day_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PURSUED_LEVEL_2",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, MULTIPLIER, [ORDER] from dbo.DIM_PURSUED_LEVEL_2",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_CATEGORY_LEVEL_4",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ABBREV, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, MULTIPLIER, [ORDER] from dbo.DIM_CATEGORY_LEVEL_4",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_STATUS_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ZI_STAGE_ID, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, CASE when ZI_STAGE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZI_STAGE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZI_STAGE_NAME, CASE when VBI_STATUS_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS_DESC, CASE when VIOL_INV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS_DESCR, CASE when INVOICE_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STATUS_DESCR, CASE when INVOICE_STATUS_DESCR_SUM_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STATUS_DESCR_SUM_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STATUS_DESCR_SUM_GROUP from dbo.DIM_INVOICE_STATUS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_AGENCY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AGENCY_ID, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when AGENCY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_NAME, CASE when AGENCY_IS_IOP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_IS_IOP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_IS_IOP, LAST_UPDATE_DATE from dbo.DIM_AGENCY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TRANSACTION_TYPES_VPS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TRANSACTION_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_TYPE, CASE when TRANSACTION_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_TYPE_DESCR, LAST_UPDATE_DATE from dbo.TRANSACTION_TYPES_VPS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_QUARTER",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Cal_QuarterID, SPS_QuarterID, QuarterDate, CASE when Cal_QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Cal_QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Cal_QuarterDesc, CASE when SPS_QuarterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SPS_QuarterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SPS_QuarterDesc, Cal_YearID, SPS_YearID, QuarterDuration, Cal_PrevQuarterID, SPS_PrevQuarterID, Cal_LYQuarterID, SPS_LYQuarterID from dbo.DIM_QUARTER",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TRANSACTION_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANS_TYPE_ID, CASE when TRANS_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANS_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANS_TYPE_DESCR, LAST_UPDATE_DATE from dbo.TRANSACTION_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ZI_STAGE_ID, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, CASE when INVOICE_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STATUS_DESCR, CASE when INVOICE_STATUS_DESCR_SUM_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STATUS_DESCR_SUM_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STATUS_DESCR_SUM_GROUP, INSERT_DATE, LAST_UPDATE_DATE from dbo.DIM_INVOICE_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_STATUS_BACKUP",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ZI_STAGE_ID, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, CASE when INVOICE_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STATUS_DESCR, CASE when INVOICE_STATUS_DESCR_SUM_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STATUS_DESCR_SUM_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STATUS_DESCR_SUM_GROUP, INSERT_DATE, LAST_UPDATE_DATE from dbo.DIM_INVOICE_STATUS_BACKUP",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_BUBBLE_CATEGORY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BUBL_CAT_ID, CASE when BUBL_CAT_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BUBL_CAT_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BUBL_CAT_CODE, CASE when BUBL_CAT_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BUBL_CAT_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BUBL_CAT_DESC, BUBL_CAT_SOURCE_ID, CASE when BUBL_CAT_SOURCE_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BUBL_CAT_SOURCE_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BUBL_CAT_SOURCE_DESC, BUBL_CAT_IX, BUBL_CAT_LEVEL, CASE when BUBL_DISP_ORDER is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BUBL_DISP_ORDER, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BUBL_DISP_ORDER, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.DIM_BUBBLE_CATEGORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_FACILITY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when FACILITY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_NAME, AGENCY_ID, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when AGENCY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_NAME, CASE when AGENCY_IS_IOP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_IS_IOP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_IS_IOP, FACILITY_BITMASK_ID, LAST_UPDATE_DATE from dbo.DIM_FACILITY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "NTTA_TOLL_LOCATIONS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select OBJECTID, FROM_STATIION, CASE when CORRIDOR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CORRIDOR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CORRIDOR, CASE when ROADWAY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROADWAY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROADWAY_NAME, CASE when ROADWAY_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROADWAY_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROADWAY_TYPE, CASE when ROADWAY_DESCRIPTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROADWAY_DESCRIPTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROADWAY_DESCRIPTION, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when RITE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RITE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RITE_NAME, CASE when TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TYPE, X_COORD, Y_COORD from dbo.NTTA_TOLL_LOCATIONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_qtr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_day_qtr_bgn, cal_day_qtr_ix, cal_days_qtr, cal_day_qtr, CASE when cal_day_qtr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_sid, CASE when cal_day_qtr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_desc_1, CASE when cal_day_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_desc_2 from land_perm.cal_day_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PLAZA_GIS_DATA",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CORRIDOR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CORRIDOR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CORRIDOR, CASE when ROADWAY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROADWAY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROADWAY_NAME, CASE when ROADWAY_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROADWAY_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROADWAY_TYPE, CASE when ROADWAY_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROADWAY_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROADWAY_DESC, STATUS, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when RITE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RITE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RITE_NAME, CASE when TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TYPE, TOLLED_LANES, X_COORD, Y_COORD, POSTCODE, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY from dbo.PLAZA_GIS_DATA",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_qtr_bgn, cal_comp_qtr_bgn, cal_comp_bgn, cal_comp_end, cal_qtr_x_bgn, cal_qtr_x_end from land.cal_qtr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_qtr_bgn, cal_comp_qtr_bgn, cal_comp_bgn, cal_comp_end, cal_qtr_x_bgn, cal_qtr_x_end, etl_sid, etl_chg from stage.cal_qtr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PLAZA_MILEAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PLAZA_ID, CASE when LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_DIRECTION, MILEAGE from dbo.PLAZA_MILEAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PLAZA_COUNTY_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, CASE when LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_DIRECTION, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when SUB_AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUB_AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUB_AGENCY_ABBREV, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY from dbo.PLAZA_COUNTY_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PARTITION_AS_OF_DATE_INFO",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TABLE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TABLE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TABLE_NAME, PARTITION_NBR, RANGE_FROM_EXCLUDING, RANGE_TO_INCLUDING, INSERT_DATE from dbo.PARTITION_AS_OF_DATE_INFO",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ALERT_BY_TRAN_CNT_DIM_LANE_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, IS_ATIVE, IS_MANUAL from dbo.ALERT_BY_TRAN_CNT_DIM_LANE_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "POS_LOCATIONS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select POS_ID, CASE when POS_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POS_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POS_NAME, LAST_UPDATE_DATE from dbo.POS_LOCATIONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_REJECT_TYPE_REVIEW_STATUS_IMAGE_QUALITY_RPT_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, CASE when VIOL_REJECT_TYPE_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE_DESCR, CASE when REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEW_STATUS, CASE when REV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REV_STATUS_DESCR, B_All_IMAGE_COUNT, C_OCR_FAILED, D_REJECTED_MANUAL_REVIEW, F_REJECTED_PAPER_PLATE, G_PLATE_OBSTRUCTION, H_NO_PLATE, I_NOT_REVIEWED, J_INCOMPLETE_IMAGE, K_BLACK_IMAGE, L_NO_ROI, M_UNCLEAR_IMAGE, N_UNKNOWN_STATE, Q_OCR_PASSED, S_REVIEWED_AND_EDITED, T_REVIEWED_NO_EDIT, Y_FIRST_RESPONDER, Z_OUT_OF_COUNTRY, AA_GOVERNMENT_PLATE, AB_CLASS_MISMATCH, AC_NOT_REVIEWED from dbo.VIOL_REJECT_TYPE_REVIEW_STATUS_IMAGE_QUALITY_RPT_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_MONTH",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Cal_MonthID, SPS_MonthID, MonthDate, CASE when MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MonthDesc, Cal_MonthOfYear, Sps_MonthOfYear, Cal_QuarterID, Sps_QuarterID, Cal_YearID, Sps_YearID, MonthDuration, PrevMonthID, Cal_LQMonthID, Sps_LQMonthID, LYMonthID, CASE when P2MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P2MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P2MonthDesc, P3MonthID, CASE when P3MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P3MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P3MonthDesc, P4MonthID, CASE when P4MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P4MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P4MonthDesc, P5MonthID, CASE when P5MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P5MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P5MonthDesc, P6MonthID, CASE when P6MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P6MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P6MonthDesc, P7MonthID, CASE when P7MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P7MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P7MonthDesc, P8MonthID, CASE when P8MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P8MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P8MonthDesc, P9MonthID, CASE when P9MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P9MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P9MonthDesc, P10MonthID, CASE when P10MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P10MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P10MonthDesc, P11MonthID, CASE when P11MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P11MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P11MonthDesc, P12MonthID, CASE when P12MonthDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(P12MonthDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as P12MonthDesc, PrevLYMonthid, LYP3Monthid, LYP4Monthid, LYP5Monthid, LYP6Monthid, LYP7Monthid, LYP8Monthid, LYP9Monthid, LYP10Monthid, LYP11Monthid, LYP12Monthid from dbo.DIM_MONTH",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Service_Tables_To_Save",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when SCHEMA_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SCHEMA_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SCHEMA_NAME, CASE when TABLE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TABLE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TABLE_NAME, Row_Count, [REFERENCES], Last_Update_Date, SAVE_TABLE, MOVE_BEFORE, DONE from dbo.Service_Tables_To_Save",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TAG_TYPES_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TAG_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE, CASE when TAG_ID_BEGIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID_BEGIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID_BEGIN, CASE when TAG_ID_END is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID_END, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID_END, CASE when TAG_MODEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_MODEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_MODEL, QTY from dbo.TAG_TYPES_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TAG_ID_TAG_TYPES_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when TAG_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE, TAG_ID_BEGIN, TAG_ID_END, CASE when TAG_MODEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_MODEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_MODEL, QTY from dbo.TAG_ID_TAG_TYPES_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LANE_GIS_DATA",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS, CASE when LANE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_NAME, CASE when TOLL_LOCATION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TOLL_LOCATION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TOLL_LOCATION, CASE when DESCRIPTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DESCRIPTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DESCRIPTION, CASE when TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TYPE, PLAZA_ID, ID, CASE when SOURCE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE, CASE when Lane_Direction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Lane_Direction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Lane_Direction, POSTCODE, CASE when PC_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PC_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PC_NAME, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, Longitude, Latitude from dbo.LANE_GIS_DATA",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_STATE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when STATE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE_CODE, CASE when STATE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE_NAME, STATE_LATITUDE, STATE_LONGITUDE, OUT_OF_STATE_IND from dbo.DIM_STATE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LANE_SEGMENT",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when SEGMENT_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SEGMENT_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SEGMENT_NAME, CASE when SEGMENT_START is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SEGMENT_START, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SEGMENT_START, CASE when SEGMENT_END is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SEGMENT_END, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SEGMENT_END from dbo.DIM_LANE_SEGMENT",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_yr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_day_yr_bgn, cal_day_yr_ix, cal_days_yr, cal_day_yr, cal_day_sea, cal_day_qtr, cal_day_prd, cal_day_wk, cal_wk_yr, CASE when cal_day_yr_sid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_sid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_sid, CASE when cal_day_yr_desc_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_desc_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_desc_1, CASE when cal_day_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_desc_2 from land_perm.cal_day_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ALERT_BY_TRAN_CNT_DIM_LANE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, LANY_ID, IS_MANUAL, IS_ATIVE from dbo.ALERT_BY_TRAN_CNT_DIM_LANE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ALERT_BY_TRAN_CNT_DIM_LANE_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, LANY_ID, IS_ATIVE, IS_MANUAL from dbo.ALERT_BY_TRAN_CNT_DIM_LANE_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VB_LANES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VBL_ID, LANE_ID, VBL_START, VBL_END, INSERT_DATE, LAST_UPDATE_DATE from dbo.VB_LANES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VB_LANES_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VBL_ID, LANE_ID, VBL_START, VBL_END, LAST_UPDATE_DATE from dbo.VB_LANES_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_UNINVOICED_PAYMENT_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID, date_paid, pos_id, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE from dbo.FACT_INVOICE_UNINVOICED_PAYMENT_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PLAZA",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, CASE when PLAZA_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_NAME, PLAZA_LATITUDE, PLAZA_LONGITUDE, ZIP_CODE, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when FACILITY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_NAME, AGENCY_ID, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when AGENCY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_NAME, CASE when AGENCY_IS_IOP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_IS_IOP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_IS_IOP, LAST_UPDATE_DATE from dbo.DIM_PLAZA",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PLAZA_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, CASE when PLAZA_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_NAME, PLAZA_LATITUDE, PLAZA_LONGITUDE, ZIP_CODE, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when FACILITY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_NAME, AGENCY_ID, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when AGENCY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_NAME, CASE when AGENCY_IS_IOP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_IS_IOP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_IS_IOP, LAST_UPDATE_DATE from dbo.DIM_PLAZA_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_WEEK",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select WeekID, WeekDate, CASE when WeekDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WeekDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WeekDesc, WeekOfYear, MonthID, QuarterID, YearID from dbo.DIM_WEEK",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_wk_bgn, cal_comp_wk_bgn, cal_comp_bgn, cal_comp_end, cal_wk_x_bgn, cal_wk_x_end from land.cal_wk_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_wk_bgn, cal_comp_wk_bgn, cal_comp_bgn, cal_comp_end, cal_wk_x_bgn, cal_wk_x_end, etl_sid, etl_chg from stage.cal_wk_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CITY_GROUPING",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CITY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITY, CASE when STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE, CASE when CITY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITY_GROUP, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, CAST(LAST_UPDATE_DATE AS DATETIME2(6)) AS LAST_UPDATE_DATE from dbo.CITY_GROUPING",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LANE_PREV",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, CASE when LANE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_NAME, CASE when LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_DIRECTION, PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, CASE when PLAZA_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_NAME, PLAZA_LATITUDE, PLAZA_LONGITUDE, CASE when SUB_FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUB_FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUB_FACILITY_ABBREV, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when FACILITY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_NAME, FACILITY_BITMASK_ID, CASE when SUB_AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUB_AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUB_AGENCY_ABBREV, AGENCY_ID, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when AGENCY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_NAME, CASE when AGENCY_IS_IOP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_IS_IOP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_IS_IOP, INSERT_DATE, LAST_UPDATE_DATE, PLAZA_SORT_ORDER, LANY_ID from dbo.DIM_LANE_PREV",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LANE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, CASE when LANE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_NAME, CASE when LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_DIRECTION, PLAZA_ID, CASE when PLAZA_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_ABBREV, CASE when PLAZA_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_NAME, PLAZA_LATITUDE, PLAZA_LONGITUDE, ZIP_CODE, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, CASE when SUB_FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUB_FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUB_FACILITY_ABBREV, FACILITY_ID, CASE when FACILITY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_ABBREV, CASE when FACILITY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FACILITY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FACILITY_NAME, FACILITY_BITMASK_ID, CASE when SUB_AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SUB_AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SUB_AGENCY_ABBREV, AGENCY_ID, CASE when AGENCY_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ABBREV, CASE when AGENCY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_NAME, CASE when AGENCY_IS_IOP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_IS_IOP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_IS_IOP, LANY_ID, MILEAGE, PLAZA_SORT_ORDER, ACTIVE, LAST_UPDATE_DATE from dbo.DIM_LANE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_prd_bgn, cal_comp_prd_bgn, cal_comp_bgn, cal_comp_end, cal_prd_x_bgn, cal_prd_x_end from land.cal_prd_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_prd_bgn, cal_comp_prd_bgn, cal_comp_bgn, cal_comp_end, cal_prd_x_bgn, cal_prd_x_end, etl_sid, etl_chg from stage.cal_prd_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_DAY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DayDate, DayID, PrevDayID, Cal_MonthID, Sps_MonthID, Cal_QuarterID, Sps_QuarterID, Cal_YearID, Sps_YearID, PrevDayDate, LMDayDate, Cal_LQDayDate, Sps_LQDayDate, LYDayDate, Cal_WeekID, Sps_WeekID, Cal_LWDayDate, SPS_LWDayDate, CASE when DayDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DayDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DayDesc, CASE when PrevDayDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrevDayDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrevDayDesc, IsWorkDay, IsWeekday, IsWeekend, WorkDaysInMonth, WorkDaysLeftInMonth, WorkDaysUsedInMonth, DaysInMonth, LastModified from dbo.DIM_DAY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATORS_STAGE_LICENSE_PLATE_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE from dbo.VIOLATORS_STAGE_LICENSE_PLATE_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_DATE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DATE, CASE when MONTH_WEEK is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MONTH_WEEK, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MONTH_WEEK, CASE when DATE_DAY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_DAY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_DAY, CASE when DATE_FULL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_FULL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_FULL, CASE when DATE_MONTH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_MONTH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_MONTH, CASE when DATE_YEAR_MONTH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_YEAR_MONTH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_YEAR_MONTH, CASE when DATE_QUARTER is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_QUARTER, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_QUARTER, CASE when DATE_YEAR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_YEAR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_YEAR, CASE when DAY_OF_WEEK_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DAY_OF_WEEK_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DAY_OF_WEEK_NAME, CASE when BUSINESS_DAY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BUSINESS_DAY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BUSINESS_DAY, CASE when WEEKEND is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WEEKEND, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WEEKEND, CASE when HOLIDAY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HOLIDAY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HOLIDAY, CASE when HOLIDAY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HOLIDAY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HOLIDAY_NAME from dbo.DIM_DATE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ZIPCODE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ZIPCODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIPCODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIPCODE, ZIPCODE_LATITUDE, ZIPCODE_LONGITUDE, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, CASE when COUNTY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY_GROUP, CAST(INSERT_DATE AS DATETIME2(6)) AS INSERT_DATE, CAST(LAST_UPDATE_DATE AS DATETIME2(6)) AS LAST_UPDATE_DATE from dbo.DIM_ZIPCODE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VEHICLE_COLOR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VEHICLE_COLOR_ID, CASE when VEHICLE_COLOR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_COLOR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_COLOR, INSERT_DATE from dbo.DIM_VEHICLE_COLOR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_HV_ON_PAYMENTPLAN_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq from dbo.FACT_INVOICE_HV_ON_PAYMENTPLAN_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_TIME",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TIME_ID, CASE when HOUR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HOUR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HOUR, CASE when [12_HOUR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([12_HOUR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [12_HOUR], CASE when AM_PM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AM_PM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AM_PM, CASE when [30_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([30_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [30_MINUTE], CASE when [15_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([15_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [15_MINUTE], CASE when [10_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([10_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [10_MINUTE], CASE when [5_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([5_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [5_MINUTE], CASE when MINUTE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MINUTE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MINUTE, CASE when SECOND is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECOND, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECOND from dbo.DIM_TIME",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VPS_HOST_TRANSACTIONS_DIST_ON_VIOLATION_ID_DUPS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID from dbo.VPS_HOST_TRANSACTIONS_DIST_ON_VIOLATION_ID_DUPS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATIONS_STAGE_LICENSE_PLATE_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE from dbo.VIOLATIONS_STAGE_LICENSE_PLATE_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_HV_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, HVFlag from dbo.FACT_INVOICE_HV_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_PAYMENT",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, PAYMENT_TXN_ID, LicensePlateID, CASE when CARD_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CARD_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CARD_CODE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when VIOL_PAY_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_PAY_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_PAY_TYPE, CASE when PMT_TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TXN_TYPE, RETAIL_TRANS_ID, TRANS_DATE, TRANS_AMT, CASE when CREATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CREATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CREATED_BY, CASE when POS_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POS_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POS_NAME, INV_TOLL_AMT, INV_FEES_AMT, CASE when INVOICE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_TYPE, AMOUNT_DUE, VIOL_INVOICE_ID, VBI_VBI_INVOICE_ID, INSERT_DATE from dbo.FACT_VIOLATOR_PAYMENT",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VEHICLE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VEHICLE_ID, CASE when VEHICLE_MAKE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_MAKE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_MAKE, CASE when VEHICLE_MODEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_MODEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_MODEL, CASE when VEHICLE_YEAR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_YEAR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_YEAR, INSERT_DATETIME from dbo.DIM_VEHICLE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_day_bgn, cal_comp_day_bgn, cal_comp_bgn, cal_comp_end, cal_day_x_bgn, cal_day_x_end from land.cal_day_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, cal_x_mxm_id, cal_x_1x1_id, cal_day_bgn, cal_comp_day_bgn, cal_comp_bgn, cal_comp_end, cal_day_x_bgn, cal_day_x_end, etl_sid, etl_chg from stage.cal_day_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_UNINVOICED_PAYMENT_STAGE_1",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID, payment_date from dbo.FACT_INVOICE_UNINVOICED_PAYMENT_STAGE_1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PLAZA_PLAZA_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when SEGMENT_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SEGMENT_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SEGMENT_ID, FROM_FACILITY_ID, FROM_PLAZA_ID, CASE when FROM_LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FROM_LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FROM_LANE_DIRECTION, TO_FACILITY_ID, TO_PLAZA_ID, CASE when TO_LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TO_LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TO_LANE_DIRECTION, MIN_TIME, MAX_TIME from dbo.PLAZA_PLAZA_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PROCESS_LOG",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LOG_DATE, CASE when LOG_SOURCE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LOG_SOURCE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LOG_SOURCE, CASE when ELAPSED_TIME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ELAPSED_TIME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ELAPSED_TIME, CASE when LOG_MESSAGE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LOG_MESSAGE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LOG_MESSAGE, ROWS_AFFECTED from dbo.PROCESS_LOG",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACC_Months_For_Balance",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, POSTED_DATE from dbo.ACC_Months_For_Balance",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SUMMARY_CATEGORY_LEVEL_POSTED",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select POSTED_DAY_ID, LANE_ID, VCLY_ID, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, CASE when END_LEVEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(END_LEVEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as END_LEVEL, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, MANUAL_VIOL_FLAG, OUT_OF_STATE_IND, DELETED, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, INVOICE_STAGE_ID, IOP_FLAG, FLEET_FLAG, UnPursuable_FLAG, BAD_ADDRESS_FLAG, AMOUNT, TXN_CNT, POS_REV, EAR_REV, TOLL_PAID, SPLIT_AMOUNT, AMT_PAID, FEES_PAID, ADJ_REV, POSTED_REV from dbo.FACT_UNIFIED_VIOLATION_SUMMARY_CATEGORY_LEVEL_POSTED",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "IOP_TAGS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TT_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, LAST_UPDATE_DATE from dbo.IOP_TAGS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TOLL_TAGS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TT_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_STATUS, CASE when LAST_READ_LOC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_READ_LOC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_READ_LOC, LAST_READ_DATE, CASE when TAG_TYPE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_TYPE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_TYPE_CODE, CASE when OWNER_AGENCY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OWNER_AGENCY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OWNER_AGENCY, POS_ID, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.TOLL_TAGS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATIONS_ZIPCODE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, CASE when ZIP_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIP_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIP_CODE, LANE_ID, VIDEO_TXN_CNT from dbo.VIOLATIONS_ZIPCODE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "RPT_ITEM_68",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PMT_DATE, CASE when USER_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(USER_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as USER_NAME, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE, CASE when RECEIPT_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RECEIPT_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RECEIPT_ID, VTOLLED_INV_COUNT, VTOLLED_VIOL_COUNT, TOTAL_VTOLLED_AMOUNT, TOT_PMT_COUNT, TOT_PMT_AMT_COLLECTED, NUM_ACCTS_OPENED from dbo.RPT_ITEM_68",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LICENSE_PLATE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LICENSE_PLATE_ID, CASE when LICENSE_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICENSE_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICENSE_PLATE_NBR, CASE when LICENSE_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICENSE_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICENSE_PLATE_STATE from dbo.DIM_LICENSE_PLATE",
            "gcs_upload_flag": "FALSE"
        }
    ]
}