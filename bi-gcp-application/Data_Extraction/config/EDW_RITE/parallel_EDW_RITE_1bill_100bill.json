{
    "connection_string": "Driver=ODBC Driver 18 for SQL Server;Server=10.40.9.26,17001;Database=LND_TBOS;Trusted_Connection=yes;Encrypt=no;",
    "connection_details": {
        "driver": "ODBC Driver 18 for SQL Server",
        "server": "10.40.9.26,17001",
        "database": "EDW_RITE",
        "trusted_connection": "yes",
        "encrypt": "no",
        "username": "LoadMediumRC",
        "password_secret_id": "APS_DEV_MEDUIM_USERID_KEY",
        "secret_version": "1"
    },
    "gcs_bucket_name": "prj-ntta-ops-bi-devt-raw-data",
    "database_type": "SQLServer",
    "source_database": "EDW_RITE",
    "project_id": "prj-ntta-ops-bi-devt-svc-01",
    "chunk_file_size_gb": 1.0,
    "compression_type": "gzip",
    "parquet_file_page_size_bytes": 1048576,
    "output_folder": "D:\\gcp-data-transfer-csv\\Parallel_Data_Extraction\\priority_tables",
    "log_folder_path": "E:\\bcp_logs\\priority_tables",
    "max_process_count": 8,
    "file_type": ".csv",
    "bq_dataset_map": {
        "LND_TBOS": {
            "TollPlus": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TollPlus_"
            },
            "dbo": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "dbo_"
            },
            "Finance": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Finance_"
            },
            "History": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "History_"
            },
            "IOP": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "IOP_"
            },
            "Rbac": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Rbac_"
            },
            "TER": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TER_"
            },
            "TranProcessing": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TranProcessing_"
            },
            "CaseManager": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "CaseManager_"
            },
            "Court": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Court_"
            },
            "Inventory": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Inventory_"
            },
            "Notifications": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Notifications_"
            },
            "TSA": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TSA_"
            },
            "Utility": {
                "bq_dataset": "LND_TBOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Reporting": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Reporting_"
            },
            "docmgr": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "docmgr_"
            }
        },
        "EDW_TRIPS": {
            "dbo": {
                "bq_dataset": "EDW_TRIPS_APS",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_TRIPS_STAGE",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            }
        },
        "EDW_RITE": {
            "dbo": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": ""
            },
            "land": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "land_"
            },
            "land_perm": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "land_perm_"
            },
            "stage": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "stage_"
            }
        }
    },
    "log": {
        "log_level": "INFO",
        "log_name": "data_transfer_log",
        "labels": {}
    },
    "tables": [
        {
            "table_name": "FACT_VPS_EXCUSALS",
            "schema_name": "dbo",
            "id_field": "STATUS_DAY_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select STATUS_DAY_ID, CASE when TRANSACTION_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_TYPE, VIOL_DATE, INVOICE_DATE, E, VIOLATION_ID, LANE_VIOL_ID, CASE when LANE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_NAME, CASE when LIC_PLATE_INFO is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_INFO, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_INFO, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, CASE when EXCUSED_BY_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY_NAME, CASE when EXCUSED_REAS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REAS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REAS_DESCR, INVOICE_AMOUNT, TOLL_AMOUNT, ADMIN_FEE_AMOUNT, EXCUSED_TOLL_AMOUNT, EXCUSED_ADMIN_FEE_AMOUNT, EXCUSED_LATE_FEE_AMOUNT, PAID_INVOICE_FEE_AMOUNT, PAID_AMOUNT, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, VIOLATOR_ID, CASE when TRANSACTION_SOURCE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_SOURCE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_SOURCE, CASE when VIOLATOR_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_TYPE, CASE when VTOLL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VTOLL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VTOLL_TYPE, PAYMENT_TXN_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, WRITEOFF_FLAG, LANE_ID, EXCUSED_INV_ADMIN_FEE2_AMOUNT, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.FACT_VPS_EXCUSALS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_BALANCE_HISTORY_TGS_TRANS",
            "schema_name": "dbo",
            "id_field": "ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, DATE_ID, TOTAL_TOLL, TOTAL_CHARGE, BALANCE from dbo.FACT_BALANCE_HISTORY_TGS_TRANS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_BALANCE_HISTORY_TGS",
            "schema_name": "dbo",
            "id_field": "ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, DATE_ID, BALANCE, TOTAL_TOLL, TOTAL_CHARGE, CHARGE_AMOUNT, TOLL_AMOUNT, TOLL_CNT from dbo.FACT_BALANCE_HISTORY_TGS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_BALANCE_HISTORY_TGS_SUMMARY_STAGE",
            "schema_name": "dbo",
            "id_field": "ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, DATE_ID, TOTAL_TOLL, TOTAL_CHARGE, BALANCE from dbo.FACT_BALANCE_HISTORY_TGS_SUMMARY_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATION_PAYMENTS_SUMMARY_OLD",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LAST_INVOICE_ID, VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VIOLATOR_ID, IS_VTOLL, NBR_OF_PMTS, SHIFT_ID, POS_ID, PAYMENT_ID, CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, PAYMENT_DATE, DEPOSIT_DATE, TOLL_DUE, FEES_DUE, INV_TOLL_DUE, INV_FEES_DUE, VIOL_AMOUNT, VTOLL_AMOUNT, SPLIT_AMOUNT, INV_AMOUNT, TOLL_PAID, FEES_PAID from dbo.FACT_VIOLATION_PAYMENTS_SUMMARY_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATION_PAYMENTS_SUMMARY",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LAST_INVOICE_ID, VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VIOLATOR_ID, IS_VTOLL, NBR_OF_PMTS, SHIFT_ID, POS_ID, PAYMENT_ID, CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, PAYMENT_DATE, DEPOSIT_DATE, TOLL_DUE, FEES_DUE, INV_TOLL_DUE, INV_FEES_DUE, VIOL_AMOUNT, VTOLL_AMOUNT, SPLIT_AMOUNT, INV_AMOUNT, TOLL_PAID, FEES_PAID from dbo.FACT_VIOLATION_PAYMENTS_SUMMARY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATION_PAYMENTS",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MONTH_ID, DAY_ID, PAYMENT_ID, LAST_INVOICE_ID, VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VIOLATOR_ID, IS_VTOLL, PMNT_NBR, SHIFT_ID, POS_ID, PAYMENT_DATE, DEPOSIT_DATE, CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, TOLL_DUE, FEES_DUE, INV_TOLL_DUE, INV_FEES_DUE, SPLIT_AMOUNT, INV_AMOUNT from dbo.FACT_VIOLATION_PAYMENTS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATION_PAYMENTS_OLD",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MONTH_ID, DAY_ID, PAYMENT_ID, LAST_INVOICE_ID, VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VIOLATOR_ID, IS_VTOLL, PMNT_NBR, SHIFT_ID, POS_ID, PAYMENT_DATE, DEPOSIT_DATE, CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, TOLL_DUE, FEES_DUE, INV_TOLL_DUE, INV_FEES_DUE, SPLIT_AMOUNT, INV_AMOUNT from dbo.FACT_VIOLATION_PAYMENTS_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_UNPAID_INVOICE",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID, VIOLATOR_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, TOLL_DUE, PAYMENT_DATE, SPLIT_AMOUNT, FEES_PAID, TOLL_PAID from dbo.FACT_UNIFIED_UNPAID_INVOICE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "RETAIL_TRXN_DETAILS",
            "schema_name": "dbo",
            "id_field": "RETAIL_TRANS_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select RTD_ID, TRANS_DATE, CASE when TRANS_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANS_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANS_STATUS, DATE_CREATED, TRANS_TYPE_ID, RETAIL_TRANS_ID, CREDIT_SRC_ID1, INSERT_DATE, LAST_UPDATE_DATE from dbo.RETAIL_TRXN_DETAILS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VTOLLS_DETAIL_PREV",
            "schema_name": "dbo",
            "id_field": "TRANSACTION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, TRANSACTION_ID, LANE_VIOL_ID, VIOLATION_ID, TT_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, LANE_ID, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, LICENSE_PLATE_ID, VTOLL_SEND_DATE, VEHICLE_CLASS, VCLY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, POSTED_DATE, POS_REV, ACT_REV, LAST_UPDATE_DATE from dbo.FACT_VTOLLS_DETAIL_PREV",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VTOLLS_DETAIL",
            "schema_name": "dbo",
            "id_field": "TRANSACTION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, TRANSACTION_ID, LANE_VIOL_ID, VIOLATION_ID, TT_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, LANE_ID, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, LICENSE_PLATE_ID, VTOLL_SEND_DATE, VEHICLE_CLASS, VCLY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, POSTED_DATE, POS_REV, ACT_REV, LAST_UPDATE_DATE from dbo.FACT_VTOLLS_DETAIL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VPS_TGS_XREF",
            "schema_name": "dbo",
            "id_field": "TRANSACTION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANSACTION_ID, TTXN_ID from dbo.VPS_TGS_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_DETAIL_CURRENT_INVOICE_LEVEL_FLAG_DUPS_STAGE",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, VIOLATION_ID from dbo.FACT_INVOICE_DETAIL_CURRENT_INVOICE_LEVEL_FLAG_DUPS_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_DETAIL_VIOLATION_CURRENT_INVOICE_STAGE",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID from dbo.FACT_INVOICE_DETAIL_VIOLATION_CURRENT_INVOICE_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATION_HAS_BEEN_INVOICED_STAGE",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID from dbo.VIOLATION_HAS_BEEN_INVOICED_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATION_VB_VIOL_INVOICES_VBI",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, LAST_INVOICE_ID, VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VB_INVOICE_DATE, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TOLL_DUE, DELETE_STATUS from dbo.VIOLATION_VB_VIOL_INVOICES_VBI",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VB_INVOICE_VIOL",
            "schema_name": "dbo",
            "id_field": "VBI_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VBI_INVOICE_ID, VIOLATION_ID, TOLL_DUE, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, DATE_CREATED, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.VB_INVOICE_VIOL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATION_VB_VIOL_XREF",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, LAST_INVOICE_ID, VIOLATION_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, VBI_INVOICE_ID, VIOL_INVOICE_ID, VB_INVOICE_DATE, VIOL_INVOICE_DATE, TOLL_DUE, FINE_AMOUNT, DELETE_STATUS, CURRENT_FLAG from dbo.VIOLATION_VB_VIOL_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATION_VB_VIOL_XREF_OLD",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, LAST_INVOICE_ID, VIOLATION_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, VBI_INVOICE_ID, VIOL_INVOICE_ID, VB_INVOICE_DATE, VIOL_INVOICE_DATE, TOLL_DUE, FINE_AMOUNT, DELETE_STATUS, CURRENT_FLAG from dbo.VIOLATION_VB_VIOL_XREF_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VIOLATOR_ASOF",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, PARTITION_DATE, CASE when VIOLATOR_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_TYPE, CASE when VIOLATOR_FNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_FNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_FNAME, CASE when VIOLATOR_LNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_LNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_LNAME, CASE when VIOLATOR_FNAME2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_FNAME2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_FNAME2, CASE when VIOLATOR_LNAME2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_LNAME2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_LNAME2, CASE when PHONE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PHONE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PHONE_NBR, CASE when EMAIL_ADDR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EMAIL_ADDR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EMAIL_ADDR, VIOLATOR_ADDR_SEQ, CASE when ADDRESS1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS1, CASE when ADDRESS2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS2, CASE when CITY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITY, CASE when STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE, CASE when ZIP_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIP_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIP_CODE, CASE when PLUS4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLUS4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLUS4, CASE when ADDR_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDR_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDR_STATUS, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, CASE when VEHICLE_MAKE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_MAKE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_MAKE, CASE when VEHICLE_MODEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_MODEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_MODEL, CASE when VEHICLE_BODY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_BODY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_BODY, CASE when VEHICLE_YEAR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_YEAR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_YEAR, CASE when VEHICLE_COLOR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_COLOR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_COLOR, CASE when VIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIN, DATE_CREATED, HV_FLAG, PAYMENT_PLAN_FLAG, CAST(INSERT_DATE AS DATETIME2(6)) AS INSERT_DATE from dbo.DIM_VIOLATOR_ASOF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ICS_LANE_VIOL_IMAGES",
            "schema_name": "dbo",
            "id_field": "LANE_VIOL_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_VIOL_ID, CASE when IMAGE_LOCATION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_LOCATION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_LOCATION, CASE when IMAGE_NAME_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_NAME_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_NAME_1, CASE when IMAGE_NAME_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_NAME_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_NAME_2, CASE when IMAGE_NAME_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_NAME_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_NAME_3, CASE when IMAGE_NAME_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_NAME_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_NAME_4, CASE when IMAGE_NAME_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_NAME_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_NAME_5, CASE when IMAGE_NAME_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IMAGE_NAME_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IMAGE_NAME_6 from dbo.DIM_ICS_LANE_VIOL_IMAGES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_DETAIL_VIOLATION_LIFE_ROWNUM_STAGE",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATION_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VIOLATION_LIFE_ROWNUM from dbo.FACT_INVOICE_DETAIL_VIOLATION_LIFE_ROWNUM_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP_HISTORY_OLD",
            "schema_name": "dbo",
            "id_field": "TRIP_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRHL_ID, TART_ID, TRIP_ID, SECOND_ID, DAY_ID, TIME_ID, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, VIOLATOR_ID, LICENSE_PLATE_ID, VEHICLE_CLASS, LANE_ID, PLAZA_ID, FACILITY_ID, CASE when DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIRECTION, DURATION_MINUTES, AMOUNT from dbo.FACT_TRIP_HISTORY_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VPS_HOST_TRANSACTIONS_DIST_ON_VIOLATION_ID",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANSACTION_ID, VIOLATOR_ID, LANE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, TRANSACTION_DATE, VIOL_DATE, VIOL_TIME_ID, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, VIOLATION_ID, LANE_VIOL_ID, EARNED_REVENUE, POSTED_REVENUE, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when AGENCY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_CODE, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, CASE when REASON_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REASON_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REASON_CODE, POSTED_DATE, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, LAST_UPDATE_DATE from dbo.VPS_HOST_TRANSACTIONS_DIST_ON_VIOLATION_ID",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_ANALYSIS_DETAIL_STAGE_ONE",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, PARTITION_DATE, VIOLATION_ID, CURRENT_INVOICE_LEVEL_FLAG, VBI_INVOICE_ID, CASE when VB_INV_DATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VB_INV_DATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VB_INV_DATE, CASE when VB_INV_DATE_EXCUSED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VB_INV_DATE_EXCUSED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VB_INV_DATE_EXCUSED, VIOL_INVOICE_ID, CASE when CONVERTED_DATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CONVERTED_DATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CONVERTED_DATE, CASE when VIOL_INV_DATE_EXCUSED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_DATE_EXCUSED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_DATE_EXCUSED, VIOL_DATE, VIOL_TIME_ID, VIOL_POST_DATE, VIOL_PAID_DATE, VIOL_STATUS_DATE, VIOL_DATE_EXCUSED, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, LANE_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when INV_DTL_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INV_DTL_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INV_DTL_VIOL_STATUS, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, LAST_VIOLATOR_ID, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VPS_HOST_POSTED_REVENUE, VPS_HOST_POSTED_DATE, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, TOLL_DUE, VEHICLE_CLASS, AMT_PAID, AMT_PAID_ADJ, VIOL_AMT_PAID, VIOL_LEFT_ON_INV_FLAG, INSERT_DATE from dbo.FACT_INVOICE_ANALYSIS_DETAIL_STAGE_ONE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATIONS_DIST_ON_VIOLATION_ID",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, VIOLATION_ID, LANE_ID, LICENSE_PLATE_ID, LICENSE_PLATE_DMV_ID, VEHICLE_CLASS, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, VIOL_DATE, VIOL_TIME_ID, TOLL_DUE, TOLL_PAID, TRANSACTION_FILE_DETAIL_ID, POST_DATE, POST_TIME_ID, SUBSCRIBER_UNIQUE_ID, RECEIVED_DATE, RECEIVED_TIME_ID, HAS_NEVER_BEEN_INVOICED, HAS_CURRENT_ADDRESS, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, DATE_CREATED, LANE_VIOL_ID, STATUS_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, INSERT_DATE, LAST_UPDATE_DATE from dbo.VIOLATIONS_DIST_ON_VIOLATION_ID",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATIONS",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, VIOLATION_ID, LANE_ID, LICENSE_PLATE_ID, LICENSE_PLATE_DMV_ID, VEHICLE_CLASS, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, VIOL_DATE, VIOL_TIME_ID, TOLL_DUE, TOLL_PAID, TRANSACTION_FILE_DETAIL_ID, POST_DATE, POST_TIME_ID, SUBSCRIBER_UNIQUE_ID, RECEIVED_DATE, RECEIVED_TIME_ID, HAS_NEVER_BEEN_INVOICED, HAS_CURRENT_ADDRESS, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, DATE_CREATED, LANE_VIOL_ID, STATUS_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, INSERT_DATE, LAST_UPDATE_DATE from dbo.VIOLATIONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATIONS_DETAIL",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, LANE_ID, VIOLATION_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_DESCR, STATUS_DATE, VIOL_DATE, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, TOLL_DUE, TOLL_PAID, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, VCLY_ID, VEHICLE_CLASS, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, TT_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, DATE_EXCUSED, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, VIOLATOR_ID, CASE when REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEW_STATUS, CASE when REV_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REV_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REV_STATUS_DESCR, LANE_VIOL_ID, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, CASE when ORIGIN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ORIGIN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ORIGIN_TYPE, CASE when CURRENT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CURRENT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CURRENT_TYPE, TRANSACTION_FILE_DETAIL_ID, POST_DATE, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, FLEET_FLAG, LAST_UPDATE_DATE from dbo.FACT_VIOLATIONS_DETAIL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SNAPSHOT_DELETE_FROM_HISTORY",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TART_ID, MONTH_ID, CASE when POSTED_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POSTED_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POSTED_DATE_DIFF from dbo.FACT_UNIFIED_VIOLATION_SNAPSHOT_DELETE_FROM_HISTORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_INVOICE_OLD",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, VIOLATION_ID, LANE_VIOL_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, LANE_ID, VEHICLE_CLASS, VCLY_ID, LICENSE_PLATE_ID, VIOLATOR_ID, LAST_INVOICE_ID, VBI_INVOICE_ID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VIOL_INVOICE_ID, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, PAYMENT_DATE, DEPOSIT_DATE, POS_ID, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, INV_VIOLATIONS_CNT, INVOICE_TOLL_DUE, INVOICE_FEES_DUE, INVOICE_TOTAL_PAID, TOLL_DUE, FEES_DUE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, SPLIT_AMOUNT, TOLL_PAID, FEES_PAID, IS_VTOLL, CURRENT_FLAG, DELETE_STATUS from dbo.FACT_UNIFIED_VIOLATION_INVOICE_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CTE_VIOLATIONS_XREF",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MONTH_ID, DAY_ID, LANE_ID, VEHICLE_CLASS, VCLY_ID, LICENSE_PLATE_ID, LANE_VIOL_ID, VIOLATION_ID, LAST_INVOICE_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VBI_INVOICE_DATE, VI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, VIOLATOR_ID, FINE_AMOUNT, DELETE_STATUS, VBB_LN_BATCH_ID, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, CASE when DPS_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DPS_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DPS_INV_STATUS, CASE when CA_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, INV_TOLL_DUE, TOLL_DUE, INV_FEES_DUE, TOLL_PAID, CURRENT_FLAG from dbo.CTE_VIOLATIONS_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_INVOICE",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, VIOLATION_ID, LANE_VIOL_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, LANE_ID, VEHICLE_CLASS, VCLY_ID, LICENSE_PLATE_ID, VIOLATOR_ID, LAST_INVOICE_ID, VBI_INVOICE_ID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VIOL_INVOICE_ID, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, PAYMENT_DATE, DEPOSIT_DATE, POS_ID, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, INV_VIOLATIONS_CNT, INVOICE_TOLL_DUE, INVOICE_FEES_DUE, INVOICE_TOTAL_PAID, TOLL_DUE, FEES_DUE, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, SPLIT_AMOUNT, TOLL_PAID, FEES_PAID, IS_VTOLL, CURRENT_FLAG, DELETE_STATUS from dbo.FACT_UNIFIED_VIOLATION_INVOICE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATION_VB_VIOL_INVOICES",
            "schema_name": "dbo",
            "id_field": "LAST_INVOICE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, LANE_ID, VEHICLE_CLASS, VCLY_ID, LICENSE_PLATE_ID, LANE_VIOL_ID, VIOLATION_ID, LAST_INVOICE_ID, VBI_INVOICE_ID, VIOL_INVOICE_ID, VIOLATOR_ID, VBI_INVOICE_DATE, VI_INVOICE_DATE, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, INV_TOLL_DUE, TOLL_DUE, INV_FEES_DUE, FEES_DUE, TOLL_PAID, VTOLL_SEND_DATE, TT_ID, POSTED_DATE, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, POS_REV, INVOICE_STAGE_ID, CURRENT_FLAG, DELETE_STATUS from dbo.FACT_VIOLATION_VB_VIOL_INVOICES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SNAPSHOT_CHECK_IN_HISTORY",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TART_ID, MONTH_ID, CASE when LEVEL_0_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0_DIFF, CASE when LEVEL_1_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1_DIFF, CASE when LEVEL_2_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2_DIFF, CASE when LEVEL_3_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3_DIFF, CASE when LEVEL_4_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4_DIFF, CASE when LEVEL_5_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5_DIFF, CASE when LEVEL_6_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6_DIFF, CASE when LEVEL_7_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7_DIFF, CASE when LEVEL_8_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8_DIFF, CASE when LEVEL_9_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9_DIFF, CASE when LEVEL_10_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10_DIFF, CASE when DAY_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DAY_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DAY_ID_DIFF, CASE when PMTY_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMTY_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMTY_ID_DIFF, CASE when VCLY_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VCLY_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VCLY_ID_DIFF, CASE when AVI_TAG_STATUS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS_DIFF, CASE when LANE_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ID_DIFF, CASE when Local_Time_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Local_Time_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Local_Time_DIFF, CASE when EAR_REV_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EAR_REV_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EAR_REV_DIFF, CASE when POS_REV_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POS_REV_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POS_REV_DIFF, CASE when TXID_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXID_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXID_ID_DIFF, CASE when TRANSACTION_FILE_DETAIL_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_FILE_DETAIL_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_FILE_DETAIL_ID_DIFF, CASE when LANE_VIOL_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_ID_DIFF, CASE when VIOL_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_DATE_DIFF, CASE when AXLE_COUNT_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AXLE_COUNT_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AXLE_COUNT_DIFF, CASE when LANE_VIOL_STATUS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS_DIFF, CASE when LANE_REVIEW_STATUS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS_DIFF, CASE when VIOLATION_CODE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_CODE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_CODE_DIFF, CASE when VIOL_CREATED_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED_DIFF, CASE when LICENSE_PLATE_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICENSE_PLATE_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICENSE_PLATE_ID_DIFF, CASE when LIC_PLATE_NBR_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR_DIFF, CASE when LIC_PLATE_STATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE_DIFF, CASE when OUT_OF_STATE_IND_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OUT_OF_STATE_IND_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OUT_OF_STATE_IND_DIFF, CASE when REVIEW_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEW_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEW_DATE_DIFF, CASE when VIOL_REJECT_TYPE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE_DIFF, CASE when TOLL_DUE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TOLL_DUE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TOLL_DUE_DIFF, CASE when TOLL_PAID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TOLL_PAID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TOLL_PAID_DIFF, CASE when VIOLATION_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_ID_DIFF, CASE when STATUS_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_DATE_DIFF, CASE when VIOL_TYPE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE_DIFF, CASE when DRIVER_LIC_STATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE_DIFF, CASE when VIOLATOR_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATOR_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATOR_ID_DIFF, CASE when VIOL_STATUS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS_DIFF, CASE when TRANSACTION_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TRANSACTION_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TRANSACTION_ID_DIFF, CASE when DISPOSITION_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION_DIFF, CASE when VTOLL_SEND_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VTOLL_SEND_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VTOLL_SEND_DATE_DIFF, CASE when DATE_EXCUSED_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_EXCUSED_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_EXCUSED_DIFF, CASE when EXCUSED_REASON_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON_DIFF, CASE when EXCUSED_BY_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY_DIFF, CASE when TTXN_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TTXN_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TTXN_ID_DIFF, CASE when AMOUNT_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AMOUNT_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AMOUNT_DIFF, CASE when POSTED_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POSTED_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POSTED_DATE_DIFF, CASE when POSTED_DAY_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POSTED_DAY_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POSTED_DAY_ID_DIFF, CASE when SOURCE_CODE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE_DIFF, CASE when ACCT_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_ID_DIFF, CASE when TAG_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID_DIFF, CASE when TAG_AGENCY_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID_DIFF, CASE when DMV_STS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS_DIFF, CASE when TXN_NAME_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME_DIFF, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV_DIFF, CASE when LVL_TVL_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL_DIFF, CASE when VBI_INVOICE_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_INVOICE_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_INVOICE_ID_DIFF, CASE when VIOL_INVOICE_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INVOICE_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INVOICE_ID_DIFF, CASE when PAYMENT_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_DATE_DIFF, CASE when DEPOSITE_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DEPOSITE_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DEPOSITE_DATE_DIFF, CASE when SPLIT_AMOUNT_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SPLIT_AMOUNT_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SPLIT_AMOUNT_DIFF, CASE when FEES_PAID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FEES_PAID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FEES_PAID_DIFF, CASE when AMT_PAID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AMT_PAID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AMT_PAID_DIFF, CASE when VBI_INVOICE_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_INVOICE_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_INVOICE_DATE_DIFF, CASE when VBI_STATUS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS_DIFF, CASE when VI_INVOICE_DATE_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VI_INVOICE_DATE_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VI_INVOICE_DATE_DIFF, CASE when VIOL_INV_STATUS_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS_DIFF, CASE when INVOICE_STAGE_ID_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_STAGE_ID_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_STAGE_ID_DIFF, CASE when DELETED_DIFF is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELETED_DIFF, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELETED_DIFF from dbo.FACT_UNIFIED_VIOLATION_SNAPSHOT_CHECK_IN_HISTORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP_ANALYSIS",
            "schema_name": "dbo",
            "id_field": "TRIP_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRIP_ID, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, VIOLATOR_ID, LICENSE_PLATE_ID, VEHICLE_CLASS, TRIP_DURATION_MINUTES, TRIP_MILEAGE, TRIP_AMOUNT, TRANS_CNT, START_FACILITY_ID, START_PLAZA_ID, CASE when START_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(START_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as START_DIRECTION, START_DAY_ID, START_TIME_ID, END_FACILITY_ID, END_PLAZA_ID, CASE when END_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(END_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as END_DIRECTION, END_DAY_ID, END_TIME_ID from dbo.FACT_TRIP_ANALYSIS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_BALANCE_HISTORY_TGS_NEW",
            "schema_name": "dbo",
            "id_field": "ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, DATE_ID, BALANCE, END_BALANCE, TOTAL_DEBIT, TOTAL_CREDIT, TOTAL_TOLL_CNT, DEBIT, CREDIT, TOLL_CNT from dbo.FACT_BALANCE_HISTORY_TGS_NEW",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_BALANCE_HISTORY_TGS_COMPARE",
            "schema_name": "dbo",
            "id_field": "ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, DATE_ID, BALANCE, END_BALANCE, DEBIT, CREDIT, TOLL_CNT from dbo.FACT_BALANCE_HISTORY_TGS_COMPARE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VPS_HOST_TRANSACTIONS_STAGE_1",
            "schema_name": "dbo",
            "id_field": "VIOLATION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANSACTION_ID, VIOLATION_ID, LANE_VIOL_ID from dbo.VPS_HOST_TRANSACTIONS_STAGE_1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VPS_HOST_TRANSACTIONS_STAGE_2",
            "schema_name": "dbo",
            "id_field": "TRANSACTION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANSACTION_ID, VIOLATOR_ID from dbo.VPS_HOST_TRANSACTIONS_STAGE_2",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SUMMARY_CATEGORY_LEVEL_HIST",
            "schema_name": "dbo",
            "id_field": "LANE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_DATE, DAY_ID, LANE_ID, VCLY_ID, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, CASE when END_LEVEL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(END_LEVEL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as END_LEVEL, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, MANUAL_VIOL_FLAG, OUT_OF_STATE_IND, DELETED, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, INVOICE_STAGE_ID, IOP_FLAG, FLEET_FLAG, UnPursuable_FLAG, BAD_ADDRESS_FLAG, AMOUNT, TXN_CNT, POS_REV, EAR_REV, TOLL_PAID, SPLIT_AMOUNT, AMT_PAID, FEES_PAID, ADJ_REV, POSTED_REV from dbo.FACT_UNIFIED_VIOLATION_SUMMARY_CATEGORY_LEVEL_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_ANALYSIS_DETAIL_STAGE",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, PARTITION_DATE, VIOLATION_ID, CURRENT_INVOICE_LEVEL_FLAG, VBI_INVOICE_ID, VB_INV_DATE, VB_INV_DATE_EXCUSED, VIOL_INVOICE_ID, CONVERTED_DATE, VIOL_INV_DATE_EXCUSED, VIOL_DATE, VIOL_TIME_ID, VIOL_POST_DATE, VIOL_PAID_DATE, VIOL_STATUS_DATE, VIOL_DATE_EXCUSED, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, LANE_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when INV_DTL_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INV_DTL_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INV_DTL_VIOL_STATUS, CASE when LAST_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_VIOL_STATUS, LAST_VIOLATOR_ID, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VPS_HOST_POSTED_REVENUE, VPS_HOST_POSTED_DATE, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, TOLL_DUE_ON_VIOL, VEHICLE_CLASS, AMT_PAID, AMT_PAID_ADJ, VIOL_AMT_PAID, VIOL_LEFT_ON_INV_FLAG, INSERT_DATE from dbo.FACT_INVOICE_ANALYSIS_DETAIL_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_DETAIL_STAGE",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select INVOICE_CATEGORY_ID, VIOLATOR_ID, VBI_INVOICE_ID, VB_INV_DATE, VB_INV_DATE_EXCUSED, VIOL_INVOICE_ID, CONVERTED_DATE, VIOL_INV_DATE_EXCUSED, AMT_PAID, VIOL_AMT_PAID, VPS_HOST_POSTED_REV, VIOLATION_ID, VIOL_TIME_ID, VIOL_DATE, LANE_ID, TOLL_DUE_ON_VIOL, TOLL_DUE_ON_INV, VEHICLE_CLASS, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when INV_DTL_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INV_DTL_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INV_DTL_VIOL_STATUS, CASE when LAST_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_VIOL_STATUS, LAST_VIOLATOR_ID, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, VIOL_STATUS_DATE, VIOL_POST_DATE, VIOL_DATE_EXCUSED, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, VIOL_PAID_DATE, VPS_HOST_POSTED_REVENUE, VPS_HOST_POSTED_DATE, VIOL_LEFT_ON_INV_FLAG from dbo.FACT_INVOICE_DETAIL_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HOST_ICRS_XREF",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TART_ID, LANE_VIOL_ID from dbo.HOST_ICRS_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VPS_HOST_TRANSACTIONS",
            "schema_name": "dbo",
            "id_field": "TRANSACTION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, TRANSACTION_ID, LANE_VIOL_ID, VIOLATION_ID, VIOLATOR_ID, LANE_ID, VEHICLE_CLASS, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, LICENSE_PLATE_ID, VTOLL_SEND_DATE, POSTED_DATE, TRANSACTION_DATE, VIOL_DATE, VIOL_TIME_ID, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when REASON_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REASON_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REASON_CODE, CASE when AGENCY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_CODE, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, TT_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, EARNED_REVENUE, POSTED_REVENUE, LAST_UPDATE_DATE from dbo.VPS_HOST_TRANSACTIONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATIONS_SUMMARY_PURSUED_LEVEL_HIST",
            "schema_name": "dbo",
            "id_field": "DAY_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_DATE, DAY_ID, Cal_WeekID, Cal_MonthID, Cal_QuarterID, Cal_YearID, LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, VCLY_ID, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS, CASE when STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_DESCR, TXN_CNT, POS_REV, ACT_REV, ADJ_REV from dbo.FACT_VIOLATIONS_SUMMARY_PURSUED_LEVEL_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP_HISTORY_STAGE",
            "schema_name": "dbo",
            "id_field": "TRIP_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRHL_ID, TART_ID, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, TRIP_ID, LICENSE_PLATE_ID, SECOND_ID, DAY_ID, TIME_ID, CASE when VEHICLE_CLASS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_CLASS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_CLASS, CASE when LANE_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_DIRECTION, LANE_ID, PLAZA_ID, FACILITY_ID, MILEAGE, AMOUNT, DURATION_MINUTES, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE from dbo.FACT_TRIP_HISTORY_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ICRS_VPS_XREF",
            "schema_name": "dbo",
            "id_field": "LANE_VIOL_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_VIOL_ID, VIOLATION_ID, TRANSACTION_ID, STATUS_FLAG from dbo.ICRS_VPS_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_LANE_VIOLATIONS_DETAIL",
            "schema_name": "dbo",
            "id_field": "LANE_VIOL_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, LANE_ID, LANE_VIOL_ID, VIOL_DATE, VEHICLE_CLASS, VCLY_ID, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEW_STATUS, CASE when REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEW_STATUS_ABBREV, CASE when BUSINESS_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BUSINESS_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BUSINESS_TYPE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, TT_ID, TAG_STATUS, VEHICLE_SPEED, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, LICENSE_PLATE_ID, REVIEW_DATE, TOLL_DUE, TOLL_PAID, VIOLATION_CODE, CASE when REVIEWED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REVIEWED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as REVIEWED_BY, TRANSACTION_FILE_DETAIL_ID, VES_SERIAL_NO, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.FACT_LANE_VIOLATIONS_DETAIL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SNAPSHOT_OLD_B",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, TART_ID, DAY_ID, PMTY_ID, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, LANE_ID, Local_Time, EAR_REV, POS_REV, TXID_ID, TRANSACTION_FILE_DETAIL_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, OUT_OF_STATE_IND, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, TTXN_ID, AMOUNT, POSTED_DATE, POSTED_DAY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSITE_DATE, SPLIT_AMOUNT, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, DELETED, DATA_START_DATE, DATA_END_DATE from dbo.FACT_UNIFIED_VIOLATION_SNAPSHOT_OLD_B",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATIONS_SUMMARY_CATEGORY_LEVEL_HIST",
            "schema_name": "dbo",
            "id_field": "DAY_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_DATE, DAY_ID, Cal_WeekID, Cal_MonthID, Cal_QuarterID, Cal_YearID, LANE_ID, CASE when LANE_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_ABBREV, VCLY_ID, CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS, CASE when STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_DESCR, TXN_CNT, POS_REV, ACT_REV, ADJ_REV, AVI_HANDSHAKe from dbo.FACT_VIOLATIONS_SUMMARY_CATEGORY_LEVEL_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_PREV_FROM_2012",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, TART_ID, DAY_ID, PMTY_ID, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, LANE_ID, Local_Time, EAR_REV, POS_REV, TXID_ID, TRANSACTION_FILE_DETAIL_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, OUT_OF_STATE_IND, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, MANUAL_VIOL_FLAG, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, TTXN_ID, AMOUNT, IOP_REV, TOLL_REV, VTOLL_REV, IOP_FLAG, POSTED_DATE, POSTED_DAY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSIT_DATE, SPLIT_AMOUNT, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, VES_SERIAL_NO, BAD_ADDRESS_FLAG, FLEET_FLAG, UnPursuable_FLAG, ADJ_REV, POSTED_REV, DELETED, DATA_START_DATE, DATA_END_DATE from dbo.FACT_UNIFIED_VIOLATION_PREV_FROM_2012",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP_HISTORY",
            "schema_name": "dbo",
            "id_field": "TRIP_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRHL_ID, TART_ID, TRIP_ID, SECOND_ID, DAY_ID, TIME_ID, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, VIOLATOR_ID, LICENSE_PLATE_ID, VEHICLE_CLASS, LANE_ID, PLAZA_ID, FACILITY_ID, CASE when DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIRECTION, DURATION_MINUTES, MILEAGE, AMOUNT from dbo.FACT_TRIP_HISTORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATIONS_SUMMARY_HIST",
            "schema_name": "dbo",
            "id_field": "DAY_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_DATE, DAY_ID, LANE_ID, VCLY_ID, CASE when NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NAME, CASE when STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS, CASE when STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATUS_DESCR, TXN_CNT, POS_REV, ACT_REV from dbo.FACT_VIOLATIONS_SUMMARY_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SNAPSHOT_OLD",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, TART_ID, DAY_ID, PMTY_ID, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, LANE_ID, Local_Time, EAR_REV, POS_REV, TXID_ID, TRANSACTION_FILE_DETAIL_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, OUT_OF_STATE_IND, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, MANUAL_VIOL_FLAG, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, TTXN_ID, AMOUNT, IOP_REV, TOLL_REV, VTOLL_REV, IOP_FLAG, POSTED_DATE, POSTED_DAY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSIT_DATE, SPLIT_AMOUNT, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, VES_SERIAL_NO, BAD_ADDRESS_FLAG, FLEET_FLAG, UnPursuable_FLAG, ADJ_REV, POSTED_REV, DELETED, DATA_START_DATE, DATA_END_DATE from dbo.FACT_UNIFIED_VIOLATION_SNAPSHOT_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_SNAPSHOT",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, TART_ID, DAY_ID, PMTY_ID, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, LANE_ID, Local_Time, EAR_REV, POS_REV, TXID_ID, TRANSACTION_FILE_DETAIL_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, OUT_OF_STATE_IND, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, MANUAL_VIOL_FLAG, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, TTXN_ID, AMOUNT, IOP_REV, TOLL_REV, VTOLL_REV, IOP_FLAG, POSTED_DATE, POSTED_DAY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSIT_DATE, SPLIT_AMOUNT, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, VES_SERIAL_NO, BAD_ADDRESS_FLAG, FLEET_FLAG, UnPursuable_FLAG, ADJ_REV, POSTED_REV, DELETED, DATA_START_DATE, DATA_END_DATE from dbo.FACT_UNIFIED_VIOLATION_SNAPSHOT",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP_ANALYSIS_NEW_SET",
            "schema_name": "dbo",
            "id_field": "TRIP_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRIP_ID, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, VIOLATOR_ID, LICENSE_PLATE_ID, VEHICLE_CLASS, TRIP_DURATION_MINUTES, TRIP_AMOUNT, START_FACILITY_ID, START_PLAZA_ID, CASE when START_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(START_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as START_DIRECTION, START_DAY_ID, START_TIME_ID, END_FACILITY_ID, END_PLAZA_ID, CASE when END_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(END_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as END_DIRECTION, END_DAY_ID, END_TIME_ID from dbo.FACT_TRIP_ANALYSIS_NEW_SET",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_ANALYSIS_DETAIL_FINAL",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, PARTITION_DATE, VIOLATION_ID, CURRENT_INVOICE_LEVEL_FLAG, VBI_INVOICE_ID, VB_INV_DATE, VB_INV_DATE_EXCUSED, VIOL_INVOICE_ID, CONVERTED_DATE, VIOL_INV_DATE_EXCUSED, PAID_DATE, POS_ID, VIOL_DATE, VIOL_TIME_ID, VIOL_POST_DATE, VIOL_PAID_DATE, VIOL_STATUS_DATE, VIOL_DATE_EXCUSED, CASE when VIOLATION_OR_ZIPCASH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATION_OR_ZIPCASH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATION_OR_ZIPCASH, LANE_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when INV_DTL_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INV_DTL_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INV_DTL_VIOL_STATUS, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, LAST_VIOLATOR_ID, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VPS_HOST_POSTED_REVENUE, VPS_HOST_POSTED_DATE, CASE when VIOL_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_TYPE, INVOICE_AMT, TOLL_DUE, VEHICLE_CLASS, ZI_LATE_FEES, VI_LATE_FEES, ADMIN_FEE, ADMIN_FEE2, AMT_PAID, AMT_PAID_DISC, AMT_PAID_ADJ, VIOL_AMT_PAID, VIOL_LEFT_ON_INV_FLAG, INSERT_DATE from dbo.FACT_INVOICE_ANALYSIS_DETAIL_FINAL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP_ANALYSIS_OLD",
            "schema_name": "dbo",
            "id_field": "TRIP_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRIP_ID, CASE when TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_TYPE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, VIOLATOR_ID, LICENSE_PLATE_ID, VEHICLE_CLASS, TRIP_DURATION_MINUTES, TRIP_AMOUNT, START_FACILITY_ID, START_PLAZA_ID, CASE when START_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(START_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as START_DIRECTION, START_DAY_ID, START_TIME_ID, END_FACILITY_ID, END_PLAZA_ID, CASE when END_DIRECTION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(END_DIRECTION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as END_DIRECTION, END_DAY_ID, END_TIME_ID from dbo.FACT_TRIP_ANALYSIS_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "AVI_TRANSACTIONS",
            "schema_name": "dbo",
            "id_field": "TRANSACTION_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANSACTION_ID, TRANSACTION_DATE, CASE when AGENCY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_CODE, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, FACILITY_ID, PLAZA_ID, LANE_ID, DISPOSITION, REASON_CODE, EARNED_CLASS, EARNED_REVENUE, POSTED_CLASS, POSTED_REVENUE, POSTED_DATE_TIME, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when TXID_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXID_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXID_ID, CREATION_DATE, ACCT_ID, TRANSACTION_FILE_DETAIL_ID, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.AVI_TRANSACTIONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_INVOICE_ANALYSIS",
            "schema_name": "dbo",
            "id_field": "VIOLATOR_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, PARTITION_DATE, DATE_BATCH_PRODUCED, VBI_INVOICE_ID, VB_INV_DATE, VB_INV_DUE_DATE, VB_INV_DATE_EXCUSED, CASE when VB_INV_EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VB_INV_EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VB_INV_EXCUSED_BY, VB_INV_DATE_MODIFIED, ZI_STAGE_ID, INVOICE_STAGE_ID, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, CONVERTED_DATE, VIOL_INV_STATUS_DATE, VIOL_INV_DUE_DATE, VIOL_INV_DATE_EXCUSED, CASE when VIOL_INV_EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_EXCUSED_BY, VIOL_INV_DATE_MODIFIED, VIOL_INVOICE_ID, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, [3NNP_INV_DATE], FIRST_PAID_DATE, LAST_PAID_DATE, CASE when PAID_DATE_LIST is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAID_DATE_LIST, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAID_DATE_LIST, PAID_DATE_COUNT, FIRST_POS_ID, LAST_POS_ID, CASE when POS_NAME_LIST is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(POS_NAME_LIST, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as POS_NAME_LIST, POS_COUNT, CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when DELIVERY_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY_CODE, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM, CASE when PAYMENT_CREATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_CREATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_CREATED_BY, CASE when CA_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS, FIRST_CA_COMPANY_ID, LAST_CA_COMPANY_ID, CASE when CA_COMPANY_NAME_LIST is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_COMPANY_NAME_LIST, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_COMPANY_NAME_LIST, CA_COMPANY_COUNT, FIRST_CA_FILE_GEN_DATE, LAST_CA_FILE_GEN_DATE, CASE when CA_FILE_GEN_DATE_LIST is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_FILE_GEN_DATE_LIST, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_FILE_GEN_DATE_LIST, CA_FILE_GEN_DATE_COUNT, CASE when FIRST_CITATION_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FIRST_CITATION_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FIRST_CITATION_NBR, CASE when LAST_CITATION_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_CITATION_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_CITATION_NBR, CASE when CITATION_NBR_LIST is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITATION_NBR_LIST, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITATION_NBR_LIST, CITATION_NBR_COUNT, FIRST_CA_ACCT_ID, LAST_CA_ACCT_ID, CASE when CA_ACCT_ID_LIST is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_ACCT_ID_LIST, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_ACCT_ID_LIST, CA_ACCT_ID_COUNT, COURT_ACTION_MAIL_DATE, CASE when DPS_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DPS_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DPS_INV_STATUS, INVOICE_AMT, INVOICE_AMT_DISC, INVOICE_TOLLS_PAID_CALC, TOLL_DUE, ZI_LATE_FEES, VI_LATE_FEES, ADMIN_FEE, ADMIN_FEE2, AMT_PAID, VIOL_COUNT, CLOSE_OUT_ELIGIBILITY_DATE, CASE when CLOSE_OUT_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_STATUS, CLOSE_OUT_DATE, CASE when CLOSE_OUT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CLOSE_OUT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CLOSE_OUT_TYPE, CURRENT_INVOICE_FLAG, TOLL_DUE_LEFT_ON_INV, TXN_CNT_LEFT_ON_INV, CAST(INSERT_DATE AS DATETIME2(6)) AS INSERT_DATE from dbo.FACT_INVOICE_ANALYSIS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRANSACTION_SUMMARY",
            "schema_name": "dbo",
            "id_field": "ZC_TT_ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ZC_TT_ACCT_ID, TOLL_TAG_TRANS_COUNT, ZC_TRANS_COUNT, CASE when TransactionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionType, TRANSACTION_DATE, TRANSACTION_TIME_ID, CASE when ZIP_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIP_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIP_CODE, ZIPCODE_LATITUDE, ZIPCODE_LONGITUDE, CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, CASE when COUNTY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY_GROUP, CASE when ACCT_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_STATUS_DESCR, CASE when ACCT_TAG_STATUS_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_TAG_STATUS_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_TAG_STATUS_DESCR, LANE_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS from dbo.FACT_TRANSACTION_SUMMARY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HOST_ICRS_VPS_TGS_XREF",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TART_ID, LANE_VIOL_ID, VIOLATION_ID, TRANSACTION_ID, TTXN_ID, TRANSACTION_FILE_DETAIL_ID from dbo.HOST_ICRS_VPS_TGS_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_NET_REV_TFC_EVTS_SUMMARY",
            "schema_name": "dbo",
            "id_field": "DAY_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, LANE_ID, PMTY_ID, VCLY_ID, LOCAL_TIME, TIME_ID, TXN_CNT, EAR_REV, ACT_REV from dbo.FACT_NET_REV_TFC_EVTS_SUMMARY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TOLL_TRANSACTIONS",
            "schema_name": "dbo",
            "id_field": "TTXN_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, TTXN_ID, AMOUNT, TRANSACTION_DATE, TRANSACTION_TIME_ID, CASE when CREDITED_FLAG is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CREDITED_FLAG, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CREDITED_FLAG, DATE_CREDITED, DATE_CREDITED_TIME_ID, ACCT_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, LANE_ID, CASE when VEHICLE_CLASS_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VEHICLE_CLASS_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VEHICLE_CLASS_CODE, TT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, LICENSE_PLATE_ID, CASE when LIC_PLATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE, CASE when LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_STATE, POSTED_DATE, POSTED_TIME_ID, TRANSACTION_FILE_DETAIL_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, SOURCE_TRXN_ID, TRANS_TYPE_ID, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.FACT_TOLL_TRANSACTIONS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_NET_REV_TFC_EVTS_NEW_SET1",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, TART_ID, LANE_ID, ATD_ID, OPNM_ID, PMTY_ID, VCLY_ID, TIME_ID, DATE_TIME, Local_Time, EAR_REV, EXP_REV, ACT_REV, ATT_FARE, MISCLASS_CT, SIGN_FLG, CASE when ADJ_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADJ_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADJ_STATUS, TXID_ID, VES_SERIAL_NO, VES_DATE_TIME, TRANSACTION_FILE_DETAIL_ID, AVI_HANDSHAKE, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, VEH_SPEED, DELETED, LAST_UPDATE_DATE from dbo.FACT_NET_REV_TFC_EVTS_NEW_SET1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TA_TXN_AVI_DATAS",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, CASE when AVI_READER_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_READER_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_READER_NBR, CASE when AVI_TAG_CLASS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_CLASS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_CLASS, CASE when AVI_TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_ID, CASE when AVI_PLAZA_AND_LN_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_PLAZA_AND_LN_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_PLAZA_AND_LN_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, CASE when AVI_HANDSHAKE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_HANDSHAKE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_HANDSHAKE, CASE when AVI_YEAR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_YEAR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_YEAR, CASE when AVI_MONTH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_MONTH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_MONTH, CASE when AVI_DAY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_DAY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_DAY, CASE when AVI_HOUR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_HOUR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_HOUR, CASE when AVI_MINUTE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_MINUTE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_MINUTE, CASE when AVI_SECOND is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_SECOND, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_SECOND, TAD_ID, TART_ID, CASE when TAG_AGENCY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.TA_TXN_AVI_DATAS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TA_TXN_CLASS_DATAS",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, REV_AXLE_CT, ATT_AXLES, ATT_CLASS, ATT_FARE, PRE_AXLES, PRE_CLASS, PRE_FARE, MID_LOOP_CTS, ENTRY_LOOP_CTS, EXIT_LOOP_CTS, CASE when UNUSUAL_OCC_CD is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UNUSUAL_OCC_CD, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UNUSUAL_OCC_CD, CASE when DISCREPANCY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISCREPANCY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISCREPANCY, CD_ID, TART_ID, FWD_AXLE_CT, FWD_AXLES, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.TA_TXN_CLASS_DATAS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TA_TXN_RITE_DATAS",
            "schema_name": "dbo",
            "id_field": "TART_TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, VEH_SPEED, CASE when EVENT_IND is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EVENT_IND, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EVENT_IND, LOGON_TIME, CASE when ACTIVE_VLT_CH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACTIVE_VLT_CH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACTIVE_VLT_CH, TURD_ID, TART_TART_ID, LOGON_MEANS, EMPL_ID, VPLT_ID, REV_LANE_IND, ISF_SERIAL_NO, VES_SERIAL_NO, VES_DATE_TIME, VES_DATE_TIME_LOCAL, STANDBY_MODE_STATUS, ACM_STATUS, AVI_STATUS, VEH_AVC_STATUS, TREADLE_AVC_STATUS, VES_TRIGGER_STATUS, VES_STATUS, ATT_TERM_STATUS, FAC_SRVR_AVI_STATUS, FAC_SRVR_UPLOAD_TXNS, UPS_STATUS, DIGITAL_IO_STATUS, NONREV_EMPL_ID, CASE when LN_STRADDLE_IND is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LN_STRADDLE_IND, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LN_STRADDLE_IND, CASE when ATT_CLASS_ENTERED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ATT_CLASS_ENTERED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ATT_CLASS_ENTERED, CASE when VIO_IMAGE_REQ is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIO_IMAGE_REQ, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIO_IMAGE_REQ, CASE when COIN_REJECTED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COIN_REJECTED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COIN_REJECTED, LAST_UPDATE_TYPE, LAST_UPDATE_DATE from dbo.TA_TXN_RITE_DATAS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TA_REV_TFC_EVTS",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_VALUES, TXN_ID, DATE_TIME, EARNED_REV, ACTUAL_REV, ACTUAL_AXLES, CREATION_DATE, TART_ID, OPNM_ID, TAOC_ID, FACS_ID, PLAZ_ID, LANE_ID, TAOB_ID, TXID_ID, PMTY_ID, VCLY_ID, TAUO_ID, EARNED_AXLES, TRANSACTION_FILE_DETAIL_ID, LAST_UPDATE_DATE, CASE when LAST_UPDATE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LAST_UPDATE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LAST_UPDATE_TYPE from dbo.TA_REV_TFC_EVTS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_NET_REV_TFC_EVTS",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DAY_ID, MONTH_ID, TART_ID, LANE_ID, ATD_ID, OPNM_ID, PMTY_ID, VCLY_ID, TIME_ID, DATE_TIME, Local_Time, EAR_REV, EXP_REV, ACT_REV, ATT_FARE, MISCLASS_CT, SIGN_FLG, CASE when ADJ_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADJ_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADJ_STATUS, TXID_ID, VES_SERIAL_NO, VES_DATE_TIME, TRANSACTION_FILE_DETAIL_ID, AVI_HANDSHAKE, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, VEH_SPEED, DELETED, LAST_UPDATE_DATE from dbo.FACT_NET_REV_TFC_EVTS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TOTAL_NET_REV_TFC_EVTS",
            "schema_name": "dbo",
            "id_field": "TART_TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ATD_ID, OPNM_OPNM_ID, PMTY_PMTY_ID, VCLY_VCLY_ID, LANE_LANE_ID, TART_TART_ID, DATE_TIME, Local_Time, EAR_REV, EXP_REV, ACT_REV, AVC_CLASS, IND_CLASS, REV_AXLE_CT, ATT_CLASS, FWD_AXLE_CT, EXIT_LOOP_CTS, ATT_FARE, PRE_CLASS, MISCLASS_CT, SIGN_FLG, CASE when ADJ_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADJ_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADJ_STATUS, TXID_ID, VES_SERIAL_NO, VES_DATE_TIME, VES_DATE_TIME_LOCAL, TRANSACTION_FILE_DETAIL_ID, AVI_HANDSHAKE, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, VEH_SPEED, DELETED, LAST_UPDATE_DATE from dbo.TOTAL_NET_REV_TFC_EVTS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_HISTORY_OLD",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, TART_ID, DAY_ID, PMTY_ID, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, LANE_ID, Local_Time, EAR_REV, POS_REV, TXID_ID, TRANSACTION_FILE_DETAIL_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, OUT_OF_STATE_IND, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, MANUAL_VIOL_FLAG, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, TTXN_ID, AMOUNT, IOP_REV, TOLL_REV, VTOLL_REV, IOP_FLAG, POSTED_DATE, POSTED_DAY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSIT_DATE, SPLIT_AMOUNT, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, VES_SERIAL_NO, BAD_ADDRESS_FLAG, FLEET_FLAG, UnPursuable_FLAG, ADJ_REV, POSTED_REV, DELETED, DATA_START_DATE, DATA_END_DATE from dbo.FACT_UNIFIED_VIOLATION_HISTORY_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UNIFIED_VIOLATION_HISTORY",
            "schema_name": "dbo",
            "id_field": "TART_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LEVEL_0 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_0, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_0, CASE when LEVEL_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_1, CASE when LEVEL_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_2, CASE when LEVEL_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_3, CASE when LEVEL_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_4, CASE when LEVEL_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_5, CASE when LEVEL_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_6, CASE when LEVEL_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_7, CASE when LEVEL_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_8, CASE when LEVEL_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_9, CASE when LEVEL_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LEVEL_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LEVEL_10, TART_ID, DAY_ID, PMTY_ID, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, LANE_ID, Local_Time, EAR_REV, POS_REV, TXID_ID, TRANSACTION_FILE_DETAIL_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, OUT_OF_STATE_IND, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, MANUAL_VIOL_FLAG, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, DATE_EXCUSED, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY, TTXN_ID, AMOUNT, IOP_REV, TOLL_REV, VTOLL_REV, IOP_FLAG, POSTED_DATE, POSTED_DAY_ID, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when TAG_AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSIT_DATE, SPLIT_AMOUNT, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, VES_SERIAL_NO, BAD_ADDRESS_FLAG, FLEET_FLAG, UnPursuable_FLAG, ADJ_REV, POSTED_REV, DELETED, DATA_START_DATE, DATA_END_DATE from dbo.FACT_UNIFIED_VIOLATION_HISTORY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TRIP",
            "schema_name": "dbo",
            "id_field": "ACCT_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when DAY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DAY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DAY_ID, TRIP_AMT, CASE when PLAZA_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_1, CASE when DIR_1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_1, TXN_1, CASE when PLAZA_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_2, CASE when DIR_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_2, TXN_2, CASE when PLAZA_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_3, CASE when DIR_3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_3, TXN_3, CASE when PLAZA_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_4, CASE when DIR_4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_4, TXN_4, CASE when PLAZA_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_5, CASE when DIR_5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_5, TXN_5, CASE when PLAZA_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_6, CASE when DIR_6 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_6, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_6, TXN_6, CASE when PLAZA_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_7, CASE when DIR_7 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_7, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_7, TXN_7, CASE when PLAZA_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_8, CASE when DIR_8 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_8, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_8, TXN_8, CASE when PLAZA_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_9, CASE when DIR_9 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_9, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_9, TXN_9, CASE when PLAZA_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLAZA_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLAZA_10, CASE when DIR_10 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DIR_10, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DIR_10, TXN_10 from dbo.FACT_TRIP",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UVS_LANE_VIOL_STAGE",
            "schema_name": "dbo",
            "id_field": "LANE_VIOL_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LANE_FILE_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_FILE_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_FILE_ID, LANE_VIOL_ID, VIOL_DATE, AXLE_COUNT, CASE when LANE_VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_VIOL_STATUS, CASE when LANE_REVIEW_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_REVIEW_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_REVIEW_STATUS, VIOLATION_CODE, CASE when VIOL_CREATED is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_CREATED, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_CREATED, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, REVIEW_DATE, CASE when VIOL_REJECT_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_REJECT_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_REJECT_TYPE, TOLL_DUE, TOLL_PAID, VIOLATION_ID, STATUS_DATE, MANUAL_VIOL_FLAG, CASE when DRIVER_LIC_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVER_LIC_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVER_LIC_STATE, VIOLATOR_ID, CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, TRANSACTION_ID, CASE when DISPOSITION is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DISPOSITION, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DISPOSITION, VTOLL_SEND_DATE, TTXN_ID, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, POSTED_DATE, POSTED_REVENUE, IOP_REV, TOLL_REV, VTOLL_REV, IOP_FLAG, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, ACCT_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, CASE when DMV_STS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DMV_STS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DMV_STS, CASE when TXN_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXN_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXN_NAME, CASE when NOT_TRANS_REVIEW_STATUS_ABBREV is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NOT_TRANS_REVIEW_STATUS_ABBREV, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NOT_TRANS_REVIEW_STATUS_ABBREV, VBI_INVOICE_ID, VIOL_INVOICE_ID, PAYMENT_DATE, DEPOSIT_DATE, SPLIT_AMOUNT, FLEET_FLAG, FEES_PAID, AMT_PAID, VBI_INVOICE_DATE, CASE when VBI_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VBI_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VBI_STATUS, VI_INVOICE_DATE, CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, INVOICE_STAGE_ID, CASE when EXCUSED_REASON is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_REASON, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_REASON, DATE_EXCUSED, CASE when EXCUSED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EXCUSED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EXCUSED_BY from dbo.FACT_UVS_LANE_VIOL_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_UVS_NET_REV_STAGE",
            "schema_name": "dbo",
            "id_field": "LANE_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LANE_FILE_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LANE_FILE_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LANE_FILE_ID, TART_ID, DAY_ID, PMTY_ID, VES_SERIAL_NO, LANE_ID, Local_Time, VCLY_ID, CASE when AVI_TAG_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AVI_TAG_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AVI_TAG_STATUS, EAR_REV, POS_REV, POSTED_REVENUE, IOP_REV, TOLL_REV, IOP_FLAG, TXID_ID, DELETED, TTXN_ID, CASE when TAG_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TAG_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TAG_ID, CASE when LVL_TVL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LVL_TVL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LVL_TVL, CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when AGENCY_ID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGENCY_ID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGENCY_ID, POSTED_DATE, TRANSACTION_FILE_DETAIL_ID, LICENSE_PLATE_ID, CASE when LIC_PLATE_NBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_NBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_NBR, CASE when LIC_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE_STATE, ACCT_ID from dbo.FACT_UVS_NET_REV_STAGE",
            "gcs_upload_flag": "FALSE"
        }
    ]
}