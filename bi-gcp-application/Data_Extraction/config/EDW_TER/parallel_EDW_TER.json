{
    "connection_string": "Driver=ODBC Driver 18 for SQL Server;Server=10.40.9.26,17001;Database=LND_TBOS;Trusted_Connection=yes;Encrypt=no;",
    "connection_details": {
        "driver": "ODBC Driver 18 for SQL Server",
        "server": "10.40.9.26,17001",
        "database": "EDW_TER",
        "trusted_connection": "yes",
        "encrypt": "no",
        "username": "LoadSmallRC",
        "password_secret_id": "APS_DEV_SMALL_USERID_KEY",
        "secret_version": "1"
    },
    "gcs_bucket_name": "prj-ntta-ops-bi-devt-raw-data",
    "database_type": "SQLServer",
    "source_database": "EDW_TER",
    "project_id": "prj-ntta-ops-bi-devt-svc-01",
    "chunk_file_size_gb": 1.0,
    "compression_type": "gzip",
    "parquet_file_page_size_bytes": 1048576,
    "output_folder": "D:\\gcp-data-transfer-csv\\Parallel_Data_Extraction\\edw_ter",
    "log_folder_path": "E:\\bcp_logs\\edw_ter",
    "max_process_count": 2,
    "file_type": ".csv",
    "bq_dataset_map": {
        "LND_TBOS": {
            "TollPlus": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TollPlus_"
            },
            "dbo": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "dbo_"
            },
            "Finance": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Finance_"
            },
            "History": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "History_"
            },
            "IOP": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "IOP_"
            },
            "Rbac": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Rbac_"
            },
            "TER": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TER_"
            },
            "TranProcessing": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TranProcessing_"
            },
            "CaseManager": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "CaseManager_"
            },
            "Court": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Court_"
            },
            "Inventory": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Inventory_"
            },
            "Notifications": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Notifications_"
            },
            "TSA": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TSA_"
            },
            "Utility": {
                "bq_dataset": "LND_TBOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Reporting": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Reporting_"
            },
            "docmgr": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "docmgr_"
            }
        },
        "EDW_TRIPS": {
            "dbo": {
                "bq_dataset": "EDW_TRIPS_APS",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_TRIPS_STAGE",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            }
        },
        "EDW_RITE": {
            "dbo": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": ""
            },
            "land": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "land_"
            },
            "land_perm": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "land_perm_"
            },
            "stage": {
                "bq_dataset": "EDW_RITE",
                "table_name_prefix": "stage_"
            }
        },
        "EDW_TER": {
            "dbo": {
                "bq_dataset": "EDW_TER",
                "table_name_prefix": ""
            },
            "land_perm": {
                "bq_dataset": "EDW_TER",
                "table_name_prefix": "land_perm_"
            },
            "dto": {
                "bq_dataset": "EDW_TER",
                "table_name_prefix": "dto_"
            },
            "stage": {
                "bq_dataset": "EDW_TER",
                "table_name_prefix": "stage_"
            },
            "land": {
                "bq_dataset": "EDW_TER",
                "table_name_prefix": "land_"
            }
        },
        "LND_TER": {
            "dbo": {
                "bq_dataset": "LND_TER",
                "table_name_prefix": ""
            }
        },
        "LND_LG_DMV": {
            "dbo": {
                "bq_dataset": "LND_LG_DMV",
                "table_name_prefix": ""
            },
            "DMVLD": {
                "bq_dataset": "LND_LG_DMV",
                "table_name_prefix": "DMVLD_"
            }
        },
        "LND_LG_HOST": {
            "dbo": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": ""
            },
            "TSA_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": "TSA_OWNER_"
            },
            "TXNOWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": "TXNOWNER_"
            },
            "HAS_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": "HAS_OWNER_"
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_HOST",
                "table_name_prefix": "FPL_OWNER_"
            }
        },
        "LND_LG_ICRS": {
            "dbo": {
                "bq_dataset": "LND_LG_ICRS",
                "table_name_prefix": ""
            },
            "ICRS_OWNER": {
                "bq_dataset": "LND_LG_ICRS",
                "table_name_prefix": "ICRS_OWNER_"
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_ICRS",
                "table_name_prefix": "FPL_OWNER_"
            }
        },
        "LND_LG_IOP": {
            "dbo": {
                "bq_dataset": "LND_LG_IOP",
                "table_name_prefix": ""
            },
            "IOP_OWNER": {
                "bq_dataset": "LND_LG_IOP",
                "table_name_prefix": "IOP_OWNER_"
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_IOP",
                "table_name_prefix": "FPL_OWNER_"
            }
        },
        "LND_LG_TS": {
            "dbo": {
                "bq_dataset": "LND_LG_TS",
                "table_name_prefix": ""
            },
            "TAG_OWNER": {
                "bq_dataset": "LND_LG_TS",
                "table_name_prefix": "TAG_OWNER_"
            },
            "TIM_OWNER": {
                "bq_dataset": "LND_LG_TS",
                "table_name_prefix": "TIM_OWNER_"
            },
            "OLR": {
                "bq_dataset": "LND_LG_TS",
                "table_name_prefix": "OLR_"
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_TS",
                "table_name_prefix": "FPL_OWNER_"
            }
        },
        "LND_LG_VPS": {
            "dbo": {
                "bq_dataset": "LND_LG_VPS",
                "table_name_prefix": ""
            },
            "VP_OWNER": {
                "bq_dataset": "LND_LG_VPS",
                "table_name_prefix": "VP_OWNER_"
            },
            "FPL_OWNER": {
                "bq_dataset": "LND_LG_VPS",
                "table_name_prefix": "FPL_OWNER_"
            },
            "HV_OWNER": {
                "bq_dataset": "LND_LG_VPS",
                "table_name_prefix": "HV_OWNER_"
            }
        }
    },
    "log": {
        "log_level": "INFO",
        "log_name": "data_transfer_log",
        "labels": {}
    },
    "tables": [
        {
            "table_name": "ACCOUNT_PAYMENT_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PMT_TYPE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TYPE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TYPE_CODE, CASE when [PMT_TYPE_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMT_TYPE_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMT_TYPE_DESCR], INSERT_DATE from dbo.ACCOUNT_PAYMENT_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ACCOUNT_STATUSES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ACCT_STATUS_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACCT_STATUS_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACCT_STATUS_CODE, CASE when [ACCT_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ACCT_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ACCT_STATUS_DESCR], INSERT_DATE from dbo.ACCOUNT_STATUSES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "AGENCY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AGENCY_ID, CASE when [AGENCY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_ABBREV], CASE when [AGENCY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_NAME], CASE when [AGENCY_IS_IOP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_IS_IOP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_IS_IOP], INSERT_DATE from dbo.AGENCY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Ban",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanID, ViolatorID, VidSeq, ActiveFlag, BanActionLookupID, ActionDate, BanStartDate, BanLocationLookupID, BanOfficerLookupID, BanImpoundServiceLookupID, CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedBy, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Ban",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanActionLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanActionLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.BanActionLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanActionLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanActionLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.BanActionLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanImpoundServiceLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanImpoundServiceLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.BanImpoundServiceLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanImpoundServiceLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanImpoundServiceLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.BanImpoundServiceLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanLocationLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanLocationLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.BanLocationLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanLocationLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanLocationLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.BanLocationLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanOfficerLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanOfficerLookupID, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when PhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNbr, CASE when RadioNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RadioNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RadioNbr, CASE when Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Unit, CASE when Registration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Registration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Registration, CASE when PatrolCar is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PatrolCar, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PatrolCar, CASE when Area is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Area, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Area, [INSERT_DATE], LAST_UPDATE_DATE from dbo.BanOfficerLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BanOfficerLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanOfficerLookupID, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when PhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNbr, CASE when RadioNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RadioNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RadioNbr, CASE when Unit is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Unit, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Unit, CASE when Registration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Registration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Registration, CASE when PatrolCar is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PatrolCar, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PatrolCar, CASE when Area is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Area, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Area, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.BanOfficerLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Ban_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BanID, ViolatorID, VidSeq, ActiveFlag, BanActionLookupID, ActionDate, BanStartDate, BanLocationLookupID, BanOfficerLookupID, BanImpoundServiceLookupID, [BAN_LAST_UPDATE_TYPE], [BAN_LAST_UPDATE_DATE], CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedBy from dbo.Ban_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CA_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CA_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CA_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CA_INV_STATUS, CASE when [CA_INV_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CA_INV_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CA_INV_STATUS_DESCR], INSERT_DATE from dbo.CA_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CountyLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CountyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, CASE when ParticipatingCounty is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ParticipatingCounty, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ParticipatingCounty, CASE when CountyGroup is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CountyGroup, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CountyGroup, [INSERT_DATE], LAST_UPDATE_DATE from dbo.CountyLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CountyLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CountyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, ParticipatingCounty, CASE when CountyGroup is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CountyGroup, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CountyGroup, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.CountyLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CREDIT_CARD_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when CARD_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CARD_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CARD_CODE, CASE when [CARD_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CARD_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CARD_NAME], INSERT_DATE from dbo.CREDIT_CARD_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_AGENCY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AGENCY_ID, CASE when [AGENCY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_ABBREV], CASE when [AGENCY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_NAME], CASE when [AGENCY_IS_IOP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_IS_IOP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_IS_IOP], INSERT_DATE from dbo.DIM_AGENCY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_Agent",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AgentId, CASE when Agent is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Agent, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Agent, INSERT_DATETIME from dbo.DIM_Agent",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_AgreementType",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AgreementTypeId, CASE when AgreementType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgreementType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgreementType, INSERT_DATETIME from dbo.DIM_AgreementType",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_DATE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DATE, CASE when [MONTH_WEEK] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([MONTH_WEEK], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [MONTH_WEEK], CASE when [DATE_DAY] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DATE_DAY], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DATE_DAY], CASE when [DATE_FULL] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DATE_FULL], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DATE_FULL], CASE when [DATE_MONTH] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DATE_MONTH], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DATE_MONTH], CASE when [DATE_YEAR_MONTH] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DATE_YEAR_MONTH], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DATE_YEAR_MONTH], CASE when [DATE_QUARTER] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DATE_QUARTER], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DATE_QUARTER], CASE when DATE_YEAR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DATE_YEAR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DATE_YEAR from dbo.DIM_DATE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_DischargeDismissed",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DischargeDismissedId, CASE when DischargeDismissed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DischargeDismissed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DischargeDismissed, INSERT_DATETIME from dbo.DIM_DischargeDismissed",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ENFORCEMENT_TOOL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ENFORCEMENT_TOOL_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ENFORCEMENT_TOOL_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ENFORCEMENT_TOOL_CODE, CASE when ENFORCEMENT_TOOL_DESCR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ENFORCEMENT_TOOL_DESCR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ENFORCEMENT_TOOL_DESCR from dbo.DIM_ENFORCEMENT_TOOL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_FACILITY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select FACILITY_ID, CASE when [FACILITY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_ABBREV], CASE when [FACILITY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_NAME], [AGENCY_ID], CASE when [AGENCY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_ABBREV], CASE when [AGENCY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_NAME], CASE when [AGENCY_IS_IOP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_IS_IOP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_IS_IOP], INSERT_DATE from dbo.DIM_FACILITY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_FilingStatus",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select FilingStatusId, CASE when FilingStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FilingStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FilingStatus, INSERT_DATETIME from dbo.DIM_FilingStatus",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_HV_NON_HV",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select HV_NON_HV_IND, CASE when HV_NON_HV_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HV_NON_HV_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HV_NON_HV_DESC from dbo.DIM_HV_NON_HV",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INDICATOR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select INDICATOR_ID, CASE when [YES_NO_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([YES_NO_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [YES_NO_ABBREV], CASE when INDICATOR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INDICATOR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INDICATOR from dbo.DIM_INDICATOR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when INVOICE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_TYPE, CASE when [INVOICE_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS], CASE when [INVOICE_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS_DESCR], CASE when [INVOICE_STATUS_DESCR_GROUP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS_DESCR_GROUP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS_DESCR_GROUP], INSERT_DATE from dbo.DIM_INVOICE_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_INVOICE_TYPE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when INVOICE_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_TYPE, CASE when INVOICE_TYPE_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(INVOICE_TYPE_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as INVOICE_TYPE_DESC from dbo.DIM_INVOICE_TYPE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LANE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LANE_ID, CASE when [LANE_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LANE_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LANE_ABBREV], CASE when [LANE_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LANE_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LANE_NAME], CASE when [LANE_DIRECTION] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LANE_DIRECTION], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LANE_DIRECTION], [PLAZA_ID], CASE when [PLAZA_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PLAZA_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PLAZA_ABBREV], CASE when [PLAZA_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PLAZA_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PLAZA_NAME], [PLAZA_LATITUDE], [PLAZA_LONGITUDE], [FACILITY_ID], CASE when [FACILITY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_ABBREV], CASE when [FACILITY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_NAME], [AGENCY_ID], CASE when [AGENCY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_ABBREV], CASE when [AGENCY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_NAME], CASE when [AGENCY_IS_IOP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_IS_IOP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_IS_IOP], INSERT_DATE from dbo.DIM_LANE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_LICENSE_PLATE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LICENSE_PLATE_ID, CASE when [LICENSE_PLATE_NBR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LICENSE_PLATE_NBR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LICENSE_PLATE_NBR], CASE when LICENSE_PLATE_STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICENSE_PLATE_STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICENSE_PLATE_STATE from dbo.DIM_LICENSE_PLATE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_MaintenanceAgency",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MaintenanceAgencyId, CASE when MaintenanceAgency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MaintenanceAgency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MaintenanceAgency, INSERT_DATETIME from dbo.DIM_MaintenanceAgency",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_MONTH",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MONTH_ID, CASE when MONTH is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MONTH, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MONTH, INSERT_DATETIME from dbo.DIM_MONTH",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PaymentAgreement_Source",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PaymentAgreement_SourceId, CASE when [PaymentAgreement_Source] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PaymentAgreement_Source], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PaymentAgreement_Source], INSERT_DATETIME from dbo.DIM_PaymentAgreement_Source",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PAYMENTPLAN",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PaymentPlanID, PaymentPlanStatusLookupID, ActiveAgreementFlag, ActiveAgreementDate, DefaultedFlag, DefaultedDate, PaidInFullFlag, PaidInFullDate, BankruptcyFlag, BankruptcyDate, ViolationAmt, ZipCashAmt, SettlementAmt, AdminFeeCount, AdminFeeTotal, CitationCount, CitationFeeTotal, CollectionsReceived, CustomDownPaymentReceivedFlag, DownPaymentReceived, TotalReceived, RemainingBalanceDue, MonthlyPayment, LastPayment, CustomNoOfMonthsFlag, TotalNoOfMonths, FirstNoOfMonths, PlanStartDate, FirstPaymentDate, LastPaymentDate, PaymentPlanRemedySourceLookupID, PaymentPlanContactSourceLookupID, SpanishFlag, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when LastName2nd is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName2nd, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName2nd, CASE when FirstName2nd is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName2nd, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName2nd, CASE when Address1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address1, CASE when Address2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address2, CASE when City is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(City, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as City, StateLookupID, CASE when ZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZipCode, CASE when Plus4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Plus4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Plus4, CASE when PhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNbr, CASE when OtherPhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OtherPhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OtherPhoneNbr, CASE when Email is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Email, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Email, CASE when TollTagNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TollTagNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TollTagNbr, TotalPaymentsAmt, BalanceDue, TotalNoOfPayments, DeletedFlag, CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedBy, CASE when [LAST_UPDATE_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LAST_UPDATE_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.DIM_PAYMENTPLAN",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_PaymentplanRemedySourceLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PaymentPlanRemedySourceLookupID, CASE when Descr is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as Descr, ActiveFlag, CreatedDate, CASE when CreatedBy is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as UpdatedBy from dbo.Dim_PaymentplanRemedySourceLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Dim_PaymentPlanStatusLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PaymentPlanStatusLookupID, CASE when Descr is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as Descr, ActiveFlag, CreatedDate, CASE when CreatedBy is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as CreatedBy from dbo.Dim_PaymentPlanStatusLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PAYMENTPLAN_HV_INDICATOR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select INDICATOR_ID, CASE when PP_HV_FLAG is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PP_HV_FLAG, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PP_HV_FLAG from dbo.DIM_PAYMENTPLAN_HV_INDICATOR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_PLAZA",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PLAZA_ID, CASE when [PLAZA_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PLAZA_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PLAZA_ABBREV], CASE when [PLAZA_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PLAZA_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PLAZA_NAME], [PLAZA_LATITUDE], [PLAZA_LONGITUDE], [FACILITY_ID], CASE when [FACILITY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_ABBREV], CASE when [FACILITY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_NAME], [AGENCY_ID], CASE when [AGENCY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_ABBREV], CASE when [AGENCY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_NAME], CASE when [AGENCY_IS_IOP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_IS_IOP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_IS_IOP], INSERT_DATE from dbo.DIM_PLAZA",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_STATE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when STATE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE_CODE, CASE when [STATE_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([STATE_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [STATE_NAME], [STATE_LATITUDE], STATE_LONGITUDE from dbo.DIM_STATE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_TIME",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TIME_ID, CASE when HOUR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HOUR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HOUR, CASE when [12_HOUR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([12_HOUR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [12_HOUR], CASE when [AM_PM] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AM_PM], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AM_PM], CASE when [30_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([30_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [30_MINUTE], CASE when [15_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([15_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [15_MINUTE], CASE when [10_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([10_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [10_MINUTE], CASE when [5_MINUTE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([5_MINUTE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [5_MINUTE], CASE when MINUTE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MINUTE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MINUTE, CASE when SECOND is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECOND, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECOND from dbo.DIM_TIME",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VEHICLE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VEHICLE_ID, CASE when [VEHICLE_MAKE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_MAKE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_MAKE], CASE when [VEHICLE_MODEL] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_MODEL], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_MODEL], CASE when [VEHICLE_YEAR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_YEAR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_YEAR], INSERT_DATETIME from dbo.DIM_VEHICLE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VIOLATOR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATORID, VIDSEQ, [CURRENT_IND], [HV_NON_HV_IND], CASE when LICPLATENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICPLATENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICPLATENBR, LICPLATESTATELOOKUPID, CASE when LICPLATESTATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICPLATESTATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICPLATESTATE, [LICENSE_PLATE_ID], [VEHICLE_ID], CASE when DOCNUM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DOCNUM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DOCNUM, CASE when VIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIN, CASE when PRIMARYVIOLATORFNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PRIMARYVIOLATORFNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PRIMARYVIOLATORFNAME, CASE when PRIMARYVIOLATORLNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PRIMARYVIOLATORLNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PRIMARYVIOLATORLNAME, CASE when SECONDARYVIOLATORFNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYVIOLATORFNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYVIOLATORFNAME, CASE when SECONDARYVIOLATORLNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYVIOLATORLNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYVIOLATORLNAME, CASE when DRIVERSLICENSE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DRIVERSLICENSE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DRIVERSLICENSE, DRIVERSLICENSESTATELOOKUPID, CASE when SECONDARYDRIVERSLICENSE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYDRIVERSLICENSE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYDRIVERSLICENSE, SECONDARYDRIVERSLICENSESTATELOOKUPID, EARLIESTHVTRANDATE, LATESTHVTRANDATE, ADMINCOUNTYLOOKUPID, REGISTRATIONCOUNTYLOOKUPID, REGISTRATIONDATENEXTMONTH, REGISTRATIONDATENEXTYEAR, VIOLATORAGENCYLOOKUPID, VIOLATORADDRESSSOURCELOOKUPID, VIOLATORADDRESSSTATUSLOOKUPID, VIOLATORADDRESSACTIVEFLAG, VIOLATORADDRESSCONFIRMEDFLAG, CASE when VIOLATORADDRESS1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESS1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESS1, CASE when VIOLATORADDRESS2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESS2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESS2, CASE when VIOLATORADDRESSCITY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESSCITY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESSCITY, VIOLATORADDRESSSTATELOOKUPID, CASE when VIOLATORADDRESSZIPCODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESSZIPCODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESSZIPCODE, CASE when VIOLATORADDRESSPLUS4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESSPLUS4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESSPLUS4, CASE when VIOLATORADDRESSCREATEDBY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESSCREATEDBY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESSCREATEDBY, CASE when VIOLATORADDRESSUPDATEDBY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOLATORADDRESSUPDATEDBY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOLATORADDRESSUPDATEDBY, VIOLATORSTATUSID, VIOLATORSTATUSLOOKUPID, VIOLATORSTATUSTERMLOOKUPID, VIOLATORSTATUSELIGRMDYLOOKUPID, VIOLATORSTATUSLETTERDETERMINATIONLOOKUPID, VIOLATORSTATUSLETTERBANLOOKUPID, VIOLATORSTATUSLETTERTERMLOOKUPID, VIOLATORSTATUSLETTERBAN2NDLOOKUPID, VIOLATORSTATUSLETTERVRBLOOKUPID, BANBYPROCESSSERVER, BANBYDPS, BANBYUSMAIL1STBAN, [ACCT_ID], CASE when [ACCT_STATUS_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ACCT_STATUS_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ACCT_STATUS_CODE], [TAG_DATE_CREATED], BANFLAG, BANCITEWARNFLAG, BANIMPOUNDFLAG, BANKRUPTCYIND, BANLETTERFLAG, DEFAULTIND, DETERMINATIONLETTERFLAG, ELIGRMDYFLAG, [HAS_TOLL_TAG_ACCOUNT], HVACTIVE, HVEXEMPTFLAG, HVFLAG, HVREMOVED, TERMFLAG, TERMLETTERFLAG, VRBACKNOWLEDGED, VRBFLAG, VRBREMOVED, VRBREMOVALQUEUED, BAN2NDLETTERFLAG, VRBLETTERFLAG, ADMINFEES, [BALANCE_AMOUNT], BALANCEDUE, BANCITEWARNCOUNT, CITATIONFEES, COLLECTABLEAMOUNT, COLLECTIONS, DOWNPAYMENT, EXCUSEDAMOUNT, HVQAMOUNTDUE, HVQTOLLSDUE, HVQTRANSACTIONS, HVQFEESDUE, MONTHLYPAYMENTAMOUNT, PAIDINFULL, CASE when [PMT_TYPE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMT_TYPE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMT_TYPE_CODE], [REBILL_AMT], SETTLEMENTAMOUNT, TOLLTRANSACTIONCOUNT, TOTALAMOUNTDUE, TOTALAMOUNTDUEINITIAL, TOTALCITATIONCOUNT, TOTALFEESDUE, TOTALTOLLSDUE, TOTALTRANSACTIONSCOUNT, TOTALTRANSACTIONSINITIAL, BANDPSCOUNT, BANPCPCOUNT, BANWARNCOUNT, BANCITATIONCOUNT, BANIMPOUNDCOUNT, BANNOACTIONCOUNT, BANFENNELLCOUNT, VIOLATORADDRESSCREATEDATE, VIOLATORADDRESSUPDATEDATE, [BAL_LAST_UPDATED], BANCITEWARNDATE, BANDATE, BANIMPOUNDDATE, BANLETTERDATE, BANSTARTDATE, DETERMINATIONLETTERDATE, ELIGRMDYDATE, HVDATE, HVEXEMPTDATE, [REBILL_DATE], TERMDATE, TERMLETTERDATE, VRBDATE, BAN2NDLETTERDATE, VRBLETTERDATE, CASE when PHONENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PHONENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PHONENBR, CASE when WORKPHONENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WORKPHONENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WORKPHONENBR, CASE when OTHERPHONENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OTHERPHONENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OTHERPHONENBR, CASE when EMAILADDRESS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EMAILADDRESS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EMAILADDRESS, CASE when TOLLTAGNBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TOLLTAGNBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TOLLTAGNBR from dbo.DIM_VIOLATOR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_VIOL_OR_TOLL_TRANSACTION",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOL_OR_TOLL_TRANSACTION, CASE when VIOL_OR_TOLL_TRANSACTION_DESC is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_OR_TOLL_TRANSACTION_DESC, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_OR_TOLL_TRANSACTION_DESC from dbo.DIM_VIOL_OR_TOLL_TRANSACTION",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_YEAR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select YEAR_ID, CASE when YEAR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(YEAR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as YEAR, INSERT_DATETIME from dbo.DIM_YEAR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ZIPCODE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ZIPCODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIPCODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIPCODE, [ZIPCODE_LATITUDE], [ZIPCODE_LONGITUDE], CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, CASE when COUNTY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY_GROUP from dbo.DIM_ZIPCODE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ZIPCODE_SAVE_20160927",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ZIPCODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIPCODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIPCODE, [ZIPCODE_LATITUDE], [ZIPCODE_LONGITUDE], CASE when COUNTY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY, CASE when COUNTY_GROUP is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(COUNTY_GROUP, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as COUNTY_GROUP from dbo.DIM_ZIPCODE_SAVE_20160927",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DIM_ZI_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ZI_STAGE_ID, CASE when ZI_STAGE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZI_STAGE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZI_STAGE_NAME from dbo.DIM_ZI_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "DPS_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when DPS_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DPS_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DPS_INV_STATUS, CASE when [DPS_INV_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DPS_INV_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DPS_INV_STATUS_DESCR], INSERT_DATE from dbo.DPS_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACILITY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select FACILITY_ID, CASE when [FACILITY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_ABBREV], CASE when [FACILITY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([FACILITY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [FACILITY_NAME], [AGENCY_ID], CASE when [AGENCY_ABBREV] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_ABBREV], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_ABBREV], CASE when [AGENCY_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_NAME], CASE when [AGENCY_IS_IOP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([AGENCY_IS_IOP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [AGENCY_IS_IOP], INSERT_DATE from dbo.FACILITY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_CPVT_HIST",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PARTITION_DATE, PaymentPlanID, MonthID, VTOLLS, TOLLTXNS, PAYMENTCOMMITMENTS, DOLLARSCOLLECTED from dbo.FACT_CPVT_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_PaymentPlan_Invoice",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentplanid, violatorid, VidSeq, [VBI_Invoice_ID], [viol_invoice_id], [Tolls_Due], [Fees_Due], INVOICE_AMOUNT from dbo.FACT_PaymentPlan_Invoice",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_PaymentPlan_Payment",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentplanid, violatorid, VidSeq, [VBI_Invoice_ID], [viol_invoice_id], [PAYMENT_DATE], Split_Amount from dbo.FACT_PaymentPlan_Payment",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_INVOICE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LAST_INVOICE_ID, PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [PAYMENTPLAN_DATE], [PLANSTART_DATE], HVDATE, TERMDATE, [DATE_EXCUSED], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [INVOICE_DATE], CASE when [INVOICE_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS], CASE when [CURRENT_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CURRENT_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CURRENT_STATUS], [PP_HV_FLAG], [TOLLS_DUE], [FEES_DUE], [INVOICE_AMOUNT], [INVOICE_AMOUNT_DISC], [INVOICE_PAID_AMOUNT], [INVOICE_BALANCE], [INVOICE_PAID_AMOUNT_ASOF_PP], INVOICE_BALANCE_ASOF_PP from dbo.FACT_TER_INVOICE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_Invoice_Check",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LAST_INVOICE_ID, PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [PAYMENTPLAN_DATE], [PLANSTART_DATE], HVDATE, TERMDATE, [DATE_EXCUSED], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [INVOICE_DATE], CASE when [INVOICE_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS], [TOLLS_DUE], [FEES_DUE], [INVOICE_AMOUNT], [INVOICE_AMOUNT_DISC], [PP_HV_FLAG], DELETED, LOCKED from dbo.FACT_TER_Invoice_Check",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_INVOICE_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LAST_INVOICE_ID, PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [PAYMENTPLAN_DATE], [PLANSTART_DATE], HVDATE, TERMDATE, [DATE_EXCUSED], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [INVOICE_DATE], CASE when [INVOICE_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS], CASE when [CURRENT_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CURRENT_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CURRENT_STATUS], [PP_HV_FLAG], [TOLLS_DUE], [FEES_DUE], [INVOICE_AMOUNT], [INVOICE_AMOUNT_DISC], [INVOICE_PAID_AMOUNT], [INVOICE_BALANCE], [INVOICE_PAID_AMOUNT_ASOF_PP], INVOICE_BALANCE_ASOF_PP from dbo.FACT_TER_INVOICE_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_MONTH",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATORID, CASE when [TERMINATION_MONTH] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TERMINATION_MONTH], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TERMINATION_MONTH], [TERMINATION_DAY_ID], [TERMINATION_DATE], CASE when [TXN_MONTH] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TXN_MONTH], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TXN_MONTH], [TXN_DAY_ID], [PARTITION_MONTH], [CURR_IND], [INVOICE_TOLL_PAID], [PAYMENT_AMOUNT], [REMAINING_BALANCE_DUE], [TXN_CNT], TXN_TOLL_PAID from dbo.FACT_TER_MONTH",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_PAYMENT",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [LAST_INVOICE_ID], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [PAYMENT_DATE], [PAYMENT_MTH], DefaultedDate, PaidInFullDate, BankruptcyDate, FirstPaymentDate, [LATE_PAYMENT_FLAG], CASE when [PMNT_BEFORE_Defaulted] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_Defaulted], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_Defaulted], CASE when [PMNT_BEFORE_PaidInFull] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_PaidInFull], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_PaidInFull], CASE when [PMNT_BEFORE_Bankruptcy] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_Bankruptcy], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_Bankruptcy], [POS_ID], [SPLIT_AMOUNT], [VTOLL_AMOUNT], DownPayment from dbo.FACT_TER_PAYMENT",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_PAYMENT_Check",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [LAST_INVOICE_ID], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [PAYMENT_DATE], [PAYMENT_MTH], DefaultedDate, PaidInFullDate, BankruptcyDate, FirstPaymentDate, [LATE_PAYMENT_FLAG], CASE when [PMNT_BEFORE_Defaulted] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_Defaulted], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_Defaulted], CASE when [PMNT_BEFORE_PaidInFull] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_PaidInFull], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_PaidInFull], CASE when [PMNT_BEFORE_Bankruptcy] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_Bankruptcy], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_Bankruptcy], [POS_ID], [SPLIT_AMOUNT], [VTOLL_AMOUNT], DownPayment from dbo.FACT_TER_PAYMENT_Check",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_PAYMENT_EXPECTED",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, MONTHID, DOWNPAYMENT, MONTHLYPAYMENT from dbo.FACT_TER_PAYMENT_EXPECTED",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_PAYMENT_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [LAST_INVOICE_ID], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [PAYMENT_DATE], [PAYMENT_MTH], DefaultedDate, PaidInFullDate, BankruptcyDate, FirstPaymentDate, [LATE_PAYMENT_FLAG], CASE when [PMNT_BEFORE_Defaulted] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_Defaulted], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_Defaulted], CASE when [PMNT_BEFORE_PaidInFull] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_PaidInFull], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_PaidInFull], CASE when [PMNT_BEFORE_Bankruptcy] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMNT_BEFORE_Bankruptcy], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMNT_BEFORE_Bankruptcy], [POS_ID], [SPLIT_AMOUNT], [VTOLL_AMOUNT], DownPayment from dbo.FACT_TER_PAYMENT_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_PAYMENT_OLD_ARUN",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, [VIOLATOR_ID], VIDSEQ, [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [PAYMENT_DATE], CASE when [PAYMENT_MTH] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_MTH], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_MTH], SPLIT_AMOUNT from dbo.FACT_TER_PAYMENT_OLD_ARUN",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_SUMMARY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when PaymentPlan is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaymentPlan, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaymentPlan, CASE when Disputed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Disputed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Disputed, CASE when [TT_Pmt_Type] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TT_Pmt_Type], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TT_Pmt_Type], CASE when [TT_Acct_Bal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TT_Acct_Bal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TT_Acct_Bal], CASE when TermLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TermLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TermLetter, CASE when [HV_Removal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([HV_Removal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [HV_Removal], CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, CASE when DeterminationLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DeterminationLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DeterminationLetter, CASE when BanLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BanLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BanLetter, CASE when Ban is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Ban, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Ban, CASE when VRBLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VRBLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VRBLetter, CASE when VRB is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VRB, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VRB, CASE when [Out_Bal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([Out_Bal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [Out_Bal], [Bal_Amt], InvoiceAmount, InvoiceAmountDisc, TollsDue, FeesDue, AmountPaid from dbo.FACT_TER_SUMMARY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_SUMMARY_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when PaymentPlan is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaymentPlan, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaymentPlan, CASE when Disputed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Disputed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Disputed, CASE when [TT_Pmt_Type] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TT_Pmt_Type], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TT_Pmt_Type], CASE when [TT_Acct_Bal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TT_Acct_Bal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TT_Acct_Bal], CASE when TermLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TermLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TermLetter, CASE when [HV_Removal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([HV_Removal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [HV_Removal], CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, CASE when DeterminationLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DeterminationLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DeterminationLetter, CASE when BanLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BanLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BanLetter, CASE when Ban is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Ban, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Ban, CASE when VRBLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VRBLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VRBLetter, CASE when VRB is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VRB, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VRB, CASE when [Out_Bal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([Out_Bal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [Out_Bal], [Bal_Amt], InvoiceAmount, InvoiceAmountDisc, TollsDue, FeesDue, AmountPaid from dbo.FACT_TER_SUMMARY_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_SUMMARY_PREV",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, CASE when Disputed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Disputed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Disputed, CASE when DeterminationLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DeterminationLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DeterminationLetter, CASE when BanLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BanLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BanLetter, CASE when Ban is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Ban, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Ban, CASE when VRBLetter is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VRBLetter, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VRBLetter, CASE when VRB is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VRB, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VRB, CASE when PaymentPlan is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaymentPlan, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaymentPlan, CASE when [TT_Pmt_Type] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TT_Pmt_Type], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TT_Pmt_Type], CASE when [TT_Acct_Bal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TT_Acct_Bal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TT_Acct_Bal], [Bal_Amt], CASE when [Out_Bal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([Out_Bal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [Out_Bal], InvoiceAmount, InvoiceAmountDisc, TollsDue, FeesDue, AmountPaid from dbo.FACT_TER_SUMMARY_PREV",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, VIOLATORID, VIDSEQ, CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [MONTH_ID], HVDATE, TERMDATE, TTXN_AMOUNT from dbo.FACT_TER_TTXN",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN_ACCOUNTS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ACCT_ID, CASE when [TAG_ID] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TAG_ID], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TAG_ID], HVDATE, TERMDATE, VIOLATORID, VIDSEQ, [LICENSE_PLATE_ID], [ASSIGNED_DATE], [EXPIRED_DATE], CASE when [LIC_STATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LIC_STATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LIC_STATE], CASE when LIC_PLATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LIC_PLATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LIC_PLATE from dbo.FACT_TER_TTXN_ACCOUNTS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN_FILTERS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, VIOLATORID, VIDSEQ, CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [MONTH_ID], HVDATE, TERMDATE, TTXN_AMOUNT from dbo.FACT_TER_TTXN_FILTERS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN_FILTER_DRIVER_LIC_NBR",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, VIOLATORID, VIDSEQ, CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [MONTH_ID], HVDATE, TERMDATE, TTXN_AMOUNT from dbo.FACT_TER_TTXN_FILTER_DRIVER_LIC_NBR",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN_FILTER_DRIVER_LIC_NBR_1",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, VIOLATORID, VIDSEQ, CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [MONTH_ID], HVDATE, TERMDATE, TTXN_AMOUNT from dbo.FACT_TER_TTXN_FILTER_DRIVER_LIC_NBR_1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN_FILTER_LAST_NAME",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, VIOLATORID, VIDSEQ, CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [MONTH_ID], HVDATE, TERMDATE, TTXN_AMOUNT from dbo.FACT_TER_TTXN_FILTER_LAST_NAME",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_TER_TTXN_NEW_SET",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PAYMENTPLANID, VIOLATORID, VIDSEQ, CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [MONTH_ID], TTXN_AMOUNT from dbo.FACT_TER_TTXN_NEW_SET",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_INVOICE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when [INVOICE_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_TYPE], [ZI_STAGE_ID], [INVOICE_ID], [INVOICE_DATE], [INVOICE_DUE_DATE], [DATE_EXCUSED], [INVOICE_AMOUNT], [LATE_FEE_AMOUNT], [PAST_DUE_AMOUNT], [INV_ADMIN_FEE], [INV_ADMIN_FEE2], [INVOICE_AMT_PAID], [INVOICE_BATCH_ID], CASE when [CA_INV_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CA_INV_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CA_INV_STATUS], CASE when [DPS_INV_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DPS_INV_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DPS_INV_STATUS], [TOLL_PAID], CASE when [INVOICE_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_STATUS], [TOLL_DUE_AMOUNT], [FINE_AMOUNT], [DATE_MODIFIED], INSERT_DATE from dbo.FACT_VIOLATOR_INVOICE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_INVOICE_TRANS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when [INVOICE_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_TYPE], [INVOICE_ID], [TRANS_ID], CASE when [VIOL_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_STATUS], [TOLL_DUE_AMOUNT], [FINE_AMOUNT], [TOLL_PAID], [VIOL_DATE], [VIOL_TIME_ID], [POST_DATE], [POST_TIME_ID], INSERT_DATE from dbo.FACT_VIOLATOR_INVOICE_TRANS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_INVOICE_VB_INV_VIOLATION_TOLL_PAID_STAGE_TEST",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, [VBI_INVOICE_ID], TOLL_PAID from dbo.FACT_VIOLATOR_INVOICE_VB_INV_VIOLATION_TOLL_PAID_STAGE_TEST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_PAYMENT",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, [PAYMENT_TXN_ID], LicensePlateID, CASE when [CARD_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CARD_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CARD_CODE], CASE when [PAYMENT_SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_SOURCE_CODE], CASE when [VIOL_PAY_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_PAY_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_PAY_TYPE], CASE when [PAYMENT_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_STATUS], CASE when [PMT_TXN_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMT_TXN_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMT_TXN_TYPE], [RETAIL_TRANS_ID], [TRANS_DATE], [TRANS_AMT], CASE when [CREATED_BY] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CREATED_BY], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CREATED_BY], CASE when [POS_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([POS_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [POS_NAME], [INV_TOLL_AMT], [INV_FEES_AMT], CASE when [INVOICE_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_TYPE], [AMOUNT_DUE], [VIOL_INVOICE_ID], [VBI_VBI_INVOICE_ID], INSERT_DATE from dbo.FACT_VIOLATOR_PAYMENT",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_TRANSACTION",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, [TRANSACTION_ID], CASE when [VIOL_OR_TOLL_TRANSACTION] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_OR_TOLL_TRANSACTION], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_OR_TOLL_TRANSACTION], [LANE_ID], [LICENSE_PLATE_ID], CASE when [VIOL_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_STATUS], [TRANS_TYPE_ID], CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [TRANSACTION_DATE], [TRANSACTION_TIME_ID], [TOLL_DUE], [TOLL_PAID], [POST_DATE], [POST_TIME_ID], [ZC_INVOICE_COUNT], [VIOL_INVOICE_COUNT], [STATUS_DATE], [DATE_EXCUSED], [TOLL_TRANSACTION_CREDITED_FLAG], INSERT_DATE from dbo.FACT_VIOLATOR_TRANSACTION",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "FACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, hvflag, CASE when LicPlateNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicPlateNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicPlateNbr, CASE when [LIC_PLATE_STATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LIC_PLATE_STATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LIC_PLATE_STATE], [last_qualified_tran_date], [hv_designation_start_date], [hv_designation_end_date], [LICENSE_PLATE_ID], CASE when [TAG_ID] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TAG_ID], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TAG_ID], [ACCT_ID], [ASSIGNED_DATE], [EXPIRED_DATE], DATE_CREATED from dbo.FACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HV_ANALYSIS_ANDY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select HV_Month, HV, [NEW_HV], [PAID_IN_FULL], [Returning_HV], [Pay_Plan], [Returning_HV_2], [Returning_HV_3], [Returning_HV_4], [Returning_HV_5], Returning_HV_6_more from dbo.HV_ANALYSIS_ANDY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "HV_Datail_ANDY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, [HV_Month], HV, [NEW_HV], [PAID_IN_FULL], [Pay_Plan], Returning_HV from dbo.HV_Datail_ANDY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LOAD_CONTROL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select USE_LOAD_CONTROL_DATE_IND, LOAD_CONTROL_DATE from dbo.LOAD_CONTROL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PAYMENTPLAN_CHARGEBACK_HIST",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select GENERATION_DATE, PAYMENTPLANID, ACTIVEAGREEMENTDATE, PLANSTARTDATE, FIRSTPAYMENTDATE, LASTPAYMENTDATE, [PAYMENT_DATE], PAYMENT, CASE when [TRANSACTION_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TRANSACTION_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TRANSACTION_TYPE], CASE when [POS_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([POS_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [POS_NAME], CASE when [PAYMENT_SOURCE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_SOURCE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_SOURCE], CASE when DELIVERY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DELIVERY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DELIVERY, CASE when PAYMENT_FORM is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_FORM, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_FORM from dbo.PAYMENTPLAN_CHARGEBACK_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PAYMENT_PLAN_INVOICES_FILES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when LOAD_FILE_NAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LOAD_FILE_NAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LOAD_FILE_NAME, [LAST_UPDATE_DATE], [INSTANCE_NBR], [VIOLATOR_ID], [ACCT_ID], CASE when PRIMARYVIOLATORLNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PRIMARYVIOLATORLNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PRIMARYVIOLATORLNAME, CASE when PRIMARYVIOLATORFNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PRIMARYVIOLATORFNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PRIMARYVIOLATORFNAME, CASE when SECONDARYVIOLATORFNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYVIOLATORFNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYVIOLATORFNAME, CASE when SECONDARYVIOLATORLNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYVIOLATORLNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYVIOLATORLNAME, CASE when PHONENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PHONENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PHONENBR, CASE when LICPLATENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICPLATENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICPLATENBR, CASE when ADDRESS1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS1, CASE when ADDRESS2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS2, CASE when CITY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITY, CASE when STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE, CASE when ZIPCODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIPCODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIPCODE, CASE when EMAIL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EMAIL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EMAIL, REMAININGBALANCE, MONTHLYPAYMENTAMOUNT, [SETTLEMENT_AMOUNT], [VIOL_INVOICE_ID], [TOTAL_FEE_DUE], [TOTAL_DUE], DUEDATE, ACTIVEAGREEMENTDATE, LASTPAYMENTDATE, [INVOICE_ID], [INVOICE_AMOUNT], TodaysDate from dbo.PAYMENT_PLAN_INVOICES_FILES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PAYMENT_SOURCE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PAYMENT_SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PAYMENT_SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PAYMENT_SOURCE_CODE, CASE when [PAYMENT_SOURCE_CODE_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_SOURCE_CODE_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_SOURCE_CODE_DESCR], INSERT_DATE from dbo.PAYMENT_SOURCE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PMT_TXN_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when PMT_TXN_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_TXN_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_TXN_TYPE, CASE when [PMT_TXN_TYPE_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMT_TXN_TYPE_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMT_TXN_TYPE_DESCR], INSERT_DATE from dbo.PMT_TXN_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PROCESS_LOG",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LOG_DATE, CASE when [LOG_SOURCE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LOG_SOURCE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LOG_SOURCE], CASE when [ELAPSED_TIME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ELAPSED_TIME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ELAPSED_TIME], CASE when [LOG_MESSAGE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LOG_MESSAGE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LOG_MESSAGE], ROWS_AFFECTED from dbo.PROCESS_LOG",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "SOURCE_CODE_TOLL",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when [SC_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SC_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SC_DESCR], CASE when [SOURCE_CODE_GROUP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE_GROUP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE_GROUP], INSERT_DATE from dbo.SOURCE_CODE_TOLL",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "SOURCE_CODE_TOLL_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when SOURCE_CODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SOURCE_CODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SOURCE_CODE, CASE when [SC_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SC_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SC_DESCR], CASE when [SOURCE_CODE_GROUP] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE_GROUP], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE_GROUP], LAST_UPDATE_DATE from dbo.SOURCE_CODE_TOLL_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "StateLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select StateLookupID, CASE when StateCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(StateCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as StateCode, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [STATE_LATITUDE], [STATE_LONGITUDE], [INSERT_DATE], LAST_UPDATE_DATE from dbo.StateLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "StateLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select StateLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.StateLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TER_LETTER_ALERTS_BAN",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AlertsRunID, BanLetterDueWeek, CASE when SentStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(SentStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as SentStatus, CASE when AlertLevel is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(AlertLevel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as AlertLevel, CASE when BanLetterAnalysis is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(BanLetterAnalysis, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as BanLetterAnalysis, CASE when PaymentPlanTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentPlanTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentPlanTiming, CASE when PaymentTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentTiming, CASE when BankruptcyTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(BankruptcyTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as BankruptcyTiming, CASE when MaxLettersThreshold is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(MaxLettersThreshold, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as MaxLettersThreshold, ViolatorID, VidSeq, LicPlateState, HvDate, DeterminationLetterDate, VrbLtr30daysDate, DtrLtr40daysDate, BanLetterDueMonday, BanLetterFinalDueMonday, BanLetterQueuedDate, BanLetterSendDate, BanLetterQueueCancelDate, BanLetterDate, ActiveAgreementDate, DefaultedDate, RejectedVrbBanLetterDate, ApplyPaymentPlanDate, [RITE_PaidInFullDate], [PP_PaidInFullDate], TermDate, BankruptcyDate, BankruptcyDismissedDate, AdminHearingDate, UserCancelDate, ViolatorCreatedDate, QuestMarkDetLetterAckDate, CASE when BanLetterStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(BanLetterStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as BanLetterStatus, CASE when ViolatorStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(ViolatorStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as ViolatorStatus, CASE when ViolatorStatusEligRmdy is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(ViolatorStatusEligRmdy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as ViolatorStatusEligRmdy, HvFlag, EligRmdyFlag, BanLetterFlag, NonHvPaymentPlanID, PaymentPlanID, PlanStartDate, PlanEndDate, CASE when PaymentPlanStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentPlanStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentPlanStatus, PaymentPlanCount, TotalNoOfMonths, MaxLetterStartDate, MaxLetterEndDate, GenerationDate from dbo.TER_LETTER_ALERTS_BAN",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TER_LETTER_ALERTS_DETERMINATION",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AlertsRunID, DeterminationLetterDueWeek, CASE when SentStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(SentStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as SentStatus, CASE when AlertLevel is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(AlertLevel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as AlertLevel, CASE when DeterminationLetterAnalysis is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(DeterminationLetterAnalysis, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as DeterminationLetterAnalysis, CASE when PaymentPlanTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentPlanTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentPlanTiming, CASE when PaymentTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentTiming, CASE when BankruptcyTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(BankruptcyTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as BankruptcyTiming, ViolatorID, VidSeq, HvDate, ViolatorCreatedDate, DeterminationLetterDueMonday, DeterminationLetterDate, DeterminationLetterQueuedDate, DeterminationLetterQueueCancelDate, DeterminationLetterSendDate, QuestMarkDetLetterAckDate, UserCancelDate, CASE when DeterminationLetterStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(DeterminationLetterStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as DeterminationLetterStatus, CASE when ViolatorStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(ViolatorStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as ViolatorStatus, CASE when ViolatorStatusEligRmdy is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(ViolatorStatusEligRmdy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as ViolatorStatusEligRmdy, ApplyPaymentPlanDate, ActiveAgreementDate, DefaultedDate, [RITE_PaidInFullDate], [PP_PaidInFullDate], TermDate, BankruptcyDate, BankruptcyDismissedDate, AdminHearingDate, HvFlag, EligRmdyFlag, DeterminationLetterFlag, NonHvPaymentPlanID, PaymentPlanID, PlanStartDate, PlanEndDate, CASE when PaymentPlanStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentPlanStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentPlanStatus, PaymentPlanCount, TotalNoOfMonths, GenerationDate from dbo.TER_LETTER_ALERTS_DETERMINATION",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TER_LETTER_ALERTS_TERM",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AlertsRunID, TermLetterDueWeek, CASE when SentStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SentStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SentStatus, CASE when AlertLevel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AlertLevel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AlertLevel, CASE when TermLetterAnalysis is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TermLetterAnalysis, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TermLetterAnalysis, ViolatorID, VidSeq, HvDate, TermDate, TermLetterDueMonday, TermLetterDate, TermLetterQueuedDate, TermLetterSendDate, QuestMarkTermLetterAckDate, CASE when TermLetterStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TermLetterStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TermLetterStatus, CASE when ViolatorStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorStatus, CASE when ViolatorStatusEligRmdy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorStatusEligRmdy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorStatusEligRmdy, HvFlag, EligRmdyFlag, TermLetterFlag, GenerationDate from dbo.TER_LETTER_ALERTS_TERM",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TER_LETTER_ALERTS_VRB",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AlertsRunID, VrbLetterDueWeek, CASE when SentStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(SentStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as SentStatus, CASE when AlertLevel is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(AlertLevel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as AlertLevel, CASE when VrbLetterAnalysis is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(VrbLetterAnalysis, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as VrbLetterAnalysis, CASE when PaymentPlanTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentPlanTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentPlanTiming, CASE when PaymentTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentTiming, CASE when BankruptcyTiming is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(BankruptcyTiming, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as BankruptcyTiming, CASE when MaxLettersThreshold is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(MaxLettersThreshold, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as MaxLettersThreshold, CASE when RejectedVrbFlag is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(RejectedVrbFlag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as RejectedVrbFlag, CASE when QueueLetterExpRegFlag is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(QueueLetterExpRegFlag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as QueueLetterExpRegFlag, ViolatorID, VidSeq, LicPlateState, HvDate, DeterminationLetterDate, DtrLtr40daysDate, DtrLtr40daysDueMonday, DefaultedMonday, VrbLetterDueMonday, FirstVrbLetterSendDate, FirstVrbLetterDate, ActiveAgreementDate, ApplyPaymentPlanDate, DefaultedDate, [RITE_PaidInFullDate], [PP_PaidInFullDate], TermDate, BankruptcyDate, BankruptcyDismissedDate, AdminHearingDate, DmvRequestBlockDate, ExpiringRegVrbQueueDate, DallasInvalidResponseDate, DlogVrbLetterQueuedDate, VrbLetterQueuedDate, VrbLetterQueueCancelDate, UserCancelDate, ViolatorCreatedDate, QuestMarkDetLetterAckDate, CASE when VrbLetterStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(VrbLetterStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as VrbLetterStatus, CASE when ViolatorStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(ViolatorStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as ViolatorStatus, CASE when ViolatorStatusEligRmdy is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(ViolatorStatusEligRmdy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as ViolatorStatusEligRmdy, HvFlag, EligRmdyFlag, VrbLetterFlag, NonHvPaymentPlanID, PaymentPlanID, PlanStartDate, PlanEndDate, CASE when PaymentPlanStatus is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(PaymentPlanStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as PaymentPlanStatus, PaymentPlanCount, TotalNoOfMonths, LastVrbLetterSendDate, VrbLetterSendCount, LastVrbLetterDate, VrbLetterCount, CASE when Agency is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(Agency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as Agency, CASE when DocNum is NULL then NULL else CHAR(34) + REPLACE(REPLACE(REPLACE(DocNum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"') + CHAR(34) end as DocNum, MaxLetterStartDate, MaxLetterEndDate, GenerationDate from dbo.TER_LETTER_ALERTS_VRB",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TRANSACTION_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TRANS_TYPE_ID, CASE when [TRANS_TYPE_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TRANS_TYPE_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TRANS_TYPE_DESCR], INSERT_DATE from dbo.TRANSACTION_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ID, ViolatorID, VidSeq, [CURRENT_IND], [HV_NON_HV_IND], CASE when LicPlateNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicPlateNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicPlateNbr, LicPlateStateLookupID, [VEHICLE_ID], CASE when DocNum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DocNum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DocNum, CASE when Vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Vin, CASE when PrimaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorFname, CASE when PrimaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorLname, CASE when SecondaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorFname, CASE when SecondaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorLname, CASE when DriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriversLicense, DriversLicenseStateLookupID, CASE when SecondaryDriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryDriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryDriversLicense, SecondaryDriversLicenseStateLookupID, EarliestHvTranDate, LatestHvTranDate, AdminCountyLookupID, RegistrationCountyLookupID, RegistrationDateNextMonth, RegistrationDateNextYear, ViolatorAgencyLookupID, ViolatorAddressSourceLookupID, ViolatorAddressStatusLookupID, ViolatorAddressActiveFlag, ViolatorAddressConfirmedFlag, CASE when ViolatorAddress1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddress1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddress1, CASE when ViolatorAddress2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddress2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddress2, CASE when ViolatorAddressCity is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressCity, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressCity, ViolatorAddressStateLookupID, CASE when ViolatorAddressZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressZipCode, CASE when ViolatorAddressPlus4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressPlus4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressPlus4, CASE when ViolatorAddressCreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressCreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressCreatedBy, ViolatorAddressCreateDate, CASE when ViolatorAddressUpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressUpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressUpdatedBy, ViolatorAddressUpdateDate, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Violator",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorAddressSourceLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorAddressSourceLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorAddressSourceLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorAddressSourceLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorAddressSourceLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorAddressSourceLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorAddressStatusLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorAddressStatusLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorAddressStatusLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorAddressStatusLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorAddressStatusLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorAddressStatusLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorAgencyLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorAgencyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorAgencyLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorAgencyLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorAgencyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorAgencyLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCallLog",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorCallLogID, ViolatorID, VidSeq, ViolatorCallLogLookupID, OutgoingCallFlag, CASE when PhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNbr, ConnectedFlag, CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedBy, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorCallLog",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCallLogLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorCallLogLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorCallLogLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCallLogLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorCallLogLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorCallLogLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCase_Bankruptcy_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, ExcusedAmount, CollectableAmount, BankruptcyInd from dbo.ViolatorCase_Bankruptcy_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCase_PaymentAgreement_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, SettlementAmount, DownPayment, Collections, PaidInFull, DefaultInd, AdminFees, CitationFees, MonthlyPaymentAmount, BalanceDue from dbo.ViolatorCase_PaymentAgreement_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorContact",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorContactID, ViolatorID, VidSeq, CASE when PhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNbr, CASE when WorkPhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WorkPhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WorkPhoneNbr, CASE when OtherPhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OtherPhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OtherPhoneNbr, CASE when EmailAddress is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EmailAddress, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EmailAddress, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorContact",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorContact_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorContactID, ViolatorID, VidSeq, CASE when PhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNbr, CASE when WorkPhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WorkPhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WorkPhoneNbr, CASE when OtherPhoneNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OtherPhoneNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OtherPhoneNbr, CASE when EmailAddress is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EmailAddress, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EmailAddress, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorContact_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatus",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusID, ViolatorID, VidSeq, HvFlag, HvDate, ViolatorStatusLookupID, HvExemptFlag, HvExemptDate, ViolatorStatusTermLookupID, TermFlag, TermDate, ViolatorStatusEligRmdyLookupID, EligRmdyFlag, EligRmdyDate, BanFlag, BanDate, BanStartDate, BanCiteWarnFlag, BanCiteWarnDate, BanCiteWarnCount, BanImpoundFlag, BanImpoundDate, VrbFlag, VrbDate, ViolatorStatusLetterDeterminationLookupID, DeterminationLetterFlag, DeterminationLetterDate, ViolatorStatusLetterBanLookupID, BanLetterFlag, BanLetterDate, ViolatorStatusLetterTermLookupID, TermLetterFlag, TermLetterDate, HvQAmountDue, HvQTollsDue, HvQTransactions, HvQFeesDue, TotalAmountDueInitial, TotalAmountDue, TotalTollsDue, TotalFeesDue, TotalCitationCount, TotalTransactionsInitial, TotalTransactionsCount, SettlementAmount, DownPayment, Collections, PaidInFull, DefaultInd, AdminFees, CitationFees, MonthlyPaymentAmount, BalanceDue, ExcusedAmount, CollectableAmount, BankruptcyInd, HVActive, HVRemoved, VrbAcknowledged, VrbRemoved, VrbRemovalQueued, BanByProcessServer, BanByDPS, BanByUSMail1stBan, [ACCT_ID], CASE when [ACCT_STATUS_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ACCT_STATUS_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ACCT_STATUS_CODE], [HAS_TOLL_TAG_ACCOUNT], TollTransactionCount, [BALANCE_AMOUNT], CASE when [PMT_TYPE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PMT_TYPE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PMT_TYPE_CODE], [REBILL_AMT], [REBILL_DATE], [BAL_LAST_UPDATED], Ban2ndLetterDate, Ban2ndLetterFlag, ViolatorStatusLetterBan2ndLookupID, ViolatorStatusLetterVrbLookupID, VrbLetterDate, VrbLetterFlag, BanDPSCount, BanPCPCount, BanWarnCount, BanCitationCount, BanImpoundCount, BanNoActionCount, BanFennellCount, [INSERT_DATE], [LAST_UPDATE_DATE], TAG_DATE_CREATED from dbo.ViolatorStatus",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusEligRmdyLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusEligRmdyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusEligRmdyLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusEligRmdyLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusEligRmdyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusEligRmdyLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterBan2ndLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterBan2ndLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterBan2ndLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterBan2ndLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterBan2ndLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterBan2ndLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterBanLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterBanLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterBanLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterBanLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterBanLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterBanLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterDeterminationLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterDeterminationLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterDeterminationLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterDeterminationLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterDeterminationLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterDeterminationLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterTermLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterTermLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterTermLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterTermLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterTermLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterTermLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterVrbLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterVrbLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterVrbLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLetterVrbLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLetterVrbLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusLetterVrbLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusTermLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusTermLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.ViolatorStatusTermLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatusTermLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusTermLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.ViolatorStatusTermLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatus_Event_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, HVActive, HVRemoved, VrbAcknowledged, VrbRemoved, VrbRemovalQueued, BanByProcessServer, BanByDPS, BanByUSMail1stBan from dbo.ViolatorStatus_Event_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatus_Mart",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ReportDate, ViolatorID, VidSeq, HvFlag, HvExemptFlag, TermFlag, TermAddedFlag, TermRemovedFlag, EligRmdyFlag, BanFlag, BanCiteWarnFlag, BanImpoundFlag, VrbFlag, VrbFlagAdded, VrbFlagRemoved, DeterminationLetterFlag, BanLetterFlag, TermLetterFlag, HVActive, HVActiveAdded, HVActiveRemoved, HVRemoved, VrbAcknowledged, VrbRemoved, VrbRemovalQueued, BanByProcessServer, BanByDPS, BanByUSMail1stBan from dbo.ViolatorStatus_Mart",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatus_Mart_Incr_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ReportDate, ViolatorID, VidSeq, TermAddedFlag, TermRemovedFlag, HVActiveAdded, HVActiveRemoved, VrbFlagAdded, VrbFlagRemoved from dbo.ViolatorStatus_Mart_Incr_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatus_Mart_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ReportDate, ViolatorID, VidSeq, HvFlag, HvExemptFlag, TermFlag, EligRmdyFlag, BanFlag, BanCiteWarnFlag, BanImpoundFlag, VrbFlag, DeterminationLetterFlag, BanLetterFlag, TermLetterFlag, BankruptcyInd, HVActive, HVRemoved, VrbAcknowledged, VrbRemoved, VrbRemovalQueued, BanByProcessServer, BanByDPS, BanByUSMail1stBan from dbo.ViolatorStatus_Mart_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorStatus_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorStatusID, ViolatorID, VidSeq, HvFlag, HvDate, ViolatorStatusLookupID, HvExemptFlag, HvExemptDate, ViolatorStatusTermLookupID, TermFlag, TermDate, ViolatorStatusEligRmdyLookupID, EligRmdyFlag, EligRmdyDate, BanFlag, BanDate, BanStartDate, BanCiteWarnFlag, BanCiteWarnDate, BanCiteWarnCount, BanImpoundFlag, BanImpoundDate, VrbFlag, VrbDate, ViolatorStatusLetterDeterminationLookupID, DeterminationLetterFlag, DeterminationLetterDate, ViolatorStatusLetterBanLookupID, BanLetterFlag, BanLetterDate, ViolatorStatusLetterTermLookupID, TermLetterFlag, TermLetterDate, HvQAmountDue, HvQTollsDue, HvQTransactions, HvQFeesDue, TotalAmountDue, TotalTollsDue, TotalFeesDue, TotalCitationCount, TotalTransactionsCount, SettlementAmount, DownPayment, Collections, PaidInFull, DefaultInd, AdminFees, CitationFees, MonthlyPaymentAmount, BalanceDue, ExcusedAmount, CollectableAmount, BankruptcyInd, Ban2ndLetterDate, Ban2ndLetterFlag, ViolatorStatusLetterBan2ndLookupID, ViolatorStatusLetterVrbLookupID, VrbLetterDate, VrbLetterFlag, BanDPSCount, BanPCPCount, BanWarnCount, BanCitationCount, BanImpoundCount, BanNoActionCount, BanFennellCount, [ViolatorStatus_LAST_UPDATE_TYPE], [ViolatorAmountsSummary_LAST_UPDATE_TYPE], [ViolatorStatus_LAST_UPDATE_DATE], ViolatorAmountsSummary_LAST_UPDATE_DATE from dbo.ViolatorStatus_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_ADDRESS_AUDIT_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, [VIOLATOR_ADDR_SEQ], CASE when ADDRESS1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS1, CASE when ADDRESS2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS2, CASE when CITY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITY, CASE when STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE, CASE when [ZIP_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ZIP_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ZIP_CODE], CASE when PLUS4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PLUS4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PLUS4, CASE when [CREATED_BY] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CREATED_BY], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CREATED_BY], [DATE_CREATED], CASE when [MODIFIED_BY] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([MODIFIED_BY], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [MODIFIED_BY], DATE_MODIFIED from dbo.VIOLATOR_ADDRESS_AUDIT_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_AVI_TOLLS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, AVI_TOLLS_DUE from dbo.VIOLATOR_AVI_TOLLS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_Bankruptcy",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, BankruptcyInstanceNbr, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when LastName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName2, CASE when FirstName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName2, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when CaseNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CaseNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CaseNumber, DateNotified, FilingDate, ConversionDate, ExcusedAmount, CollectableAmount, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, DischargeDismissedId, [Discharge_Dismissed_Date], Assets, CollectionAccounts, CASE when LawFirm is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LawFirm, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LawFirm, CASE when AttorneyName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AttorneyName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AttorneyName, ClaimFilled, CASE when Comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Comments, FilingStatusId, Insertdate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdatedate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Violator_Bankruptcy",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_Bankruptcy_Final_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, BankruptcyInstanceNbr, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when LastName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName2, CASE when FirstName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName2, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when CaseNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CaseNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CaseNumber, DateNotified, FilingDate, ConversionDate, ExcusedAmount, CollectableAmount, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, DischargeDismissedId, [Discharge_Dismissed_Date], Assets, CollectionAccounts, CASE when LawFirm is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LawFirm, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LawFirm, CASE when AttorneyName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AttorneyName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AttorneyName, ClaimFilled, CASE when Comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Comments, FilingStatusId, InsertDate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdateDate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.Violator_Bankruptcy_Final_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_Bankruptcy_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, BankruptcyInstanceNbr, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when LastName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName2, CASE when FirstName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName2, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when CaseNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CaseNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CaseNumber, DateNotified, FilingDate, ConversionDate, ExcusedAmount, CollectableAmount, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, CASE when DischargeDismissed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DischargeDismissed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DischargeDismissed, [Discharge_Dismissed_Date], Assets, CollectionAccounts, CASE when LawFirm is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LawFirm, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LawFirm, CASE when AttorneyName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AttorneyName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AttorneyName, ClaimFilled, CASE when Comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Comments, CASE when FilingStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FilingStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FilingStatus, InsertDate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdateDate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.Violator_Bankruptcy_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_INVOICE_HIST",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select GENERATION_DATE, INSTANCENBR, [ALT_VIOLATOR_ID], CASE when [CA_ACCT_ID] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CA_ACCT_ID], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CA_ACCT_ID], CASE when PRIMARYVIOLATORLNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PRIMARYVIOLATORLNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PRIMARYVIOLATORLNAME, CASE when PRIMARYVIOLATORFNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PRIMARYVIOLATORFNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PRIMARYVIOLATORFNAME, CASE when SECONDARYVIOLATORLNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYVIOLATORLNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYVIOLATORLNAME, CASE when SECONDARYVIOLATORFNAME is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SECONDARYVIOLATORFNAME, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SECONDARYVIOLATORFNAME, CASE when PHONENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PHONENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PHONENBR, CASE when LICPLATENBR is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LICPLATENBR, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LICPLATENBR, CASE when ADDRESS1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS1, CASE when CITY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CITY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CITY, CASE when ADDRESS2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ADDRESS2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ADDRESS2, CASE when ZIPCODE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZIPCODE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZIPCODE, CASE when STATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(STATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as STATE, CASE when EMAIL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EMAIL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EMAIL, REMAININGBALANCE, MONTHLYPAYMENTAMOUNT, [VIOL_INVOICE_ID], [TOTAL_FEE_DUE], CASE when ACTIVEAGREEMENTDATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ACTIVEAGREEMENTDATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ACTIVEAGREEMENTDATE, CASE when DUEDATE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DUEDATE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DUEDATE, CASE when LASTINVOICENBR1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LASTINVOICENBR1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LASTINVOICENBR1, CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, [SETTLEMENT AMOUNT], CASE when AGREEMENTTYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AGREEMENTTYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AGREEMENTTYPE, STARTDATE from dbo.VIOLATOR_INVOICE_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_INVOICE_PAYMENT_POS_HIST",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select GENERATION_DATE, PaymentPlanID, PlanStartDate, FirstPaymentDate, LastPaymentDate, [VIOLATOR_ID], [VBI_INVOICE_ID], [VIOL_INVOICE_ID], [PAYMENT_DATE], CASE when [POS_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([POS_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [POS_NAME], CASE when [PAYMENT_SOURCE_CODE_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_SOURCE_CODE_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_SOURCE_CODE_DESCR], CASE when [DELIVERY_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DELIVERY_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DELIVERY_DESCR], CASE when [PAYMENT_FORM_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PAYMENT_FORM_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PAYMENT_FORM_DESCR], CASE when [USER_NAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([USER_NAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [USER_NAME], CASE when PMT_CREATED_BY is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PMT_CREATED_BY, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PMT_CREATED_BY from dbo.VIOLATOR_INVOICE_PAYMENT_POS_HIST",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_OLD",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ID, ViolatorID, VidSeq, [CURRENT_IND], [HV_NON_HV_IND], CASE when LicPlateNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicPlateNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicPlateNbr, LicPlateStateLookupID, [VEHICLE_ID], CASE when DocNum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DocNum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DocNum, CASE when Vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Vin, CASE when PrimaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorFname, CASE when PrimaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorLname, CASE when SecondaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorFname, CASE when SecondaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorLname, CASE when DriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriversLicense, DriversLicenseStateLookupID, CASE when SecondaryDriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryDriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryDriversLicense, SecondaryDriversLicenseStateLookupID, EarliestHvTranDate, LatestHvTranDate, AdminCountyLookupID, RegistrationCountyLookupID, RegistrationDateNextMonth, RegistrationDateNextYear, ViolatorAgencyLookupID, ViolatorAddressSourceLookupID, ViolatorAddressStatusLookupID, ViolatorAddressActiveFlag, ViolatorAddressConfirmedFlag, CASE when ViolatorAddress1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddress1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddress1, CASE when ViolatorAddress2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddress2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddress2, CASE when ViolatorAddressCity is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressCity, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressCity, ViolatorAddressStateLookupID, CASE when ViolatorAddressZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressZipCode, CASE when ViolatorAddressPlus4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressPlus4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressPlus4, CASE when ViolatorAddressCreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressCreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressCreatedBy, ViolatorAddressCreateDate, CASE when ViolatorAddressUpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressUpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressUpdatedBy, ViolatorAddressUpdateDate, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Violator_OLD",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr, CASE when [ENFORCEMENT_TOOL_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ENFORCEMENT_TOOL_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ENFORCEMENT_TOOL_CODE], CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, AgentID, [PaymentAgreement_SourceId], SettlementAmount, DownPayment, DueDate, AgreementTypeId, TodaysDate, Collections, CASE when RemainingBalanceDue is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RemainingBalanceDue, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RemainingBalanceDue, PaymentPlanDueDate, CASE when CheckNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CheckNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CheckNumber, PaidInFull, DefaultInd, SpanishOnly, AmnestyAccount, [Tolltag_Acct_Id], AdminFees, CitationFees, MonthlyPaymentAmount, DefaultDate, MaintenanceAgencyId, ViolatorID2, ViolatorID3, ViolatorID4, BalanceDue, [NTTA_Collections], CASE when ContactSource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ContactSource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ContactSource, CASE when PaymentPlanStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaymentPlanStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaymentPlanStatus, Insertdate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdatedate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Violator_PaymentAgreement",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Current",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr from dbo.Violator_PaymentAgreement_Current",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Current_Test",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr from dbo.Violator_PaymentAgreement_Current_Test",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Current_with_Other_ViolatorIds",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr, AltViolatorId from dbo.Violator_PaymentAgreement_Current_with_Other_ViolatorIds",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Current_with_Other_ViolatorIds_Test",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr, AltViolatorId from dbo.Violator_PaymentAgreement_Current_with_Other_ViolatorIds_Test",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Final_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, InstanceNbr, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, AgentID, [PaymentAgreement_SourceId], SettlementAmount, DownPayment, DueDate, AgreementTypeId, TodaysDate, Collections, CASE when RemainingBalanceDue is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RemainingBalanceDue, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RemainingBalanceDue, PaymentPlanDueDate, CASE when CheckNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CheckNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CheckNumber, PaidInFull, DefaultInd, SpanishOnly, AmnestyAccount, [Tolltag_Acct_Id], AdminFees, CitationFees, MonthlyPaymentAmount, [LAST_UPDATE_TYPE], [LAST_UPDATE_DATE], InsertDate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdateDate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, DefaultDate, MaintenanceAgencyID, ViolatorID2, ViolatorID3, ViolatorID4, BalanceDue, [NTTA_Collections], CASE when [ENFORCEMENT_TOOL_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ENFORCEMENT_TOOL_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ENFORCEMENT_TOOL_CODE], [ENFORCEMENT_TOOL_DATE], CASE when ContactSource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ContactSource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ContactSource, CASE when PaymentPlanStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaymentPlanStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaymentPlanStatus from dbo.Violator_PaymentAgreement_Final_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Older",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr, CASE when [ENFORCEMENT_TOOL_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ENFORCEMENT_TOOL_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ENFORCEMENT_TOOL_CODE], CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, AgentID, [PaymentAgreement_SourceId], SettlementAmount, DownPayment, DueDate, AgreementTypeId, TodaysDate, Collections, CASE when RemainingBalanceDue is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RemainingBalanceDue, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RemainingBalanceDue, PaymentPlanDueDate, CASE when CheckNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CheckNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CheckNumber, PaidInFull, DefaultInd, SpanishOnly, AmnestyAccount, [Tolltag_Acct_Id], AdminFees, CitationFees, MonthlyPaymentAmount, DefaultDate, MaintenanceAgencyId, ViolatorID2, ViolatorID3, ViolatorID4, BalanceDue, [NTTA_Collections], Insertdate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdatedate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Violator_PaymentAgreement_Older",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorId, VidSeq, InstanceNbr, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, CASE when LicensePlate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlate, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, AgentID, CASE when [PaymentAgreement_Source] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PaymentAgreement_Source], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PaymentAgreement_Source], SettlementAmount, DownPayment, DueDate, CASE when AgreementType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgreementType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgreementType, TodaysDate, Collections, CASE when RemainingBalanceDue is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RemainingBalanceDue, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RemainingBalanceDue, PaymentPlanDueDate, CASE when CheckNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CheckNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CheckNumber, PaidInFull, DefaultInd, SpanishOnly, AmnestyAccount, [Tolltag_Acct_Id], AdminFees, CitationFees, MonthlyPaymentAmount, DefaultDate, CASE when MaintenanceAgency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MaintenanceAgency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MaintenanceAgency, ViolatorID2, ViolatorID3, ViolatorID4, BalanceDue, [NTTA_Collections], CASE when [ENFORCEMENT_TOOL_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ENFORCEMENT_TOOL_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ENFORCEMENT_TOOL_CODE], [ENFORCEMENT_TOOL_DATE], CASE when ContactSource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ContactSource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ContactSource, CASE when PaymentPlanStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PaymentPlanStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PaymentPlanStatus, InsertDate, CASE when InsertByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InsertByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InsertByUser, LastUpdateDate, CASE when LastUpdateByUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastUpdateByUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastUpdateByUser, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.Violator_PaymentAgreement_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_VIOL_INVOICES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr, AltViolatorId, [VIOL_INVOICE_ID], CASE when [INVOICE_DATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([INVOICE_DATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [INVOICE_DATE], [INVOICE_AMOUNT], [INVOICE_AMT_PAID], [VIOL_INV_BATCH_ID], CASE when [VIOL_INV_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_INV_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_INV_STATUS], [TOLL_DUE_AMOUNT], [FINE_AMOUNT], [PAID_AMOUNT], CASE when [VIOL_INV_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_INV_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_INV_STATUS_DESCR], INVOICE_STATUS_DATE from dbo.Violator_PaymentAgreement_VIOL_INVOICES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_VIOL_INVOICES_Test",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, InstanceNbr, AltViolatorId, [VIOL_INVOICE_ID], [INVOICE_DATE], [INVOICE_AMOUNT], [INVOICE_AMT_PAID], [VIOL_INV_BATCH_ID], CASE when [VIOL_INV_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_INV_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_INV_STATUS], [TOLL_DUE_AMOUNT], [FINE_AMOUNT], [PAID_AMOUNT], CASE when [VIOL_INV_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_INV_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_INV_STATUS_DESCR], INVOICE_STATUS_DATE from dbo.Violator_PaymentAgreement_VIOL_INVOICES_Test",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_PaymentAgreement_VIOL_INVOICE_CA_ACCT_ID",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOL_INVOICE_ID, CA_ACCT_ID from dbo.Violator_PaymentAgreement_VIOL_INVOICE_CA_ACCT_ID",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_PAYMENTPLAN_XREF",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PaymentPlanID, VIOLATORID, VIDSEQ, PaymentPlanViolatorSeQ, DeletedFlag, PaymentPlanStatus from dbo.VIOLATOR_PAYMENTPLAN_XREF",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when LicPlateNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicPlateNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicPlateNbr, LicPlateStateLookupID, CASE when VehicleMake is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleMake, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleMake, CASE when VehicleModel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleModel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleModel, CASE when VehicleYear is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleYear, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleYear, CASE when DocNum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DocNum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DocNum, CASE when Vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Vin, CASE when PrimaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorFname, CASE when PrimaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorLname, CASE when SecondaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorFname, CASE when SecondaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorLname, CASE when DriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriversLicense, DriversLicenseStateLookupID, CASE when SecondaryDriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryDriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryDriversLicense, SecondaryDriversLicenseStateLookupID, EarliestHvTranDate, LatestHvTranDate, AdminCountyLookupID, RegistrationCountyLookupID, RegistrationDateNextMonth, RegistrationDateNextYear, ViolatorAgencyLookupID, ViolatorAddressSourceLookupID, ViolatorAddressStatusLookupID, ActiveFlag, ConfirmedFlag, CASE when Address1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address1, CASE when Address2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address2, CASE when City is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(City, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as City, StateLookupID, CASE when ZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZipCode, CASE when Plus4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Plus4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Plus4, ViolatorAddressCreateDate, CASE when ViolatorAddressCreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressCreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressCreatedBy, ViolatorAddressUpdateDate, CASE when ViolatorAddressUpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressUpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressUpdatedBy, [ViolAddr_LAST_UPDATE_TYPE], ViolAddr_LAST_UPDATE_DATE from dbo.Violator_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_Stage_Current",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CURRENT_IND from dbo.Violator_Stage_Current",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Violator_Stage_WITH_VEHICLE_ID",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, CASE when LicPlateNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicPlateNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicPlateNbr, LicPlateStateLookupID, [VEHICLE_ID], CASE when DocNum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DocNum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DocNum, CASE when Vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Vin, CASE when PrimaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorFname, CASE when PrimaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PrimaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PrimaryViolatorLname, CASE when SecondaryViolatorFname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorFname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorFname, CASE when SecondaryViolatorLname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryViolatorLname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryViolatorLname, CASE when DriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriversLicense, DriversLicenseStateLookupID, CASE when SecondaryDriversLicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SecondaryDriversLicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SecondaryDriversLicense, SecondaryDriversLicenseStateLookupID, EarliestHvTranDate, LatestHvTranDate, AdminCountyLookupID, RegistrationCountyLookupID, RegistrationDateNextMonth, RegistrationDateNextYear, ViolatorAgencyLookupID, ViolatorAddressSourceLookupID, ViolatorAddressStatusLookupID, ActiveFlag, ConfirmedFlag, CASE when Address1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address1, CASE when Address2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address2, CASE when City is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(City, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as City, StateLookupID, CASE when ZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZipCode, CASE when Plus4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Plus4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Plus4, CASE when ViolatorAddressCreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressCreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressCreatedBy, ViolatorAddressCreateDate, CASE when ViolatorAddressUpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorAddressUpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorAddressUpdatedBy, ViolatorAddressUpdateDate, [ViolAddr_LAST_UPDATE_TYPE], ViolAddr_LAST_UPDATE_DATE from dbo.Violator_Stage_WITH_VEHICLE_ID",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOLATOR_SUMMARY",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VIOLATOR_ID, CASE when [VIOLATOR_FNAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOLATOR_FNAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOLATOR_FNAME], CASE when [VIOLATOR_LNAME] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOLATOR_LNAME], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOLATOR_LNAME], CASE when [PHONE_NBR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([PHONE_NBR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [PHONE_NBR], CASE when [EMAIL_ADDR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([EMAIL_ADDR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [EMAIL_ADDR], [ADMIN_FEE], [ADMIN_FEE2], [VIOLATION_TOLLS], [TOLLS_DUE], CASE when [LIC_PLATE_NBR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LIC_PLATE_NBR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LIC_PLATE_NBR], CASE when [LIC_PLATE_STATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LIC_PLATE_STATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LIC_PLATE_STATE], CASE when [VEHICLE_MAKE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_MAKE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_MAKE], CASE when [VEHICLE_MODEL] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_MODEL], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_MODEL], CASE when [VEHICLE_BODY] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_BODY], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_BODY], CASE when [VEHICLE_YEAR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_YEAR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_YEAR], CASE when [VEHICLE_COLOR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VEHICLE_COLOR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VEHICLE_COLOR], CASE when DOCNO is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DOCNO, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DOCNO, CASE when VIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIN, [LAST_INVOICE_ID], [TOLLTAG_ACCT_ID], [INSERT_DATE], LOAD_DATETIME from dbo.VIOLATOR_SUMMARY",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_INV_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_INV_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_INV_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_INV_STATUS, CASE when [VIOL_INV_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_INV_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_INV_STATUS_DESCR], INSERT_DATE from dbo.VIOL_INV_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_PAY_TYPES",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_PAY_TYPE is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_PAY_TYPE, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_PAY_TYPE, CASE when [VIOL_PAY_TYPE_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_PAY_TYPE_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_PAY_TYPE_DESCR], INSERT_DATE from dbo.VIOL_PAY_TYPES",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VIOL_STATUS",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when VIOL_STATUS is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIOL_STATUS, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIOL_STATUS, CASE when [VIOL_STATUS_DESCR] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_STATUS_DESCR], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_STATUS_DESCR], INSERT_DATE from dbo.VIOL_STATUS",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Vrb",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbID, ViolatorID, VidSeq, ActiveFlag, VrbStatusLookupID, AppliedDate, VrbAgencyLookupID, SentDate, AcknowledgedDate, RejectionDate, VrbRejectLookupID, RemovedDate, VrbRemovalLookupID, CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedBy, [INSERT_DATE], LAST_UPDATE_DATE from dbo.Vrb",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbAgencyLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbAgencyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.VrbAgencyLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbAgencyLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbAgencyLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.VrbAgencyLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbRejectLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbRejectLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.VrbRejectLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbRejectLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbRejectLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.VrbRejectLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbRemovalLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbRemovalLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.VrbRemovalLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbRemovalLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbRemovalLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.VrbRemovalLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbStatusLookup",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbStatusLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [INSERT_DATE], LAST_UPDATE_DATE from dbo.VrbStatusLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VrbStatusLookup_Stage",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbStatusLookupID, CASE when Descr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Descr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Descr, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.VrbStatusLookup_Stage",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VRB_STAGE",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VrbID, ViolatorID, VidSeq, ActiveFlag, VrbStatusLookupID, AppliedDate, VrbAgencyLookupID, SentDate, AcknowledgedDate, RejectionDate, VrbRejectLookupID, RemovedDate, VrbRemovalLookupID, CreatedDate, CASE when CreatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedBy, UpdatedDate, CASE when UpdatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedBy, [LAST_UPDATE_TYPE], LAST_UPDATE_DATE from dbo.VRB_STAGE",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "zzFACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE_2",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ViolatorID, VidSeq, hvflag, CASE when LicPlateNbr is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicPlateNbr, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicPlateNbr, CASE when [LIC_PLATE_STATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LIC_PLATE_STATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LIC_PLATE_STATE], [last_qualified_tran_date], [hv_designation_start_date], [hv_designation_end_date], [LICENSE_PLATE_ID], CASE when [TAG_ID] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TAG_ID], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TAG_ID], [ACCT_ID], EXPIRED_DATE from dbo.zzFACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE_2",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "zzFACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE_22",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select violator_id, [vid_seq], CASE when [lic_plate_nbr] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([lic_plate_nbr], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [lic_plate_nbr], CASE when [LIC_PLATE_STATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([LIC_PLATE_STATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [LIC_PLATE_STATE], [last_qualified_tran_date], [hv_designation_start_date], [hv_designation_end_date], [LICENSE_PLATE_ID], CASE when [TAG_ID] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TAG_ID], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TAG_ID], [ACCT_ID], [EXPIRED_DATE], [ttxn_id], CASE when [posted_date] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([posted_date], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [posted_date], [POSTED_TIME_ID], CASE when [tt_trans_mmyyyy] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([tt_trans_mmyyyy], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [tt_trans_mmyyyy], amount, [LANE_ID], CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], [TRANS_TYPE_ID], CASE when [CREDITED_FLAG] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([CREDITED_FLAG], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [CREDITED_FLAG], CASE when [TRANSACTION_DATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TRANSACTION_DATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TRANSACTION_DATE], [TRANSACTION_TIME_ID], rn from dbo.zzFACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE_22",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "zzFACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE_222",
            "schema_name": "dbo",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select violator_id, [vid_seq], [TRANSACTION_ID], CASE when [TRANSACTION_TYPE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TRANSACTION_TYPE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TRANSACTION_TYPE], [LANE_ID], [LICENSE_PLATE_ID], CASE when [VIOL_STATUS] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([VIOL_STATUS], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [VIOL_STATUS], [TRANS_TYPE_ID], CASE when [SOURCE_CODE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([SOURCE_CODE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [SOURCE_CODE], CASE when [TRANSACTION_DATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([TRANSACTION_DATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [TRANSACTION_DATE], [TRANSACTION_TIME_ID], [TOLL_DUE], [TOLL_PAID], CASE when [POST_DATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([POST_DATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [POST_DATE], [POST_TIME_ID], [ZC_INVOICE_COUNT], [VIOL_INVOICE_COUNT], CASE when [STATUS_DATE] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([STATUS_DATE], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [STATUS_DATE], CASE when [DATE_EXCUSED] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([DATE_EXCUSED], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [DATE_EXCUSED], [TOLL_TRANSACTION_CREDITED_FLAG], INSERT_DATE from dbo.zzFACT_VIOLATOR_TRANSACTION_VIOLATOR_ACCOUNT_TAG_STAGE_222",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_bgn], [cal_end], CASE when [cal_wk_day_end] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_day_end], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_day_end], [cal_days_nrml], [cal_days_leap], [cal_wks_nrml], [cal_wks_leap], [cal_prds_nrml], [cal_prds_leap], [cal_qtrs_nrml], [cal_qtrs_leap], [cal_seas_nrml], [cal_seas_leap], CASE when [cal_desc] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_desc], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_desc], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_bgn], [cal_day_end], [cal_day_ix], [cal_day_typ_id], [cal_day_typ_grp_id], [cal_day_wk_bgn], [cal_day_prd_bgn], [cal_day_qtr_bgn], [cal_day_sea_bgn], [cal_day_yr_bgn], [cal_wk_bgn], [cal_wk_end], [cal_wk_ix], [cal_wk_prd_bgn], [cal_wk_qtr_bgn], [cal_wk_sea_bgn], [cal_wk_yr_bgn], [cal_prd_bgn], [cal_prd_end], [cal_prd_ix], [cal_prd_qtr_bgn], [cal_prd_sea_bgn], [cal_prd_yr_bgn], [cal_qtr_bgn], [cal_qtr_end], [cal_qtr_ix], [cal_qtr_sea_bgn], [cal_qtr_yr_bgn], [cal_sea_bgn], [cal_sea_end], [cal_sea_ix], [cal_sea_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_ix], [cal_yr_leap], [cal_days_wk], [cal_day_wk], [cal_days_prd], [cal_day_prd], [cal_days_qtr], [cal_day_qtr], [cal_days_sea], [cal_day_sea], [cal_days_yr], [cal_day_yr], [cal_wks_prd], [cal_wk_prd], [cal_wks_qtr], [cal_wk_qtr], [cal_wks_sea], [cal_wk_sea], [cal_wks_yr], [cal_wk_yr], [cal_prds_qtr], [cal_prd_qtr], [cal_prds_sea], [cal_prd_sea], [cal_prds_yr], [cal_prd_yr], [cal_qtrs_sea], [cal_qtr_sea], [cal_qtrs_yr], [cal_qtr_yr], [cal_seas_yr], [cal_sea_yr], CASE when [cal_day_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sid], CASE when [cal_day_typ_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_sid], CASE when [cal_day_typ_grp_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_grp_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_grp_sid], CASE when [cal_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sid], CASE when [cal_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sid], CASE when [cal_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sid], CASE when [cal_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_day_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_sid], CASE when [cal_day_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_sid], CASE when [cal_day_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_sid], CASE when [cal_day_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sea_sid], CASE when [cal_day_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_sid], CASE when [cal_wk_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_sid], CASE when [cal_wk_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_sid], CASE when [cal_wk_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_sid], CASE when [cal_wk_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_sid], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_sid], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_qtr_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_sid], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_sea_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_sid], CASE when [cal_day_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_desc_1], CASE when [cal_day_typ_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_desc_1], CASE when [cal_day_typ_grp_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_grp_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_grp_desc_1], CASE when [cal_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_1], CASE when [cal_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_1], CASE when [cal_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_1], CASE when [cal_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_day_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_1], CASE when [cal_day_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_1], CASE when [cal_day_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_1], CASE when [cal_day_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sea_desc_1], CASE when [cal_day_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_1], CASE when [cal_wk_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_1], CASE when [cal_wk_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_1], CASE when [cal_wk_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_1], CASE when [cal_wk_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_1], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when [cal_prd_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_1], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when [cal_qtr_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_1], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_sea_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_1], CASE when [cal_day_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_desc_2], CASE when [cal_day_typ_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_desc_2], CASE when [cal_day_typ_grp_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_grp_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_grp_desc_2], CASE when [cal_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_2], CASE when [cal_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_2], CASE when [cal_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_2], CASE when [cal_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_day_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_2], CASE when [cal_day_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_2], CASE when [cal_day_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_2], CASE when [cal_day_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sea_desc_2], CASE when [cal_day_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_2], CASE when [cal_wk_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_2], CASE when [cal_wk_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_2], CASE when [cal_wk_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_2], CASE when [cal_wk_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_2], CASE when [cal_prd_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_2], CASE when [cal_prd_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_2], CASE when [cal_prd_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_2], CASE when [cal_qtr_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_2], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], CASE when [cal_sea_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_day",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_prd",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_prd_bgn], [cal_day_prd_ix], [cal_days_prd], [cal_day_prd], CASE when [cal_day_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_sid], CASE when [cal_day_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_1], CASE when [cal_day_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_day_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_qtr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_qtr_bgn], [cal_day_qtr_ix], [cal_days_qtr], [cal_day_qtr], CASE when [cal_day_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_sid], CASE when [cal_day_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_1], CASE when [cal_day_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_day_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_wk",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_wk_bgn], [cal_day_wk_ix], [cal_days_wk], [cal_day_wk], CASE when [cal_day_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_sid], CASE when [cal_day_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_1], CASE when [cal_day_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_day_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_x",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_day_bgn], [cal_comp_day_bgn], [cal_comp_bgn], [cal_comp_end], [cal_day_x_bgn], [cal_day_x_end], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_day_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_yr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_yr_bgn], [cal_day_yr_ix], [cal_days_yr], [cal_day_yr], CASE when [cal_day_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_sid], CASE when [cal_day_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_1], CASE when [cal_day_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_day_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_load",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_load_day_bgn, [cal_dflt_day_bgn], [cal_dflt_day_end], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_load",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_mxm_wk_prd",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_wk_bgn], [cal_prd_bgn], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_mxm_wk_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_bgn], [cal_prd_end], [cal_prd_ix], [cal_prd_qtr_bgn], [cal_prd_sea_bgn], [cal_prd_yr_bgn], [cal_qtr_bgn], [cal_qtr_end], [cal_qtr_ix], [cal_qtr_sea_bgn], [cal_qtr_yr_bgn], [cal_sea_bgn], [cal_sea_end], [cal_sea_ix], [cal_sea_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_ix], [cal_yr_leap], [cal_prds_qtr], [cal_prd_qtr], [cal_prds_sea], [cal_prd_sea], [cal_prds_yr], [cal_prd_yr], [cal_qtrs_sea], [cal_qtr_sea], [cal_qtrs_yr], [cal_qtr_yr], [cal_seas_yr], [cal_sea_yr], CASE when [cal_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sid], CASE when [cal_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sid], CASE when [cal_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_sid], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_qtr_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_sid], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_sea_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_sid], CASE when [cal_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_1], CASE when [cal_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_1], CASE when [cal_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when [cal_prd_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_1], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when [cal_qtr_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_1], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_sea_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_1], CASE when [cal_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_2], CASE when [cal_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_2], CASE when [cal_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_prd_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_2], CASE when [cal_prd_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_2], CASE when [cal_prd_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_2], CASE when [cal_qtr_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_2], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], CASE when [cal_sea_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_qtr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_qtr_bgn], [cal_prd_qtr_ix], [cal_prds_qtr], [cal_prd_qtr], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when [cal_prd_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_prd_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_x",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_prd_bgn], [cal_comp_prd_bgn], [cal_comp_bgn], [cal_comp_end], [cal_prd_x_bgn], [cal_prd_x_end], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_prd_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_yr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_yr_bgn], [cal_prd_yr_ix], [cal_prds_yr], [cal_prd_yr], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when [cal_prd_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_prd_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_qtr_bgn], [cal_qtr_end], [cal_qtr_ix], [cal_qtr_sea_bgn], [cal_qtr_yr_bgn], [cal_sea_bgn], [cal_sea_end], [cal_sea_ix], [cal_sea_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_ix], [cal_yr_leap], [cal_qtrs_sea], [cal_qtr_sea], [cal_qtrs_yr], [cal_qtr_yr], [cal_seas_yr], [cal_sea_yr], CASE when [cal_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sid], CASE when [cal_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_qtr_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_sid], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_sea_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_sid], CASE when [cal_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_1], CASE when [cal_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_qtr_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_1], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_sea_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_1], CASE when [cal_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_2], CASE when [cal_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_qtr_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_2], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], CASE when [cal_sea_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_x",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_qtr_bgn], [cal_comp_qtr_bgn], [cal_comp_bgn], [cal_comp_end], [cal_qtr_x_bgn], [cal_qtr_x_end], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_qtr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_yr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_qtr_yr_bgn], [cal_qtr_yr_ix], [cal_qtrs_yr], [cal_qtr_yr], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_qtr_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_role",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_role_id, [cal_role_ix], CASE when [cal_role_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_role_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_role_desc_1], CASE when [cal_role_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_role_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_role_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_role",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_wk_bgn], [cal_wk_end], [cal_wk_ix], [cal_wk_prd_bgn], [cal_wk_qtr_bgn], [cal_wk_sea_bgn], [cal_wk_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_ix], [cal_yr_leap], [cal_wks_prd], [cal_wk_prd], [cal_wks_qtr], [cal_wk_qtr], [cal_wks_sea], [cal_wk_sea], [cal_wks_yr], [cal_wk_yr], CASE when [cal_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_wk_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_sid], CASE when [cal_wk_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_sid], CASE when [cal_wk_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_sid], CASE when [cal_wk_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_sid], CASE when [cal_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_wk_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_1], CASE when [cal_wk_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_1], CASE when [cal_wk_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_1], CASE when [cal_wk_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_1], CASE when [cal_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_wk_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_2], CASE when [cal_wk_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_2], CASE when [cal_wk_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_2], CASE when [cal_wk_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk_x",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_wk_bgn], [cal_comp_wk_bgn], [cal_comp_bgn], [cal_comp_end], [cal_wk_x_bgn], [cal_wk_x_end], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_wk_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_1x1",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_1x1_id, CASE when [cal_x_1x1_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_1x1_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_1x1_desc_1], CASE when [cal_x_1x1_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_1x1_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_1x1_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_x_1x1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_mxm",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_mxm_id, CASE when [cal_x_mxm_attrib] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_attrib], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_attrib], CASE when [cal_x_mxm_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_desc_1], CASE when [cal_x_mxm_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_x_mxm",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_yr_bgn], [cal_yr_end], [cal_yr_ix], [cal_yr_leap], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr_x",
            "schema_name": "dto",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_yr_bgn], [cal_comp_yr_bgn], [cal_comp_bgn], [cal_comp_end], [cal_yr_x_bgn], [cal_yr_x_end], [etl_sid], [etl_chg], CAST(etl_day AS datetime2(6)) AS etl_day from dto.cal_yr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_day_bgn], [cal_comp_day_bgn], [cal_comp_bgn], [cal_comp_end], [cal_day_x_bgn], cal_day_x_end from land.cal_day_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_prd_bgn], [cal_comp_prd_bgn], [cal_comp_bgn], [cal_comp_end], [cal_prd_x_bgn], cal_prd_x_end from land.cal_prd_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_qtr_bgn], [cal_comp_qtr_bgn], [cal_comp_bgn], [cal_comp_end], [cal_qtr_x_bgn], cal_qtr_x_end from land.cal_qtr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_wk_bgn], [cal_comp_wk_bgn], [cal_comp_bgn], [cal_comp_end], [cal_wk_x_bgn], cal_wk_x_end from land.cal_wk_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr_x",
            "schema_name": "land",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_yr_bgn], [cal_comp_yr_bgn], [cal_comp_bgn], [cal_comp_end], [cal_yr_x_bgn], cal_yr_x_end from land.cal_yr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_bgn], [cal_end], CASE when [cal_wk_day_end] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_day_end], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_day_end], [cal_days_nrml], [cal_days_leap], [cal_wks_nrml], [cal_wks_leap], [cal_prds_nrml], [cal_prds_leap], [cal_qtrs_nrml], [cal_qtrs_leap], [cal_seas_nrml], [cal_seas_leap], CASE when cal_desc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_desc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_desc from land_perm.cal",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_prd",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_prd_bgn], [cal_day_prd_ix], [cal_days_prd], [cal_day_prd], CASE when [cal_day_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_sid], CASE when [cal_day_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_1], CASE when cal_day_prd_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_prd_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_prd_desc_2 from land_perm.cal_day_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_qtr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_qtr_bgn], [cal_day_qtr_ix], [cal_days_qtr], [cal_day_qtr], CASE when [cal_day_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_sid], CASE when [cal_day_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_1], CASE when cal_day_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_qtr_desc_2 from land_perm.cal_day_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_wk",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_wk_bgn], [cal_day_wk_ix], [cal_day_wk_greg_ix], [cal_days_wk], [cal_day_wk], CASE when [cal_day_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_sid], CASE when [cal_day_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_1], CASE when cal_day_wk_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_wk_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_wk_desc_2 from land_perm.cal_day_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_yr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_yr_bgn], [cal_day_yr_ix], [cal_days_yr], [cal_day_yr], [cal_day_sea], [cal_day_qtr], [cal_day_prd], [cal_day_wk], [cal_wk_yr], CASE when [cal_day_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_sid], CASE when [cal_day_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_1], CASE when cal_day_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_day_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_day_yr_desc_2 from land_perm.cal_day_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_load",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_dflt_day_bgn, cal_dflt_day_end from land_perm.cal_load",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_qtr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_qtr_bgn], [cal_prd_qtr_ix], [cal_prds_qtr], [cal_prd_qtr], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when cal_prd_qtr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_qtr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_qtr_desc_2 from land_perm.cal_prd_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_yr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_yr_bgn], [cal_prd_yr_ix], [cal_prd_yr_greg_ix], [cal_prds_yr], [cal_prd_yr], [cal_prd_sea], [cal_prd_qtr], [cal_qtr_yr], [cal_yr_adj], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when cal_prd_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_prd_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_prd_yr_desc_2 from land_perm.cal_prd_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_yr",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_qtr_yr_bgn], [cal_qtr_yr_ix], [cal_qtrs_yr], [cal_qtr_yr], [cal_qtr_sea], [cal_sea_yr], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when cal_qtr_yr_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_qtr_yr_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_qtr_yr_desc_2 from land_perm.cal_qtr_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_role",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_role_id, [cal_role_ix], CASE when [cal_role_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_role_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_role_desc_1], CASE when cal_role_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_role_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_role_desc_2 from land_perm.cal_role",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_1x1",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_1x1_id, CASE when [cal_x_1x1_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_1x1_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_1x1_desc_1], CASE when cal_x_1x1_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_1x1_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_1x1_desc_2 from land_perm.cal_x_1x1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_mxm",
            "schema_name": "land_perm",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_mxm_id, CASE when [cal_x_mxm_attrib] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_attrib], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_attrib], CASE when [cal_x_mxm_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_desc_1], CASE when cal_x_mxm_desc_2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cal_x_mxm_desc_2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cal_x_mxm_desc_2 from land_perm.cal_x_mxm",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_bgn], [cal_end], CASE when [cal_wk_day_end] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_day_end], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_day_end], [cal_days_nrml], [cal_days_leap], [cal_wks_nrml], [cal_wks_leap], [cal_prds_nrml], [cal_prds_leap], [cal_qtrs_nrml], [cal_qtrs_leap], [cal_seas_nrml], [cal_seas_leap], CASE when [cal_desc] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_desc], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_desc], [etl_sid], etl_chg from stage.cal",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_bgn], [cal_day_end], [cal_day_typ_id], [cal_day_typ_grp_id], [cal_day_wk_bgn], [cal_day_prd_bgn], [cal_day_qtr_bgn], [cal_day_sea_bgn], [cal_day_yr_bgn], [cal_wk_bgn], [cal_wk_end], [cal_wk_prd_bgn], [cal_wk_qtr_bgn], [cal_wk_sea_bgn], [cal_wk_yr_bgn], [cal_prd_bgn], [cal_prd_end], [cal_prd_qtr_bgn], [cal_prd_sea_bgn], [cal_prd_yr_bgn], [cal_qtr_bgn], [cal_qtr_end], [cal_qtr_sea_bgn], [cal_qtr_yr_bgn], [cal_sea_bgn], [cal_sea_end], [cal_sea_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_leap], [cal_days_wk], [cal_day_wk], [cal_days_prd], [cal_day_prd], [cal_days_qtr], [cal_day_qtr], [cal_days_sea], [cal_day_sea], [cal_days_yr], [cal_day_yr], [cal_wks_prd], [cal_wk_prd], [cal_wks_qtr], [cal_wk_qtr], [cal_wks_sea], [cal_wk_sea], [cal_wks_yr], [cal_wk_yr], [cal_prds_qtr], [cal_prd_qtr], [cal_prds_sea], [cal_prd_sea], [cal_prds_yr], [cal_prd_yr], [cal_qtrs_sea], [cal_qtr_sea], [cal_qtrs_yr], [cal_qtr_yr], [cal_seas_yr], [cal_sea_yr], CASE when [cal_day_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sid], CASE when [cal_day_typ_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_sid], CASE when [cal_day_typ_grp_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_grp_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_grp_sid], CASE when [cal_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sid], CASE when [cal_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sid], CASE when [cal_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sid], CASE when [cal_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_day_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_sid], CASE when [cal_day_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_sid], CASE when [cal_day_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_sid], CASE when [cal_day_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sea_sid], CASE when [cal_day_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_sid], CASE when [cal_wk_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_sid], CASE when [cal_wk_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_sid], CASE when [cal_wk_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_sid], CASE when [cal_wk_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_sid], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_sid], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_qtr_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_sid], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_sea_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_sid], CASE when [cal_day_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_desc_1], CASE when [cal_day_typ_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_desc_1], CASE when [cal_day_typ_grp_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_grp_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_grp_desc_1], CASE when [cal_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_1], CASE when [cal_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_1], CASE when [cal_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_1], CASE when [cal_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_day_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_1], CASE when [cal_day_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_1], CASE when [cal_day_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_1], CASE when [cal_day_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sea_desc_1], CASE when [cal_day_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_1], CASE when [cal_wk_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_1], CASE when [cal_wk_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_1], CASE when [cal_wk_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_1], CASE when [cal_wk_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_1], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when [cal_prd_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_1], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when [cal_qtr_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_1], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_sea_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_1], CASE when [cal_day_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_desc_2], CASE when [cal_day_typ_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_desc_2], CASE when [cal_day_typ_grp_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_typ_grp_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_typ_grp_desc_2], CASE when [cal_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_2], CASE when [cal_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_2], CASE when [cal_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_2], CASE when [cal_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_day_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_2], CASE when [cal_day_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_2], CASE when [cal_day_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_2], CASE when [cal_day_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_sea_desc_2], CASE when [cal_day_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_2], CASE when [cal_wk_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_2], CASE when [cal_wk_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_2], CASE when [cal_wk_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_2], CASE when [cal_wk_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_2], CASE when [cal_prd_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_2], CASE when [cal_prd_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_2], CASE when [cal_prd_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_2], CASE when [cal_qtr_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_2], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], CASE when [cal_sea_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_2], [etl_sid], etl_chg from stage.cal_day",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_prd",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_prd_bgn], [cal_day_prd_ix], [cal_days_prd], [cal_day_prd], CASE when [cal_day_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_sid], CASE when [cal_day_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_1], CASE when [cal_day_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_prd_desc_2], [etl_sid], etl_chg from stage.cal_day_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_qtr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_qtr_bgn], [cal_day_qtr_ix], [cal_days_qtr], [cal_day_qtr], CASE when [cal_day_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_sid], CASE when [cal_day_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_1], CASE when [cal_day_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_qtr_desc_2], [etl_sid], etl_chg from stage.cal_day_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_wk",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_wk_bgn], [cal_day_wk_ix], [cal_days_wk], [cal_day_wk], CASE when [cal_day_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_sid], CASE when [cal_day_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_1], CASE when [cal_day_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_wk_desc_2], [etl_sid], etl_chg from stage.cal_day_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_day_bgn], [cal_comp_day_bgn], [cal_comp_bgn], [cal_comp_end], [cal_day_x_bgn], [cal_day_x_end], [etl_sid], etl_chg from stage.cal_day_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_day_yr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_day_yr_bgn], [cal_day_yr_ix], [cal_days_yr], [cal_day_yr], CASE when [cal_day_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_sid], CASE when [cal_day_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_1], CASE when [cal_day_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_day_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_day_yr_desc_2], [etl_sid], etl_chg from stage.cal_day_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_load",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_load_day_bgn, [cal_dflt_day_bgn], [cal_dflt_day_end], [etl_sid], etl_chg from stage.cal_load",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_mxm_wk_prd",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_wk_bgn], [cal_prd_bgn], [etl_sid], etl_chg from stage.cal_mxm_wk_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_bgn], [cal_prd_end], [cal_prd_qtr_bgn], [cal_prd_sea_bgn], [cal_prd_yr_bgn], [cal_qtr_bgn], [cal_qtr_end], [cal_qtr_sea_bgn], [cal_qtr_yr_bgn], [cal_sea_bgn], [cal_sea_end], [cal_sea_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_leap], [cal_prds_qtr], [cal_prd_qtr], [cal_prds_sea], [cal_prd_sea], [cal_prds_yr], [cal_prd_yr], [cal_qtrs_sea], [cal_qtr_sea], [cal_qtrs_yr], [cal_qtr_yr], [cal_seas_yr], [cal_sea_yr], CASE when [cal_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sid], CASE when [cal_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sid], CASE when [cal_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_sid], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_qtr_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_sid], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_sea_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_sid], CASE when [cal_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_1], CASE when [cal_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_1], CASE when [cal_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when [cal_prd_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_1], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when [cal_qtr_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_1], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_sea_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_1], CASE when [cal_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_desc_2], CASE when [cal_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_2], CASE when [cal_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_prd_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_2], CASE when [cal_prd_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_sea_desc_2], CASE when [cal_prd_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_2], CASE when [cal_qtr_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_2], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], CASE when [cal_sea_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_2], [etl_sid], etl_chg from stage.cal_prd",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_qtr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_qtr_bgn], [cal_prd_qtr_ix], [cal_prds_qtr], [cal_prd_qtr], CASE when [cal_prd_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_sid], CASE when [cal_prd_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_1], CASE when [cal_prd_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_qtr_desc_2], [etl_sid], etl_chg from stage.cal_prd_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_prd_bgn], [cal_comp_prd_bgn], [cal_comp_bgn], [cal_comp_end], [cal_prd_x_bgn], [cal_prd_x_end], [etl_sid], etl_chg from stage.cal_prd_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_prd_yr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_prd_yr_bgn], [cal_prd_yr_ix], [cal_prds_yr], [cal_prd_yr], CASE when [cal_prd_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_sid], CASE when [cal_prd_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_1], CASE when [cal_prd_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_prd_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_prd_yr_desc_2], [etl_sid], etl_chg from stage.cal_prd_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_qtr_bgn], [cal_qtr_end], [cal_qtr_sea_bgn], [cal_qtr_yr_bgn], [cal_sea_bgn], [cal_sea_end], [cal_sea_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_leap], [cal_qtrs_sea], [cal_qtr_sea], [cal_qtrs_yr], [cal_qtr_yr], [cal_seas_yr], [cal_sea_yr], CASE when [cal_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sid], CASE when [cal_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_qtr_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_sid], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_sea_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_sid], CASE when [cal_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_1], CASE when [cal_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_qtr_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_1], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_sea_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_1], CASE when [cal_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_desc_2], CASE when [cal_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_qtr_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_sea_desc_2], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], CASE when [cal_sea_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_sea_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_sea_yr_desc_2], [etl_sid], etl_chg from stage.cal_qtr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_qtr_bgn], [cal_comp_qtr_bgn], [cal_comp_bgn], [cal_comp_end], [cal_qtr_x_bgn], [cal_qtr_x_end], [etl_sid], etl_chg from stage.cal_qtr_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_qtr_yr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_qtr_yr_bgn], [cal_qtr_yr_ix], [cal_qtrs_yr], [cal_qtr_yr], CASE when [cal_qtr_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_sid], CASE when [cal_qtr_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_1], CASE when [cal_qtr_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_qtr_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_qtr_yr_desc_2], [etl_sid], etl_chg from stage.cal_qtr_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_role",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_role_id, [cal_role_ix], CASE when [cal_role_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_role_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_role_desc_1], CASE when [cal_role_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_role_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_role_desc_2], [etl_sid], etl_chg from stage.cal_role",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_wk_bgn], [cal_wk_end], [cal_wk_prd_bgn], [cal_wk_qtr_bgn], [cal_wk_sea_bgn], [cal_wk_yr_bgn], [cal_yr_bgn], [cal_yr_end], [cal_yr_leap], [cal_wks_prd], [cal_wk_prd], [cal_wks_qtr], [cal_wk_qtr], [cal_wks_sea], [cal_wk_sea], [cal_wks_yr], [cal_wk_yr], CASE when [cal_wk_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sid], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_wk_prd_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_sid], CASE when [cal_wk_qtr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_sid], CASE when [cal_wk_sea_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_sid], CASE when [cal_wk_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_sid], CASE when [cal_wk_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_1], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_wk_prd_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_1], CASE when [cal_wk_qtr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_1], CASE when [cal_wk_sea_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_1], CASE when [cal_wk_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_1], CASE when [cal_wk_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_desc_2], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], CASE when [cal_wk_prd_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_prd_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_prd_desc_2], CASE when [cal_wk_qtr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_qtr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_qtr_desc_2], CASE when [cal_wk_sea_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_sea_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_sea_desc_2], CASE when [cal_wk_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_wk_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_wk_yr_desc_2], [etl_sid], etl_chg from stage.cal_wk",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_wk_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_wk_bgn], [cal_comp_wk_bgn], [cal_comp_bgn], [cal_comp_end], [cal_wk_x_bgn], [cal_wk_x_end], [etl_sid], etl_chg from stage.cal_wk_x",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_1x1",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_1x1_id, CASE when [cal_x_1x1_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_1x1_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_1x1_desc_1], CASE when [cal_x_1x1_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_1x1_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_1x1_desc_2], [etl_sid], etl_chg from stage.cal_x_1x1",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_x_mxm",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_x_mxm_id, CASE when [cal_x_mxm_attrib] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_attrib], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_attrib], CASE when [cal_x_mxm_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_desc_1], CASE when [cal_x_mxm_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_x_mxm_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_x_mxm_desc_2], [etl_sid], etl_chg from stage.cal_x_mxm",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_yr_bgn], [cal_yr_end], [cal_yr_leap], CASE when [cal_yr_sid] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_sid], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_sid], CASE when [cal_yr_desc_1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_1], CASE when [cal_yr_desc_2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([cal_yr_desc_2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [cal_yr_desc_2], [etl_sid], etl_chg from stage.cal_yr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "cal_yr_x",
            "schema_name": "stage",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select cal_id, [cal_x_mxm_id], [cal_x_1x1_id], [cal_yr_bgn], [cal_comp_yr_bgn], [cal_comp_bgn], [cal_comp_end], [cal_yr_x_bgn], [cal_yr_x_end], [etl_sid], etl_chg from stage.cal_yr_x",
            "gcs_upload_flag": "FALSE"
        }
    ]
}