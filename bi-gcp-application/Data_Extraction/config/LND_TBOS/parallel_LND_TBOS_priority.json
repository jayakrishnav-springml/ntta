{
    "connection_string": "Driver=ODBC Driver 18 for SQL Server;Server=10.40.9.26,17001;Database=LND_TBOS;Trusted_Connection=yes;Encrypt=no;",
    "connection_details": {
        "driver": "ODBC Driver 18 for SQL Server",
        "server": "10.40.9.26,17001",
        "database": "LND_TBOS",
        "trusted_connection": "yes",
        "encrypt": "no",
        "username": "",
        "password_secret_id": "",
        "secret_version": ""
    },
    "gcs_bucket_name": "prj-ntta-ops-bi-devt-stage-data",
    "database_type": "SQLServer",
    "source_database": "LND_TBOS",
    "project_id": "prj-ntta-ops-bi-devt-svc-01",
    "chunk_file_size_gb": 1.0,
    "compression_type": "gzip",
    "parquet_file_page_size_bytes": 1048576,
    "output_folder": "D:\\gcp-data-transfer-csv\\Parallel_Data_Extraction\\priority_tables",
    "log_folder_path": "E:\\bcp_logs\\priority_tables",
    "max_process_count": 15,
    "file_type": ".csv",
    "bq_dataset_map": {
        "LND_TBOS": {
            "TollPlus": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TollPlus_"
            },
            "dbo": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "dbo_"
            },
            "Finance": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Finance_"
            },
            "History": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "History_"
            },
            "IOP": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "IOP_"
            },
            "Rbac": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Rbac_"
            },
            "TER": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TER_"
            },
            "DMV": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "DMV_"
            },
            "Parking": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Parking_"
            },
            "TranProcessing": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TranProcessing_"
            },
            "CaseManager": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "CaseManager_"
            },
            "Court": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Court_"
            },
            "Inventory": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Inventory_"
            },
            "Notifications": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Notifications_"
            },
            "TSA": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "TSA_"
            },
            "Utility": {
                "bq_dataset": "LND_TBOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Reporting": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "Reporting_"
            },
            "docmgr": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "docmgr_"
            },
            "EIP": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "EIP_"
            },
            "MIR": {
                "bq_dataset": "LND_TBOS",
                "table_name_prefix": "MIR_"
            }
        },
        "EDW_TRIPS": {
            "dbo": {
                "bq_dataset": "EDW_TRIPS_APS",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_TRIPS_STAGE",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            }
        }
    },
    "log": {
        "log_level": "INFO",
        "log_name": "data_transfer_log",
        "labels": {}
    },
    "tables": [
        {
            "table_name": "IOPOutboundAndViolationLinking",
            "schema_name": "dbo",
            "id_field": "OutboundTPTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Lane_Viol_ID, Transaction_ID, Hub_IOP_Txn_ID, Violation_ID, Transaction_Date, ViolationTPTripID, OutboundTPTripID, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from dbo.IOPOutboundAndViolationLinking",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Adjustment_LineItems",
            "schema_name": "Finance",
            "id_field": "AdjLineItemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AdjLineItemID, AdjustmentID, Amount, CASE when AppTxnTypeCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AppTxnTypeCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AppTxnTypeCode, LinkID, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, NewTollAmount, CASE when VehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClass, LaneID, IsVisible, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.Adjustment_LineItems",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Adjustments",
            "schema_name": "Finance",
            "id_field": "AdjustmentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AdjustmentID, CustomerID, AccStatusID, Amount, CASE when AdjustmentCategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AdjustmentCategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AdjustmentCategory, TxnTypeID, AdjustmentDate, CASE when DrcrFlag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DrcrFlag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DrcrFlag, CASE when AdjustmentReason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AdjustmentReason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AdjustmentReason, IsManualEntry, ApprovedStatusID, ApprovedStatusDate, PaymentID, ICNID, LocationID, SourceID, CASE when SourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SourceName, TollAdjustmentID, CASE when Comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Comments, NewAdjustmentID, IsCreditCardType, SourceTransTypeID, SourceRtdID, RefundRequestID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.Adjustments",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Attributes",
            "schema_name": "History",
            "id_field": "HistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select HistID, CustomerID, CASE when DriverLicenceNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriverLicenceNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriverLicenceNumber, CASE when DriverLicenceApprovedState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriverLicenceApprovedState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriverLicenceApprovedState, DriverLicenceExpirationDate, AutoReplenishmentID, PreferredShipment, TransponderPurchaseMethod, CalculatedRebillAmount, ThresholdAmount, IsManualHold, StatementDeliveryOptionID, SourceOfChannelID, Rebill_Hold_StartEffectiveDate, Rebill_Hold_EndEffectiveDate, Is_Notifications_Added, CapAmount, KYCStatusID, KYCStatusDate, StatementCycleID, CASE when RebillStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RebillStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RebillStatus, RebillDate, CASE when PreferredLanguage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PreferredLanguage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PreferredLanguage, IsHearingImpairment, IsFrequentCaller, IsSupervisor, TagsinStatusFile, InvoiceInterValid, InvoiceAmount, CASE when InvoiceDay is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceDay, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceDay, LowBalanceAmount, MbsGenerationDay, CASE when SSN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SSN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SSN, Is_Commercial, IsEventSponsor, IsVIP, IsMilitary, AutoRecalcReplAmt, NonRevenueTypeID, IsTollperks, IsMarketingAndNewsLetter, IsDirectCarrierBilling, CASE when CompanyCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CompanyCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CompanyCode, IsGroundTransportation, MbsImageID, ViolatorTypeID, ICNID, ChannelID, CASE when Action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Action, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from History.TP_Customer_Attributes",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customers",
            "schema_name": "History",
            "id_field": "HistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select HistID, CustomerID, UserTypeID, CustomerStatusID, AccountStatusID, AccountStatusDate, ParentCustomerID, SourceOfEntry, RevenueCategoryID, IsPrimary, SourcePKID, CASE when Action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Action, AgencyID, RegCustRefID, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from History.TP_Customers",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BOS_IOP_OutboundTransactions",
            "schema_name": "IOP",
            "id_field": "BOSIOPTransactionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BOSIOPTransactionID, IOPID, TransactionTypeID, CASE when TagType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagType, TransactionDate, CASE when AgencyID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgencyID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgencyID, EntryPlaza, EntryLane, CASE when TagStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagStatus, CASE when LicenceNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicenceNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicenceNumber, CASE when LicenseState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicenseState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicenseState, ExitPlaza, ExitLane, CASE when TransactionStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionStatus, ReconcilitionFileID, TollAmount, AcceptedAmount, IsCorrected, DiscountAmount, TpTripID, CASE when TagSerialNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagSerialNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagSerialNumber, CASE when VehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClass, CASE when TripMethod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripMethod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripMethod, PostedDate, ReSubmitCount, TranFileID, CASE when FacilityCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FacilityCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FacilityCode, CASE when PlazaCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlazaCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlazaCode, CASE when LaneCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneCode, EntryTripDateTime, ExitTripDateTime, CASE when PlateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateType, CASE when FacilityDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FacilityDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FacilityDesc, CASE when EntryPlazaDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EntryPlazaDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EntryPlazaDesc, CASE when ExitPlazaDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ExitPlazaDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ExitPlazaDesc, EntryTripDateTimeWithTimezone, ExitTripDateTimeWithTimezone, CASE when LicensePlateCountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateCountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateCountry, ViolationSerialNumber, VesTimestamp, TagAgencyID, CASE when ReSubmitReasonCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReSubmitReasonCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReSubmitReasonCode, CASE when CorrectionReasonCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CorrectionReasonCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CorrectionReasonCode, TransactionFlatFee, TransactionPercentFee, SourceOfEntry, CorrectionCount, SourcePKID, CASE when RecordCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RecordCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RecordCode, CASE when AccountAgencyID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountAgencyID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountAgencyID, AdjustmentDateTime, CASE when PostingDisposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PostingDisposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PostingDisposition, CASE when PostingDispositionReason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PostingDispositionReason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PostingDispositionReason, NULL as AdjustmentResponsePayLoad, HomeAgencyRefID, CASE when Spare1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Spare1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Spare1, CASE when Spare2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Spare2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Spare2, CASE when Spare3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Spare3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Spare3, CASE when Spare4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Spare4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Spare4, CASE when Spare5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Spare5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Spare5, CASE when OtherCorrectionDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OtherCorrectionDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OtherCorrectionDescription, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from IOP.BOS_IOP_OutboundTransactions",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LocationRoles",
            "schema_name": "Rbac",
            "id_field": "LocationRoleID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LocationRoleID, LocationID, RoleID, ChannelID, ICNID, IsActive, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Rbac.LocationRoles",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Agencies",
            "schema_name": "TollPlus",
            "id_field": "AgencyID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AgencyID, AgencyTypeID, CASE when AgencyName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgencyName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgencyName, CASE when AgencyCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgencyCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgencyCode, CASE when AgencyDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgencyDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgencyDesc, CASE when IFSCCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IFSCCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IFSCCode, CASE when AccountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountType, CASE when BankName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BankName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BankName, CASE when AccountName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountName, CASE when AccountNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountNumber, RangeID, StartFacilityCode, EndFacilityCode, TagCount, CustomerID, CASE when StartHexID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(StartHexID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as StartHexID, CASE when EndHexID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EndHexID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EndHexID, CASE when RevCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RevCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RevCode, CASE when EncryptFlag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EncryptFlag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EncryptFlag, CASE when PGPKeyID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PGPKeyID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PGPKeyID, CASE when FTPURL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FTPURL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FTPURL, CASE when FTPLogin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FTPLogin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FTPLogin, CASE when FTPPwd is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FTPPwd, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FTPPwd, IsActive, StartEffectiveDate, EndEffectiveDate, IsSwitchable, CASE when ProtocolType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ProtocolType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ProtocolType, IsHomeAgency, CASE when ParentAgencyCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ParentAgencyCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ParentAgencyCode, CASE when IOPAgencyID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IOPAgencyID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IOPAgencyID, CASE when HubID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HubID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HubID, CASE when TagAgencyID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagAgencyID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagAgencyID, ChannelID, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Agencies",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Channels",
            "schema_name": "TollPlus",
            "id_field": "ChannelID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ChannelID, CASE when ChannelName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ChannelName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ChannelName, IsDisplay, CASE when ChannelDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ChannelDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ChannelDesc, IsActive, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Channels",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CustomerFlagReferenceLookup",
            "schema_name": "TollPlus",
            "id_field": "CustomerFlagReferenceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustomerFlagReferenceID, CASE when FlagName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FlagName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FlagName, CASE when FlagDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FlagDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FlagDescription, IsActive, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.CustomerFlagReferenceLookup",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ICN",
            "schema_name": "TollPlus",
            "id_field": "ICNID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ICNID, UserID, CashAmount, CheckAmount, CreditAmount, MOAmount, FloatAmount, CASE when ICNStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ICNStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ICNStatus, IsDayShiftClosed, CashierCheckAmount, ShiftStartDate, ShiftEndDate, LocationID, LocationRoleID, RetryCnt, StickerTagsCount, IntegratedTagsCount, LicensePlateTagsCount, HardCaseTagsCount, CASE when ShiftApprovalStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ShiftApprovalStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ShiftApprovalStatus, ShiftSubmitted, CASE when ReasonCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReasonCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReasonCode, CsrCashAmount, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, UpdatedDate, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.ICN",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Lanes",
            "schema_name": "TollPlus",
            "id_field": "LaneID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LaneID, CASE when LaneCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneCode, PlazaID, CASE when LaneName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneName, CASE when LaneType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneType, CASE when Description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Description, CASE when LaneStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneStatus, CASE when Direction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Direction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Direction, LaneCategoryID, CASE when ExitLaneCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ExitLaneCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ExitLaneCode, ChannelID, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Lanes",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Locations",
            "schema_name": "TollPlus",
            "id_field": "LocationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LocationID, CASE when LocationCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LocationCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LocationCode, CASE when LocationName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LocationName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LocationName, CASE when Description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Description, IsOwned, IsNonRevenue, CASE when CountyName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CountyName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CountyName, CASE when CourtName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CourtName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CourtName, AgencyID, IsHVEnabled, IsTSA, AgencyTSASubscriberMapID, TSAFacilityID, ChannelID, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Locations",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Plans",
            "schema_name": "TollPlus",
            "id_field": "PlanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PlanID, CASE when PlanName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlanName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlanName, CASE when PlanCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlanCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlanCode, CASE when PlanDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlanDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlanDescription, ParentID, IsFeeRequired, IsTagRequired, StatementCycleID, StartEffectiveDate, EndEffectiveDate, InvoiceInterValid, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Plans",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Plazas",
            "schema_name": "TollPlus",
            "id_field": "PlazaID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PlazaID, CASE when PlazaCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlazaCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlazaCode, LocationID, CASE when PlazaName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlazaName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlazaName, CASE when Description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Description, CASE when IpAddress is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IpAddress, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IpAddress, CASE when PortNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PortNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PortNumber, AgencyID, CASE when PriceMode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PriceMode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PriceMode, TransactionFeeMode, ChartOfAccountID, CASE when FTPURL is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FTPURL, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FTPURL, CASE when PGPKeyID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PGPKeyID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PGPKeyID, CASE when FTPLogin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FTPLogin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FTPLogin, CASE when FTPPwd is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FTPPwd, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FTPPwd, CASE when EncryptFlag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EncryptFlag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EncryptFlag, CASE when AccountNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountNumber, CASE when AccountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountType, CASE when AccountName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountName, CASE when BankName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BankName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BankName, CASE when IFSCCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IFSCCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IFSCCode, CASE when TransactionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionType, IsOwned, IsNonRevenue, PlazaTypeID, CASE when ExitPlazaCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ExitPlazaCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ExitPlazaCode, ChannelID, ICNID, ParkingTaxRate, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Plazas",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Ref_Invoice_Workflow_Stages",
            "schema_name": "TollPlus",
            "id_field": "StageID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select StageID, CASE when StageName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(StageName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as StageName, StageOrder, StepsCount, IsActive, CASE when StageCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(StageCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as StageCode, AgingPeriod, GracePeriod, WaiveAllFees, ApplyAVIRate, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Ref_Invoice_Workflow_Stages",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Ref_LookupTypeCodes_Hierarchy",
            "schema_name": "TollPlus",
            "id_field": "LookupTypeCodeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LookupTypeCodeID, CASE when LookupTypeCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LookupTypeCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LookupTypeCode, CASE when LookupTypeCodeDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LookupTypeCodeDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LookupTypeCodeDesc, Parent_LookupTypeCodeID, Is_Available_ForUse, CASE when Remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Remarks, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Ref_LookupTypeCodes_Hierarchy",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TollScheduleDtl",
            "schema_name": "TollPlus",
            "id_field": "TollScheduleDtlID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TollScheduleDtlID, TollScheduleHdrID, TollRateID, ChannelID, ICNID, FromTime, ToTime, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TollScheduleDtl",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TollScheduleHdr",
            "schema_name": "TollPlus",
            "id_field": "TollScheduleHdrID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TollScheduleHdrID, EntryLaneID, EntryPlazaID, ExitPlazaID, ChannelID, ICNID, StartEffectiveDate, EndEffectiveDate, CASE when TollScheduleHdrDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TollScheduleHdrDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TollScheduleHdrDesc, CASE when TransactionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionType, CASE when TransactionMenthod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionMenthod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionMenthod, CASE when ScheduleType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ScheduleType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ScheduleType, IsActive, Interval, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TollScheduleHdr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_AccStatus_Tracker",
            "schema_name": "TollPlus",
            "id_field": "AccStatusHistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AccStatusHistID, CustomerID, AccountStatusID, AccountStatusDate, Parent_AccStatusHistID, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_AccStatus_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Addresses",
            "schema_name": "TollPlus",
            "id_field": "CustAddressID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustAddressID, CustomerID, CASE when AddressType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AddressType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AddressType, CASE when AddressLine1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AddressLine1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AddressLine1, CASE when AddressLine2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AddressLine2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AddressLine2, CASE when AddressLine3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AddressLine3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AddressLine3, CASE when City is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(City, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as City, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, CASE when Country is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Country, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Country, CASE when Zip1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Zip1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Zip1, CASE when Zip2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Zip2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Zip2, IsActive, IsCommunication, IsValid, CASE when ReasonCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReasonCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReasonCode, AddressUpdatedDate, IsAddressUpdateNotified, IsValidUpdatedDate, IsSkiptraced, AddressSourceID, ROVSourceID, CASE when ROVSourceType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ROVSourceType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ROVSourceType, CASE when SubSource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSource, CASE when Action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Action, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Addresses",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Attributes",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustomerID, CASE when DriverLicenceNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriverLicenceNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriverLicenceNumber, CASE when DriverLicenceApprovedState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DriverLicenceApprovedState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DriverLicenceApprovedState, DriverLicenceExpirationDate, AutoReplenishmentID, PreferredShipment, TransponderPurchaseMethod, CalculatedRebillAmount, ThresholdAmount, IsManualHold, StatementDeliveryOptionID, SourceOfChannelID, Rebill_Hold_StartEffectiveDate, Rebill_Hold_EndEffectiveDate, Is_Notifications_Added, CapAmount, KYCStatusID, KYCStatusDate, StatementCycleID, CASE when RebillStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RebillStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RebillStatus, RebillDate, CASE when PreferredLanguage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PreferredLanguage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PreferredLanguage, IsHearingImpairment, IsFrequentCaller, IsSupervisor, TagsinStatusFile, InvoiceInterValid, InvoiceAmount, CASE when InvoiceDay is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceDay, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceDay, LowBalanceAmount, MbsGenerationDay, CASE when SSN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SSN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SSN, Is_Commercial, IsEventSponsor, IsVIP, IsMilitary, AutoRecalcReplAmt, NonRevenueTypeID, IsTollperks, IsMarketingAndNewsLetter, IsDirectCarrierBilling, CASE when CompanyCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CompanyCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CompanyCode, IsGroundTransportation, MbsImageID, ViolatorTypeID, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Attributes",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Balance_Alert_Facts",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustomerID, LowBalanceFlag, LowBalanceDate, NegBalanceFlag, NegBalanceDate, LowBalanceNotice, NegativeBalanceNotice, SentEmailCount, RegionalIOPLowBalanceFlag, RegionalIOPLowBalanceDate, NationalIOPLowBalanceFlag, NationalIOPLowBalanceDate, CASE when AccountFinancialStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountFinancialStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountFinancialStatus, BalanceFlag, BalanceNotice, BalanceDate, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Balance_Alert_Facts",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Balances",
            "schema_name": "TollPlus",
            "id_field": "CustbalID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustbalID, CustomerID, BalanceDate, BalanceAmount, CASE when BalanceType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BalanceType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BalanceType, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Balances",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Business",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustomerID, CASE when OrganisationName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OrganisationName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OrganisationName, IsFleet, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, LND_UpdateType from TollPlus.TP_Customer_Business",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Contacts",
            "schema_name": "TollPlus",
            "id_field": "ContactID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ContactID, CustomerID, CASE when Title is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Title, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Title, CASE when Suffix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Suffix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Suffix, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when MiddleName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MiddleName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MiddleName, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when Gender is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Gender, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Gender, CASE when NameType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NameType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NameType, IsCommunication, DateOfBirth, CASE when FirstName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName2, CASE when LastName2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName2, ICNID, ChannelID, CASE when Race is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Race, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Race, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Contacts",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Flags",
            "schema_name": "TollPlus",
            "id_field": "CustomerFlagID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustomerFlagID, CustomerID, CustomerFlagReferenceID, FlagValue, StartDate, EndDate, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Flags",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Logins",
            "schema_name": "TollPlus",
            "id_field": "LoginID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LoginID, CustomerID, ICNID, ChannelID, CASE when UserName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UserName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UserName, CASE when Password is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Password, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Password, Last_LoginDate, Last_Pwd_ModifiedDate, Current_Pwd_ExpiryDate, Pwd_Attempts_Count, CASE when PinNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PinNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PinNumber, IsLocked, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, Sq_AttemptCount, Sq_LockOutTime, LockoutTime, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Logins",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Phones",
            "schema_name": "TollPlus",
            "id_field": "CustPhoneID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustPhoneID, CustomerID, CASE when PhoneType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneType, CASE when PhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PhoneNumber, CASE when Extention is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Extention, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Extention, IsActive, IsCommunication, IsVerified, IsBadPhone, IssoLicitPhone, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Phones",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Plans",
            "schema_name": "TollPlus",
            "id_field": "CustPlanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustPlanID, CustomerID, PlanID, StartEffectiveDate, EndEffectiveDate, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, LND_UpdateType from TollPlus.TP_Customer_Plans",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Trip_Charges_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripChargeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TripChargeID, CustTripID, Amount, CASE when AmountClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AmountClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AmountClass, PaymentStatusID, OutstandingAmount, CustomerID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Trip_Charges_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customers",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustomerID, UserTypeID, CustomerStatusID, AccountStatusID, AccountStatusDate, ParentCustomerID, SourceOfEntry, RevenueCategoryID, IsPrimary, SourcePKID, AgencyID, RegCustRefID, LastActivityTimestamp, ICNID, ChannelID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customers",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_CustomerTrips",
            "schema_name": "TollPlus",
            "id_field": "CustTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustTripID, TpTripID, CustomerID, Entry_TollTxnID, Exit_TollTxnID, EntryTripDateTime, ExitTripDateTime, CASE when TripIdentMethod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripIdentMethod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripIdentMethod, CASE when TripChargeType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripChargeType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripChargeType, EntryLaneID, EntryPlazaID, ExitLaneID, ExitPlazaID, CASE when VehicleNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleNumber, CASE when VehicleState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleState, CASE when VehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClass, VehicleID, CASE when TagRefID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagRefID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagRefID, TollAmount, FeeAmounts, DiscountSAmount, OutstandingAmount, TripStageID, TripStatusID, TripStatusDate, PostedDate, PaymentStatusID, CASE when TagType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagType, TransactionTypeID, Rewards_DiscountAmount, CASE when PlateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateType, Disposition, PBMTollAmount, AVITollAmount, CASE when LicensePlateCountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateCountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateCountry, LocationID, AgencyID, NetAmount, CASE when TagAgency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagAgency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagAgency, IsROVWaiting, SourceOfEntry, AccountAgencyID, TTXN_ID, IsExcessiveVToll, CASE when TransactionPostingType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionPostingType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionPostingType, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_CustomerTrips",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Image_Review_Results",
            "schema_name": "TollPlus",
            "id_field": "ImageReviewResultID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ImageReviewResultID, SourceTransactionID, IPSTransactionID, CASE when FacilityCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FacilityCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FacilityCode, CASE when PlazaCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlazaCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlazaCode, LaneCode, Timestamp, VesSerialNumber, Disposition, CASE when ReasonCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReasonCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReasonCode, IsManuallyReviewed, CASE when PlateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateType, CASE when PlateRegistration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateRegistration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateRegistration, CASE when PlateJurisdiction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateJurisdiction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateJurisdiction, CASE when PlateJurisdictionCountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateJurisdictionCountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateJurisdictionCountry, SourceLanVilationID, SourceVilationID, ImageCodeOff, ImageReviewCount, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, CreatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, UpdatedDate, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Image_Review_Results",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_TollRate_Dtls",
            "schema_name": "TollPlus",
            "id_field": "TollRateDtlID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TollRateDtlID, TollRateID, CASE when VehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClass, CASE when LaneType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneType, TollAmount, ChannelID, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_TollRate_Dtls",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_TollRate_Hdr",
            "schema_name": "TollPlus",
            "id_field": "TollRateHdrID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TollRateHdrID, CASE when TollRateName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TollRateName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TollRateName, IsActive, CASE when TransactionMenthod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionMenthod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionMenthod, CASE when VehicleClassType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClassType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClassType, ChannelID, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_TollRate_Hdr",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Trips",
            "schema_name": "TollPlus",
            "id_field": "TpTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TpTripID, Entry_TollTxnID, Exit_TollTxnID, EntryTripDateTime, EntryTripDateTimeUTC, ExitTripDateTime, ExitTripDateTimeUTC, CASE when TripIdentMethod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripIdentMethod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripIdentMethod, CASE when TripChargeType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripChargeType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripChargeType, EntryLaneID, EntryPlazaID, ExitLaneID, ExitPlazaID, CASE when LaneType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneType, CASE when VehicleNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleNumber, VehicleID, CASE when VehicleState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleState, CASE when VehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClass, CASE when TagRefID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagRefID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagRefID, TollAmount, ReceivedTollAmount, FeeAmounts, DiscountsAmount, OutstandingAmount, TripStageID, TripStatusID, TripStatusDate, PostedDate, IRTripID, PaymentStatusID, CASE when ReasonCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReasonCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReasonCode, SourceTripID, CASE when TagVehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagVehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagVehicleClass, CASE when TagType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagType, TransactionTypeID, CASE when PlateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateType, IPSTransactionID, PBMTollAmount, AVITollAmount, OriginalPBMTollAmount, OriginalAVITollAmount, CASE when LicensePlateCountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateCountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateCountry, LocationID, AgencyID, CASE when Disposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Disposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Disposition, ReceivedDate, CASE when TagAgency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagAgency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagAgency, TagAgencyID, SourceOfEntry, AccountAgencyID, IsImageReviewed, SourceTXNID, LinkID, CASE when TripWith is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripWith, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripWith, IsNonRevenue, CASE when TXNRate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TXNRate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TXNRate, CASE when TransactionPostingType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionPostingType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionPostingType, SourceID, CASE when SourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SourceName, Acct_ID, TTXN_ID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Trips",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Violated_Trip_Charges_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripChargeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TripChargeID, CitationID, ViolatorID, Amount, CASE when AmountClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AmountClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AmountClass, TripPaymentStatusID, OutstandingAmount, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Violated_Trip_Charges_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Violated_Trip_Receipts_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripReceiptID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TripReceiptID, CitationID, ViolatorID, LinkID, AmountReceived, TxnDate, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, TripChargeID, InvoiceID, OverpaymentID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Violated_Trip_Receipts_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_ViolatedTrips",
            "schema_name": "TollPlus",
            "id_field": "CitationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CitationID, TpTripID, ViolatorID, CASE when VehicleNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleNumber, CASE when VehicleState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleState, CASE when VehicleClass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClass, VehicleID, TollAmount, FeeAmounts, OutstandingAmount, CASE when CitationStage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CitationStage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CitationStage, CASE when CitationType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CitationType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CitationType, EntryLaneID, ExitLaneID, EntryPlazaID, ExitPlazaID, TripStageID, TripStatusID, TripStatusDate, StageModifiedDate, EntryTripDateTime, ExitTripDateTime, PaymentStatusID, TransactionTypeID, CASE when PlateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateType, AgencyID, PBMTollAmount, AVITollAmount, CASE when LicensePlateCountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateCountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateCountry, LocationID, CustRefID, IsImmediateFlag, NetAmount, SourceOfEntry, AccountAgencyID, Acct_ID, Violation_ID, CASE when Violation_Status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Violation_Status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Violation_Status, IsExcessiveVToll, CASE when TransactionPostingType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionPostingType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionPostingType, IsWriteOff, WriteOffDate, WriteOffAmount, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, PostedDate, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_ViolatedTrips",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TripStages",
            "schema_name": "TollPlus",
            "id_field": "TripStageID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TripStageID, CASE when TripStageCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripStageCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripStageCode, CASE when TripStageDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripStageDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripStageDescription, ParentStageID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TripStages",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TripStatuses",
            "schema_name": "TollPlus",
            "id_field": "TripStatusID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TripStatusID, CASE when TripStatusCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripStatusCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripStatusCode, CASE when TripStatusDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TripStatusDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TripStatusDescription, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TripStatuses",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "NTTARawTransactions",
            "schema_name": "TranProcessing",
            "id_field": "TxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TxnID, CASE when SourceSystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SourceSystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SourceSystem, CASE when MetadataRecordType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MetadataRecordType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MetadataRecordType, MetadataPublishTime, CASE when MetadataRecordNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MetadataRecordNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MetadataRecordNumber, CASE when RecordType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RecordType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RecordType, RecordNumber, Timestamp, CASE when FacilityCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FacilityCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FacilityCode, CASE when PlazaCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlazaCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlazaCode, Lane, LogonTimestamp, LaneMode, RevenueVehicleClass, RevenueAxles, IndicatedVehicleClass, IndicatedAxles, ForwardAxles, ReverseAxles, VehicleSpeed, FareAmount, StraddleIndication, EntryloopActivation, MIDLaneloopActivation, ExitloopActivation, ImageRequested, PaymentType, TagIDNumber, TagAgency, TagStatus, TagClass, IagTagVehicleType, IagTagVehicleAxles, IagTagVehicleweight, IagTagdualreartires, IagTagRevenueType, IagTagCommissionFlag, TagReads, ViolationSerialNumber, VesTimestamp, StandByModeStatus, AcmStatus, AviReaderStatus, DualTireSensor, FailoverModuleStatus, RedundantLcStatus, AvcStatus, TReadLeStatus, ScannerSeparatorStatus, VesStatus, AttendantTerminalStatus, FacilityServerAviStatusDownload, FacilityServerTransactionUpload, Ups, DigitalIOInterface, ReceiptPrinter, TvlBatchID, FareTableID, TagLowBattery, EstimatedAxleCount, AuxiliaryLoopActivation, MaintenanceOverride, CASE when RawStringData is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RawStringData, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RawStringData, CASE when IsUnableToParse is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IsUnableToParse, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IsUnableToParse, CASE when IsMalformed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IsMalformed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IsMalformed, HostBOSID, CASE when Disposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Disposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Disposition, CASE when InvoiceStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceStatus, EquipmentCode, DeviceInstance, StatusCode, ConditionState, CASE when MessageText is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MessageText, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MessageText, LogOffTimestamp, TagTimestamp, CASE when TagString is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagString, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagString, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TranProcessing.NTTARawTransactions",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TSARawTransactions",
            "schema_name": "TranProcessing",
            "id_field": "TxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TxnID, CASE when TransactionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionType, CASE when RecordType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RecordType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RecordType, SubscriberUniqueTransactionID, CASE when ReSubmittalReason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReSubmittalReason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReSubmittalReason, ReSubmittalCount, CASE when AuthorityID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AuthorityID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AuthorityID, CASE when LocationType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LocationType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LocationType, CASE when Facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Facility, CASE when SubscriberID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubscriberID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubscriberID, CASE when EntryInformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EntryInformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EntryInformation, CASE when Plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Plaza, Lane, CASE when LaneMode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneMode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneMode, CASE when TransactionDate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionDate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionDate, CASE when TransactionTime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionTime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionTime, CASE when TransponderID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderID, CASE when TransponderStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderStatus, CASE when TransponderValidationListFileName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderValidationListFileName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderValidationListFileName, CASE when LicensePlateValidationListFileName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateValidationListFileName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateValidationListFileName, CASE when VehicleClassification is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClassification, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClassification, AxlesExpected, AxlesCounted, Speed, CASE when HovDesignation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HovDesignation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HovDesignation, CASE when ExitBarrierOrGantryInformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ExitBarrierOrGantryInformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ExitBarrierOrGantryInformation, CollectorID, VaultID, CASE when VehicleClassificationForTollDetermination is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClassificationForTollDetermination, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClassificationForTollDetermination, TransponderTollAmount, CASE when TransponderDiscountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderDiscountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderDiscountType, DiscountedTransponderTollAmount, VideoTollAmountWithoutVideoTollPremium, VideoTollAmountWithVideoTollPremium, CASE when VideoDiscountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VideoDiscountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VideoDiscountType, DiscountedVideoTollAmountWithoutVideoTollPremium, DiscountedVideoTollAmountWithVideoTollPremium, CashTollAmount, CASE when CashDiscountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CashDiscountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CashDiscountType, DiscountedCashTollAmount, AmountPaid, CASE when UnusualOccurrenceCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UnusualOccurrenceCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UnusualOccurrenceCode, NumberOfImages, HostBOSID, FileID, SourcePKID, IsMalformed, IsUnableToParse, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TranProcessing.TSARawTransactions",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TSATripAttributes",
            "schema_name": "TSA",
            "id_field": "TTpTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TTpTripID, TpTripID, SubscriberUniqueTransactionID, CASE when AuthorityID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AuthorityID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AuthorityID, CASE when SubscriberID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubscriberID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubscriberID, CASE when TransponderID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderID, CollectorID, VaultID, ValidTxnPrimaryKeyID, SourceTripID, SourcePKID, CASE when TransactionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionType, CASE when RecordType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RecordType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RecordType, CASE when ResubmittalReason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ResubmittalReason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ResubmittalReason, ResubmittalCount, CASE when LocationType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LocationType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LocationType, CASE when Facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Facility, CASE when EntryInformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(EntryInformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as EntryInformation, CASE when Plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Plaza, Lane, CASE when LaneMode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LaneMode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LaneMode, CASE when TransactionDate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionDate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionDate, CASE when TransactionTime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionTime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionTime, CASE when TransponderStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderStatus, CASE when TransponderValidationListFileName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderValidationListFileName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderValidationListFileName, CASE when LicensePlateValidationListFileName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateValidationListFileName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateValidationListFileName, CASE when VehicleClassification is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClassification, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClassification, AxlesExpected, AxlesCounted, Speed, CASE when HovdeSignation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HovdeSignation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HovdeSignation, CASE when ExitBarrierOrGantryInformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ExitBarrierOrGantryInformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ExitBarrierOrGantryInformation, CASE when VehicleClassificationforTollDetermination is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClassificationforTollDetermination, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClassificationforTollDetermination, TransponderTollAmount, CASE when TransponderDiscountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransponderDiscountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransponderDiscountType, DiscountedTransponderTollAmount, VideoTollAmountWithoutVideoTollPremium, VideoTollAmountWithVideoTollPremium, CASE when VideoDiscountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VideoDiscountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VideoDiscountType, DiscountedVideoTollAmountWithoutVideoTollPremium, DiscountedVideoTollAmountWithVideoTollPremium, CashTollAmount, CASE when CashDiscountType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CashDiscountType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CashDiscountType, DiscountedCashTollAmount, AmountPaid, CASE when UnusualOccurrenceCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UnusualOccurrenceCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UnusualOccurrenceCode, NumberOfImages, CASE when TransactionStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TransactionStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TransactionStatus, CASE when Disposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Disposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Disposition, LastValidRecordCount, CASE when OriginalTransactionType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OriginalTransactionType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OriginalTransactionType, PostedAmount, CorrectionCount, CASE when OriginalExitTransactionDateTime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(OriginalExitTransactionDateTime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as OriginalExitTransactionDateTime, BMSAlertDate, PBMTollAmount, AVITollAmount, CASE when InvoiceStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceStatus, CASE when RejectReason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RejectReason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RejectReason, BaseFee, VariableFee, InteropTransactionFee, NetPayAmount, CASE when SubscriberIDfromFile is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubscriberIDfromFile, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubscriberIDfromFile, CalculatedVideoAmtWithVideoPremium, CalculatedDiscountedVideoAmtWithVideoPremium, RevenueDate, CreatedDate, UpdatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TSA.TSATripAttributes",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Gl_Transactions",
            "schema_name": "Finance",
            "id_field": "Gl_TxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Gl_TxnID, PostingDate, PostingDate_yyyymm, CustomerID, TxnTypeID, BusinessProcessID, LinkID, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, TxnDate, TxnAmount, IsContra, CASE when Description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Description, CASE when RequestID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RequestID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RequestID, BusinessUnitId, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.Gl_Transactions",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Gl_Txn_LineItems",
            "schema_name": "Finance",
            "id_field": "PK_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PK_ID, Gl_TxnID, CASE when Description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Description, ChartOfAccountID, DebitAmount, CreditAmount, SpecialJournalID, CASE when Drcr_Flag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Drcr_Flag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Drcr_Flag, TxnType_Li_ID, TxnTypeID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.Gl_Txn_LineItems",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "GlDailySummaryByCoaIDBuID",
            "schema_name": "Finance",
            "id_field": "ChartOfAccountID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select DailySummaryID, ChartOfAccountID, BusinessUnitID, BeginningBal, DebitTxnAmount, CreditTxnAmount, EndIngBal, PostedDate, CASE when FiscalYearName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FiscalYearName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FiscalYearName, JobRunDate, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.GlDailySummaryByCoaIDBuID",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnTypes",
            "schema_name": "Finance",
            "id_field": "TxnTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TxnTypeID, CASE when TxnType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TxnType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TxnType, CASE when TxnDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TxnDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TxnDesc, TxnType_CategoryID, CASE when StatementNote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(StatementNote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as StatementNote, CASE when CustomerNote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CustomerNote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CustomerNote, CASE when ViolatorNote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ViolatorNote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ViolatorNote, IsAutomatic, AdjustmentCategoryID, LevelID, CASE when Status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Status, CASE when LevelCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LevelCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LevelCode, BusinessUnitID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.TxnTypes",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Vehicles",
            "schema_name": "TollPlus",
            "id_field": "VehicleID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VehicleID, CustomerID, CASE when VehicleNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleNumber, CASE when VehicleCountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleCountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleCountry, CASE when VehicleState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleState, Year, CASE when Make is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Make, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Make, CASE when Model is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Model, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Model, CASE when Color is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Color, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Color, StartEffectiveDate, EndEffectiveDate, VehicleStatusID, CASE when VehicleClassCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleClassCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleClassCode, CASE when VIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VIN, IsProtected, IsExempted, IsTempNumber, CASE when TagID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagID, ContractualTypeID, CASE when PlateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateType, CASE when VehicleShape is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleShape, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleShape, CASE when FuelEfficiency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FuelEfficiency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FuelEfficiency, IsHamRadioOperator, IsTrailer, CASE when LicensePlateImagePath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LicensePlateImagePath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LicensePlateImagePath, CASE when DepartmentName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DepartmentName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DepartmentName, ExcessiveVTolls, IsInHV, Isvrh, CASE when DocNo is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DocNo, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DocNo, CASE when VehicleBodyVIN is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleBodyVIN, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleBodyVIN, CASE when County is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(County, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as County, CASE when Temp_Source is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Temp_Source, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Temp_Source, Temp_PK, Temp_Key, ChannelID, ICNID, IsVTollEnabled, FilePathConfigurationID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Vehicles",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Invoice_Charges_Tracker",
            "schema_name": "TollPlus",
            "id_field": "InvoiceChargeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select InvoiceChargeID, InvoiceID, CASE when InvBatchID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvBatchID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvBatchID, Amount, CASE when FeeCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FeeCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FeeCode, PaymentStatusID, OutstandingAmount, IsWriteOff, ICNID, WriteOffDate, WriteOffAmount, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Invoice_Charges_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Invoice_Header",
            "schema_name": "TollPlus",
            "id_field": "InvoiceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select InvoiceID, CASE when InvoiceNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceNumber, MasterInvoiceID, InvoiceDate, DueDate, StartPeriod, EndPeriod, CustomerID, VehicleID, StageStepID, PreviousDue, TotalAmount, AmountPaid, BalanceDue, CASE when InvoiceStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceStatus, CurrentCharges, AdjustedAmount, IsViolator, CASE when InvBatchID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvBatchID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvBatchID, CASE when Inv_File_Path is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Inv_File_Path, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Inv_File_Path, UnBilledAmt, OverpmtAmt, ServiceTax, Is_Hold, IsPDFGenerated, AgencyID, GracePeriodDate, MailingDate, AgeStageID, CurrentChargesToll, CurrentChargesFee, NonPaymentFee, InvoiceAdjAmt, CASE when InvoiceAccountStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceAccountStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceAccountStatus, PreviousDueStartPeriod, PreviousDueEndPeriod, MailReturnDate, IsDiscountProcessed, UnPaidTripCnt, CollectionStatus, SourceID, CASE when SourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SourceName, UnPaidTripAmount, SourceWriteOff, ChannelID, ICNID, CASE when CitationStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CitationStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CitationStatus, SecNtvDate, CASE when SourceInvoiceStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SourceInvoiceStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SourceInvoiceStatus, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Invoice_Header",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Invoice_LineItems",
            "schema_name": "TollPlus",
            "id_field": "InvLineItemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select InvLineItemID, InvoiceID, LinkID, CASE when CustTxnCategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CustTxnCategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CustTxnCategory, CASE when TxnType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TxnType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TxnType, CASE when Stmt_Literal is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Stmt_Literal, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Stmt_Literal, Amount, CASE when SubSystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystem, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, TxnDate, CASE when ReferenceInvoiceID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReferenceInvoiceID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReferenceInvoiceID, CASE when SourceViolationStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SourceViolationStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SourceViolationStatus, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Invoice_LineItems",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Mbsheader",
            "schema_name": "TollPlus",
            "id_field": "MbsID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MbsID, MbsGeneratedDate, IsPresentMbs, StartPeriod, EndPeriod, DueDate, CustomerID, VehicleID, CASE when VehicleState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleState, PreviousDue, AmountPaid, Adjustments, CurrentChargesToll, CurrentChargesFee, TotalAmount, CASE when PlateImagePath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PlateImagePath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PlateImagePath, CASE when PDFPath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PDFPath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PDFPath, MailingDate, MailReturnDate, EmailedDate, EmailReturnDate, NewDueDate, SourcePKID, MbsStatusID, CASE when QACategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(QACategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as QACategory, PlateFilePathConfigurationID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.Mbsheader",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MbsInvoices",
            "schema_name": "TollPlus",
            "id_field": "MbsInvoicesID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select MbsInvoicesID, MbsID, InvoiceID, AgeStageID, CASE when InvoiceNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceNumber, InvAddedReasonID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.MbsInvoices",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Invoice_Receipts_Tracker",
            "schema_name": "TollPlus",
            "id_field": "ReceiptID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ReceiptID, InvoiceID, Invoice_ChargeID, CASE when InvBatchID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvBatchID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvBatchID, AmountReceived, LinkID, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, TxnDate, OverpaymentID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Invoice_Receipts_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Time_Zone_Offset",
            "schema_name": "Utility",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select YYYY, DST_Start_Date, DST_End_Date, DST_Start_Date_UTC, DST_End_Date_UTC, Daylight_Weeks, Source_TZ, Target_TZ, DST_Offset, Non_DST_Offset from Utility.Time_Zone_Offset",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Tags",
            "schema_name": "TollPlus",
            "id_field": "CustTagID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustTagID, CustomerID, TagStartDate, TagEndDate, CASE when TagType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagType, CASE when TagStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagStatus, CASE when TagAlias is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagAlias, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagAlias, CASE when HexTagID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HexTagID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HexTagID, CASE when SerialNo is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SerialNo, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SerialNo, CASE when ReturnedOrAssignedType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReturnedOrAssignedType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReturnedOrAssignedType, CASE when ItemCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ItemCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ItemCode, IsNonRevenue, IsGroundTransPortation, CASE when TagAgency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TagAgency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TagAgency, CASE when SpecialityTag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SpecialityTag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SpecialityTag, CASE when Mounting is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Mounting, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Mounting, IsDFWBlocked, IsDALBlocked, TagAssignedDate, TagStatusDate, ChannelID, ICNID, TagAssignedEndDate, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Tags",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_AppLication_Parameters",
            "schema_name": "TollPlus",
            "id_field": "ParameterID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ParameterID, CASE when ParameterKey is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ParameterKey, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ParameterKey, CASE when ParameterName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ParameterName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ParameterName, CASE when ParameterValue is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ParameterValue, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ParameterValue, CASE when ParameterDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ParameterDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ParameterDesc, CASE when MeasurementDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MeasurementDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MeasurementDesc, CASE when ConfigType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ConfigType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ConfigType, CASE when DepartmentType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DepartmentType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DepartmentType, CASE when DataType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(DataType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as DataType, MinLength, MaxLength, AllowedSplChars, IsSpaceAllowed, CASE when RegularExp is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RegularExp, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RegularExp, StartEffectiveDate, EndEffectiveDate, IsEditable, ChannelID, ICNID, IsActive, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_AppLication_Parameters",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCollectionsOutbound",
            "schema_name": "TER",
            "id_field": "VioCollOutboundID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VioCollOutboundID, FileID, CASE when RecordType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RecordType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RecordType, ViolatorID, CASE when InvoiceNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(InvoiceNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as InvoiceNumber, MbsID, CASE when FirstName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(FirstName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as FirstName, CASE when LastName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LastName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LastName, CASE when Address1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address1, CASE when Address2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Address2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Address2, CASE when City is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(City, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as City, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, CASE when ZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZipCode, CASE when MobilePhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(MobilePhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as MobilePhoneNumber, CASE when WorkPhoneNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(WorkPhoneNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as WorkPhoneNumber, InvoiceAmount, TollAmount, FeeAmount, PaymentOrCreditAdjustment, ReversalOrCharge, TotalAmountDue, CASE when NSFIndicator is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NSFIndicator, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NSFIndicator, NSFDate, ZCInvoiceDate, FirstNNPDate, SecondNNPDate, ThirdNNPDate, CASE when VehicleNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleNumber, CASE when VehicleState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleState, CASE when VehicleMake is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleMake, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleMake, CASE when VehicleModel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleModel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleModel, CASE when VehicleColor is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VehicleColor, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VehicleColor, VehicleYear, CASE when HasTSATransactions is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(HasTSATransactions, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as HasTSATransactions, CASE when RentalCarIndicator is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RentalCarIndicator, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RentalCarIndicator, RecallDate, LastActivityOnInvoice, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TER.ViolatorCollectionsOutbound",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PaymentTxn_LineItems",
            "schema_name": "Finance",
            "id_field": "LineItemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select LineItemID, PaymentID, CASE when AppTxnTypeCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AppTxnTypeCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AppTxnTypeCode, LineItemAmount, LinkID, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, CustomerID, PaymentDate, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.PaymentTxn_LineItems",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PaymentTxns",
            "schema_name": "Finance",
            "id_field": "PaymentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select PaymentID, PaymentDate, CASE when VoucherNo is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(VoucherNo, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as VoucherNo, CASE when SubSystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystem, PaymentModeID, CASE when IntiatedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IntiatedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IntiatedBy, CASE when ActivityType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ActivityType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ActivityType, CASE when StatementNote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(StatementNote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as StatementNote, TxnAmount, PaymentStatusID, RefPaymentID, CASE when RefType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RefType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RefType, SourcePKID, AccountStatusID, CASE when ApprovedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ApprovedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ApprovedBy, ChannelID, LocationID, SourceOfEntry, CASE when ReasonText is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ReasonText, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ReasonText, ICNID, IsVirtualCheck, CASE when PmtTxnType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(PmtTxnType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as PmtTxnType, SourcePmtID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.PaymentTxns",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "SubSystems",
            "schema_name": "TollPlus",
            "id_field": "SubSystemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select SubSystemID, CASE when SubSystemName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystemName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystemName, CASE when SubSystemCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystemCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystemCode, CASE when SubSystemDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystemDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystemDescription, ParentSubSystemID, IsWebDisplay, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.SubSystems",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "AppTxnTypes",
            "schema_name": "TollPlus",
            "id_field": "AppTxnTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select AppTxnTypeID, CASE when AppTxnTypeCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AppTxnTypeCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AppTxnTypeCode, CASE when AppTxnTypeDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AppTxnTypeDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AppTxnTypeDesc, CASE when Effected_BalanceType_Positive is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Effected_BalanceType_Positive, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Effected_BalanceType_Positive, CASE when Effected_BalanceType_Negative is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Effected_BalanceType_Negative, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Effected_BalanceType_Negative, CASE when Main_Balance_Type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Main_Balance_Type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Main_Balance_Type, TxnType_CategoryID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.AppTxnTypes",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Trip_Receipts_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripReceiptID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select TripReceiptID, CustomerID, LinkID, AmountReceived, TxnDate, CustTripID, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, TripChargeID, InvoiceID, OverpaymentID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Trip_Receipts_Tracker",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "RefundRequests_Queue",
            "schema_name": "Finance",
            "id_field": "RefundRequestID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select RefundRequestID, ExceptionRRID, CustomerID, CASE when RefundRequestState is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RefundRequestState, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RefundRequestState, CASE when RefundRequestType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(RefundRequestType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as RefundRequestType, CASE when SubSystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystem, TxnTypeID, PayTypeID, OrigInalPayTypeID, Amount, PaymentTxnID, RequestedDate, ProcessedDate, CASE when Reason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Reason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Reason, ApprovedDate, CASE when ApprovedBy is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ApprovedBy, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ApprovedBy, RetryCnt, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.RefundRequests_Queue",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnType_Categories",
            "schema_name": "TollPlus",
            "id_field": "CategoryID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CategoryID, CASE when CategoryName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CategoryName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CategoryName, CASE when CategoryDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CategoryDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CategoryDesc, CASE when Status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Status, Parent_CategoryID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TxnType_Categories",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Vehicle_Tags",
            "schema_name": "TollPlus",
            "id_field": "VehicleTagID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select VehicleTagID, VehicleID, CustTagID, IsBlockListed, StartEffectiveDate, EndEffectiveDate, ChannelID, ICNID, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_Customer_Vehicle_Tags",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_CustTxns",
            "schema_name": "TollPlus",
            "id_field": "CustTxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CustTxnID, CustomerID, LinkID, CASE when LinkSourceName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LinkSourceName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LinkSourceName, TxnAmount, PostedDate, VehicleID, CASE when AppTxnTypeCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AppTxnTypeCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AppTxnTypeCode, CASE when BusinessProcessCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BusinessProcessCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BusinessProcessCode, CASE when Stmt_Literal is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Stmt_Literal, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Stmt_Literal, CASE when CustTxnCategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CustTxnCategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CustTxnCategory, PreviousBalance, CurrentBalance, CASE when SubSystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(SubSystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as SubSystem, CASE when LocationName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LocationName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LocationName, CASE when BalanceType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BalanceType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BalanceType, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.TP_CustTxns",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BusinessProcesses",
            "schema_name": "Finance",
            "id_field": "BusinessProcessID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select BusinessProcessID, CASE when BusinessProcessCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BusinessProcessCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BusinessProcessCode, CASE when BusinessProcessDescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(BusinessProcessDescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as BusinessProcessDescription, CASE when Status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Status, IsAvailable, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.BusinessProcesses",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ChartOfAccounts",
            "schema_name": "Finance",
            "id_field": "ChartOfAccountID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select Surrogate_COAID, ChartOfAccountID, CASE when AccountName is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AccountName, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AccountName, ParentChartOfAccountID, CASE when AgCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgCode, CASE when AsgCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AsgCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AsgCode, LowerBound, UpperBound, CASE when Status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Status, CASE when IsControlAccount is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(IsControlAccount, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as IsControlAccount, CASE when NormalBalanceType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(NormalBalanceType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as NormalBalanceType, LegalAccountID, CASE when AgencyCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(AgencyCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as AgencyCode, StartEffectiveDate, EndEffectiveDate, CASE when Comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as Comments, IsDeleted, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from Finance.ChartOfAccounts",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ZipCodes",
            "schema_name": "TollPlus",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when ZipCode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ZipCode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ZipCode, CASE when City is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(City, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as City, CASE when County is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(County, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as County, CASE when State is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(State, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as State, CASE when TxDotID is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(TxDotID, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as TxDotID, IsAdminHearing, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as UpdatedUser, LND_UpdateDate, CASE when LND_UpdateType is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(LND_UpdateType, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as LND_UpdateType from TollPlus.ZipCodes",
            "gcs_upload_flag": "FALSE"
        }
    ]
}