{
    "connection_string": "Driver=ODBC Driver 18 for SQL Server;Server=WVPRODTBOSSDB06;Database=TBOS;Trusted_Connection=yes;Encrypt=no;",
    "connection_details": {
        "driver": "ODBC Driver 18 for SQL Server",
        "server": "WVPRODTBOSSDB06",
        "database": "TBOS",
        "trusted_connection": "yes",
        "encrypt": "no",
        "username": "",
        "password_secret_id": "",
        "secret_version": ""
    },
    "gcs_bucket_name": "prj-ntta-ops-bi-prod-landing-data",
    "database_type": "SQLServer",
    "source_database": "TBOS",
    "project_id": "prj-ntta-ops-bi-prod-svc-01",
    "chunk_file_size_gb": 1.0,
    "compression_type": "gzip",
    "parquet_file_page_size_bytes": 1048576,
    "output_folder": "D:\\gcp-data-transfer-csv\\Parallel_Data_Extraction\\tbos_prod_tables",
    "log_folder_path": "E:\\bcp_logs\\tbos_prod_tables",
    "max_process_count": 8,
    "file_type": ".csv",
    "bq_dataset_map": {
        "TBOS": {
            "TollPlus": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "TollPlus_"
            },
            "dbo": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "dbo_"
            },
            "Finance": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Finance_"
            },
            "History": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "History_"
            },
            "IOP": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "IOP_"
            },
            "Rbac": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Rbac_"
            },
            "TER": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "TER_"
            },
            "DMV": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "DMV_"
            },
            "Parking": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Parking_"
            },
            "TranProcessing": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "TranProcessing_"
            },
            "CaseManager": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "CaseManager_"
            },
            "Court": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Court_"
            },
            "Inventory": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Inventory_"
            },
            "Notifications": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Notifications_"
            },
            "TSA": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "TSA_"
            },
            "Utility": {
                "bq_dataset": "LND_TBOS_SUPPORT",
                "table_name_prefix": ""
            },
            "Reporting": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "Reporting_"
            },
            "docmgr": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "docmgr_"
            },
            "EIP": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "EIP_"
            },
            "MIR": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "MIR_"
            }
        },
        "IPS": {
            "EIP": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "EIP_"
            },
            "MIR": {
                "bq_dataset": "LND_TBOS_STAGE_FULL",
                "table_name_prefix": "MIR_"
            }
        },
        "EDW_TRIPS": {
            "dbo": {
                "bq_dataset": "EDW_TRIPS_APS",
                "table_name_prefix": ""
            },
            "Stage": {
                "bq_dataset": "EDW_TRIPS_STAGE",
                "table_name_prefix": ""
            },
            "Ref": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            },
            "Utility": {
                "bq_dataset": "EDW_TRIPS_SUPPORT",
                "table_name_prefix": ""
            }
        }
    },
    "log": {
        "log_level": "INFO",
        "log_name": "data_transfer_log",
        "labels": {}
    },
    "tables": [
        {
            "table_name": "IOPOutboundAndViolationLinking",
            "schema_name": "dbo",
            "id_field": "OutboundTPTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select [lane_viol_id], [transaction_id], [hub_iop_txn_id], [violation_id], [transaction_date], violationtptripid, outboundtptripid, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.dbo.IOPOutboundAndViolationLinking WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Adjustment_LineItems",
            "schema_name": "Finance",
            "id_field": "AdjLineItemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select adjlineitemid, adjustmentid, amount, CASE when apptxntypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(apptxntypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as apptxntypecode, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, newtollamount, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, laneid, CASE when isvisible is NULL then 0 else isvisible end AS isvisible, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.Adjustment_LineItems WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Adjustments",
            "schema_name": "Finance",
            "id_field": "AdjustmentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select adjustmentid, customerid, accstatusid, amount, CASE when adjustmentcategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adjustmentcategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adjustmentcategory, txntypeid, adjustmentdate, CASE when drcrflag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(drcrflag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as drcrflag, CASE when adjustmentreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adjustmentreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adjustmentreason, CASE when ismanualentry is NULL then 0 else ismanualentry end AS ismanualentry, approvedstatusid, approvedstatusdate, paymentid, icnid, locationid, sourceid, CASE when sourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcename, tolladjustmentid, CASE when comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as comments, newadjustmentid, CASE when iscreditcardtype is NULL then 0 else iscreditcardtype end AS iscreditcardtype, sourcetranstypeid, sourcertdid, refundrequestid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.Adjustments WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Attributes",
            "schema_name": "History",
            "id_field": "HistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select histid, customerid, CASE when driverlicencenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(driverlicencenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as driverlicencenumber, CASE when driverlicenceapprovedstate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(driverlicenceapprovedstate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as driverlicenceapprovedstate, driverlicenceexpirationdate, autoreplenishmentid, preferredshipment, transponderpurchasemethod, calculatedrebillamount, thresholdamount, CASE when ismanualhold is NULL then 0 else ismanualhold end AS ismanualhold, statementdeliveryoptionid, sourceofchannelid, [rebill_hold_starteffectivedate], [rebill_hold_endeffectivedate], CASE when is_notifications_added is NULL then 0 else is_notifications_added end AS is_notifications_added, capamount, kycstatusid, kycstatusdate, statementcycleid, CASE when rebillstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rebillstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rebillstatus, rebilldate, CASE when preferredlanguage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(preferredlanguage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as preferredlanguage, CASE when ishearingimpairment is NULL then 0 else ishearingimpairment end AS ishearingimpairment, CASE when isfrequentcaller is NULL then 0 else isfrequentcaller end AS isfrequentcaller, CASE when issupervisor is NULL then 0 else issupervisor end AS issupervisor, CASE when tagsinstatusfile is NULL then 0 else tagsinstatusfile end AS tagsinstatusfile, invoiceintervalid, invoiceamount, CASE when invoiceday is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoiceday, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoiceday, lowbalanceamount, mbsgenerationday, CASE when ssn is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ssn, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ssn, CASE when is_commercial is NULL then 0 else is_commercial end AS is_commercial, CASE when iseventsponsor is NULL then 0 else iseventsponsor end AS iseventsponsor, CASE when isvip is NULL then 0 else isvip end AS isvip, CASE when ismilitary is NULL then 0 else ismilitary end AS ismilitary, CASE when autorecalcreplamt is NULL then 0 else autorecalcreplamt end AS autorecalcreplamt, nonrevenuetypeid, CASE when istollperks is NULL then 0 else istollperks end AS istollperks, CASE when ismarketingandnewsletter is NULL then 0 else ismarketingandnewsletter end AS ismarketingandnewsletter, CASE when isdirectcarrierbilling is NULL then 0 else isdirectcarrierbilling end AS isdirectcarrierbilling, CASE when companycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(companycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as companycode, CASE when isgroundtransportation is NULL then 0 else isgroundtransportation end AS isgroundtransportation, mbsimageid, violatortypeid, icnid, channelid, CASE when action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as action, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.History.TP_Customer_Attributes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customers",
            "schema_name": "History",
            "id_field": "HistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select histid, customerid, usertypeid, customerstatusid, accountstatusid, accountstatusdate, parentcustomerid, sourceofentry, revenuecategoryid, CASE when isprimary is NULL then 0 else isprimary end AS isprimary, sourcepkid, CASE when action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as action, agencyid, regcustrefid, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.History.TP_Customers WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BOS_IOP_OutboundTransactions",
            "schema_name": "IOP",
            "id_field": "BOSIOPTransactionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select bosioptransactionid, iopid, transactiontypeid, CASE when tagtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagtype, transactiondate, CASE when agencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencyid, entryplaza, entrylane, CASE when tagstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagstatus, CASE when licencenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licencenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licencenumber, CASE when licensestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licensestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licensestate, exitplaza, exitlane, CASE when transactionstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionstatus, reconcilitionfileid, tollamount, acceptedamount, CASE when iscorrected is NULL then 0 else iscorrected end AS iscorrected, discountamount, tptripid, CASE when tagserialnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagserialnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagserialnumber, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, CASE when tripmethod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripmethod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripmethod, posteddate, resubmitcount, tranfileid, CASE when facilitycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facilitycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facilitycode, CASE when plazacode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazacode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazacode, CASE when lanecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanecode, entrytripdatetime, exittripdatetime, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, CASE when facilitydesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facilitydesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facilitydesc, CASE when entryplazadesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(entryplazadesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as entryplazadesc, CASE when exitplazadesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exitplazadesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exitplazadesc, entrytripdatetimewithtimezone, exittripdatetimewithtimezone, CASE when licenseplatecountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatecountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatecountry, violationserialnumber, vestimestamp, tagagencyid, CASE when resubmitreasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(resubmitreasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as resubmitreasoncode, CASE when correctionreasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(correctionreasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as correctionreasoncode, transactionflatfee, transactionpercentfee, sourceofentry, correctioncount, sourcepkid, CASE when recordcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordcode, CASE when accountagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountagencyid, adjustmentdatetime, CASE when postingdisposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(postingdisposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as postingdisposition, CASE when postingdispositionreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(postingdispositionreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as postingdispositionreason, CASE when adjustmentresponsepayload is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adjustmentresponsepayload, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adjustmentresponsepayload, homeagencyrefid, CASE when spare1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(spare1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as spare1, CASE when spare2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(spare2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as spare2, CASE when spare3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(spare3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as spare3, CASE when spare4 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(spare4, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as spare4, CASE when spare5 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(spare5, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as spare5, CASE when othercorrectiondescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(othercorrectiondescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as othercorrectiondescription, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.IOP.BOS_IOP_OutboundTransactions WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "LocationRoles",
            "schema_name": "Rbac",
            "id_field": "LocationRoleID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select locationroleid, locationid, roleid, channelid, icnid, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Rbac.LocationRoles WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Agencies",
            "schema_name": "TollPlus",
            "id_field": "AgencyID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select agencyid, agencytypeid, CASE when agencyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencyname, CASE when agencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencycode, CASE when agencydesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencydesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencydesc, CASE when ifsccode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ifsccode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ifsccode, CASE when accounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accounttype, CASE when bankname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(bankname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as bankname, CASE when accountname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountname, CASE when accountnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountnumber, rangeid, startfacilitycode, endfacilitycode, tagcount, customerid, CASE when starthexid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(starthexid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as starthexid, CASE when endhexid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(endhexid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as endhexid, CASE when revcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(revcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as revcode, CASE when encryptflag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(encryptflag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as encryptflag, CASE when pgpkeyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pgpkeyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pgpkeyid, CASE when ftpurl is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ftpurl, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ftpurl, CASE when ftplogin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ftplogin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ftplogin, CASE when ftppwd is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ftppwd, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ftppwd, CASE when isactive is NULL then 0 else isactive end AS isactive, starteffectivedate, endeffectivedate, CASE when isswitchable is NULL then 0 else isswitchable end AS isswitchable, CASE when protocoltype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(protocoltype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as protocoltype, CASE when ishomeagency is NULL then 0 else ishomeagency end AS ishomeagency, CASE when parentagencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parentagencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parentagencycode, CASE when iopagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(iopagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as iopagencyid, CASE when hubid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hubid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hubid, CASE when tagagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagagencyid, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Agencies WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Channels",
            "schema_name": "TollPlus",
            "id_field": "ChannelID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select channelid, CASE when channelname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(channelname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as channelname, CASE when isdisplay is NULL then 0 else isdisplay end AS isdisplay, CASE when channeldesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(channeldesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as channeldesc, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Channels WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "CustomerFlagReferenceLookup",
            "schema_name": "TollPlus",
            "id_field": "CustomerFlagReferenceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerflagreferenceid, CASE when flagname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(flagname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as flagname, CASE when flagdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(flagdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as flagdescription, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.CustomerFlagReferenceLookup WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ICN",
            "schema_name": "TollPlus",
            "id_field": "ICNID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select icnid, userid, cashamount, checkamount, creditamount, moamount, floatamount, CASE when icnstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(icnstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as icnstatus, CASE when isdayshiftclosed is NULL then 0 else isdayshiftclosed end AS isdayshiftclosed, cashiercheckamount, shiftstartdate, shiftenddate, locationid, locationroleid, retrycnt, stickertagscount, integratedtagscount, licenseplatetagscount, hardcasetagscount, CASE when shiftapprovalstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(shiftapprovalstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as shiftapprovalstatus, CASE when shiftsubmitted is NULL then 0 else shiftsubmitted end AS shiftsubmitted, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, csrcashamount, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.ICN WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Lanes",
            "schema_name": "TollPlus",
            "id_field": "LaneID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select laneid, CASE when lanecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanecode, plazaid, CASE when lanename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanename, CASE when lanetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanetype, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when lanestatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanestatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanestatus, CASE when direction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(direction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as direction, lanecategoryid, CASE when exitlanecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exitlanecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exitlanecode, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Lanes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Locations",
            "schema_name": "TollPlus",
            "id_field": "LocationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select locationid, CASE when locationcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationcode, CASE when locationname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationname, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when isowned is NULL then 0 else isowned end AS isowned, CASE when isnonrevenue is NULL then 0 else isnonrevenue end AS isnonrevenue, CASE when countyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(countyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as countyname, CASE when courtname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(courtname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as courtname, agencyid, CASE when ishvenabled is NULL then 0 else ishvenabled end AS ishvenabled, CASE when istsa is NULL then 0 else istsa end AS istsa, agencytsasubscribermapid, tsafacilityid, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Locations WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Plans",
            "schema_name": "TollPlus",
            "id_field": "PlanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select planid, CASE when planname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(planname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as planname, CASE when plancode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plancode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plancode, CASE when plandescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plandescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plandescription, parentid, CASE when isfeerequired is NULL then 0 else isfeerequired end AS isfeerequired, CASE when istagrequired is NULL then 0 else istagrequired end AS istagrequired, statementcycleid, starteffectivedate, endeffectivedate, invoiceintervalid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Plans WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Plazas",
            "schema_name": "TollPlus",
            "id_field": "PlazaID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select plazaid, CASE when plazacode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazacode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazacode, locationid, CASE when plazaname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazaname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazaname, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when ipaddress is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ipaddress, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ipaddress, CASE when portnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(portnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as portnumber, agencyid, CASE when pricemode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pricemode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pricemode, transactionfeemode, chartofaccountid, CASE when ftpurl is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ftpurl, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ftpurl, CASE when pgpkeyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pgpkeyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pgpkeyid, CASE when ftplogin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ftplogin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ftplogin, CASE when ftppwd is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ftppwd, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ftppwd, CASE when encryptflag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(encryptflag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as encryptflag, CASE when accountnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountnumber, CASE when accounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accounttype, CASE when accountname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountname, CASE when bankname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(bankname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as bankname, CASE when ifsccode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ifsccode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ifsccode, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, CASE when isowned is NULL then 0 else isowned end AS isowned, CASE when isnonrevenue is NULL then 0 else isnonrevenue end AS isnonrevenue, plazatypeid, CASE when exitplazacode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exitplazacode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exitplazacode, channelid, icnid, parkingtaxrate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Plazas WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Ref_Invoice_Workflow_Stages",
            "schema_name": "TollPlus",
            "id_field": "StageID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select stageid, CASE when stagename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagename, stageorder, stepscount, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when stagecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagecode, agingperiod, graceperiod, CASE when waiveallfees is NULL then 0 else waiveallfees end AS waiveallfees, CASE when applyavirate is NULL then 0 else applyavirate end AS applyavirate, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Ref_Invoice_Workflow_Stages WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Ref_LookupTypeCodes_Hierarchy",
            "schema_name": "TollPlus",
            "id_field": "LookupTypeCodeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select lookuptypecodeid, CASE when lookuptypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lookuptypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lookuptypecode, CASE when lookuptypecodedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lookuptypecodedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lookuptypecodedesc, [parent_lookuptypecodeid], CASE when is_available_foruse is NULL then 0 else is_available_foruse end AS is_available_foruse, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Ref_LookupTypeCodes_Hierarchy WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TollScheduleDtl",
            "schema_name": "TollPlus",
            "id_field": "TollScheduleDtlID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tollscheduledtlid, tollschedulehdrid, tollrateid, channelid, icnid, fromtime, totime, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TollScheduleDtl WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TollScheduleHdr",
            "schema_name": "TollPlus",
            "id_field": "TollScheduleHdrID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tollschedulehdrid, entrylaneid, entryplazaid, exitplazaid, channelid, icnid, starteffectivedate, endeffectivedate, CASE when tollschedulehdrdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tollschedulehdrdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tollschedulehdrdesc, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, CASE when transactionmenthod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionmenthod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionmenthod, CASE when scheduletype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(scheduletype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as scheduletype, CASE when isactive is NULL then 0 else isactive end AS isactive, interval, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TollScheduleHdr WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_AccStatus_Tracker",
            "schema_name": "TollPlus",
            "id_field": "AccStatusHistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select accstatushistid, customerid, accountstatusid, accountstatusdate, [parent_accstatushistid], icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_AccStatus_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Addresses",
            "schema_name": "TollPlus",
            "id_field": "CustAddressID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custaddressid, customerid, CASE when addresstype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addresstype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addresstype, CASE when addressline1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline1, CASE when addressline2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline2, CASE when addressline3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline3, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when country is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(country, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as country, CASE when zip1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip1, CASE when zip2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip2, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when iscommunication is NULL then 0 else iscommunication end AS iscommunication, CASE when isvalid is NULL then 0 else isvalid end AS isvalid, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, addressupdateddate, CASE when isaddressupdatenotified is NULL then 0 else isaddressupdatenotified end AS isaddressupdatenotified, isvalidupdateddate, CASE when isskiptraced is NULL then 0 else isskiptraced end AS isskiptraced, addresssourceid, rovsourceid, CASE when rovsourcetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rovsourcetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rovsourcetype, CASE when subsource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsource, CASE when action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as action, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Addresses WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Attributes",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerid, CASE when driverlicencenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(driverlicencenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as driverlicencenumber, CASE when driverlicenceapprovedstate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(driverlicenceapprovedstate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as driverlicenceapprovedstate, driverlicenceexpirationdate, autoreplenishmentid, preferredshipment, transponderpurchasemethod, calculatedrebillamount, thresholdamount, CASE when ismanualhold is NULL then 0 else ismanualhold end AS ismanualhold, statementdeliveryoptionid, sourceofchannelid, [rebill_hold_starteffectivedate], [rebill_hold_endeffectivedate], CASE when is_notifications_added is NULL then 0 else is_notifications_added end AS is_notifications_added, capamount, kycstatusid, kycstatusdate, statementcycleid, CASE when rebillstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rebillstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rebillstatus, rebilldate, CASE when preferredlanguage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(preferredlanguage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as preferredlanguage, CASE when ishearingimpairment is NULL then 0 else ishearingimpairment end AS ishearingimpairment, CASE when isfrequentcaller is NULL then 0 else isfrequentcaller end AS isfrequentcaller, CASE when issupervisor is NULL then 0 else issupervisor end AS issupervisor, CASE when tagsinstatusfile is NULL then 0 else tagsinstatusfile end AS tagsinstatusfile, invoiceintervalid, invoiceamount, CASE when invoiceday is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoiceday, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoiceday, lowbalanceamount, mbsgenerationday, CASE when ssn is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ssn, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ssn, CASE when is_commercial is NULL then 0 else is_commercial end AS is_commercial, CASE when iseventsponsor is NULL then 0 else iseventsponsor end AS iseventsponsor, CASE when isvip is NULL then 0 else isvip end AS isvip, CASE when ismilitary is NULL then 0 else ismilitary end AS ismilitary, CASE when autorecalcreplamt is NULL then 0 else autorecalcreplamt end AS autorecalcreplamt, nonrevenuetypeid, CASE when istollperks is NULL then 0 else istollperks end AS istollperks, CASE when ismarketingandnewsletter is NULL then 0 else ismarketingandnewsletter end AS ismarketingandnewsletter, CASE when isdirectcarrierbilling is NULL then 0 else isdirectcarrierbilling end AS isdirectcarrierbilling, CASE when companycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(companycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as companycode, CASE when isgroundtransportation is NULL then 0 else isgroundtransportation end AS isgroundtransportation, mbsimageid, violatortypeid, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Attributes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Balance_Alert_Facts",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerid, CASE when lowbalanceflag is NULL then 0 else lowbalanceflag end AS lowbalanceflag, lowbalancedate, CASE when negbalanceflag is NULL then 0 else negbalanceflag end AS negbalanceflag, negbalancedate, CASE when lowbalancenotice is NULL then 0 else lowbalancenotice end AS lowbalancenotice, CASE when negativebalancenotice is NULL then 0 else negativebalancenotice end AS negativebalancenotice, sentemailcount, CASE when regionalioplowbalanceflag is NULL then 0 else regionalioplowbalanceflag end AS regionalioplowbalanceflag, regionalioplowbalancedate, CASE when nationalioplowbalanceflag is NULL then 0 else nationalioplowbalanceflag end AS nationalioplowbalanceflag, nationalioplowbalancedate, CASE when accountfinancialstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountfinancialstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountfinancialstatus, CASE when balanceflag is NULL then 0 else balanceflag end AS balanceflag, CASE when balancenotice is NULL then 0 else balancenotice end AS balancenotice, balancedate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Balance_Alert_Facts WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Balances",
            "schema_name": "TollPlus",
            "id_field": "CustbalID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custbalid, customerid, balancedate, balanceamount, CASE when balancetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(balancetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as balancetype, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Balances WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Business",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerid, CASE when organisationname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(organisationname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as organisationname, CASE when isfleet is NULL then 0 else isfleet end AS isfleet, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Business WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Contacts",
            "schema_name": "TollPlus",
            "id_field": "ContactID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select contactid, customerid, CASE when title is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(title, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as title, CASE when suffix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(suffix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as suffix, CASE when firstname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(firstname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as firstname, CASE when middlename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(middlename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as middlename, CASE when lastname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastname, CASE when gender is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(gender, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as gender, CASE when nametype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(nametype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as nametype, CASE when iscommunication is NULL then 0 else iscommunication end AS iscommunication, dateofbirth, CASE when firstname2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(firstname2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as firstname2, CASE when lastname2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastname2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastname2, icnid, channelid, CASE when race is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(race, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as race, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Contacts WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Flags",
            "schema_name": "TollPlus",
            "id_field": "CustomerFlagID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerflagid, customerid, customerflagreferenceid, CASE when flagvalue is NULL then 0 else flagvalue end AS flagvalue, startdate, enddate, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Flags WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Logins",
            "schema_name": "TollPlus",
            "id_field": "LoginID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select loginid, customerid, icnid, channelid, CASE when username is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(username, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as username, CASE when password is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(password, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as password, [last_logindate], [last_pwd_modifieddate], [current_pwd_expirydate], [pwd_attempts_count], CASE when pinnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pinnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pinnumber, CASE when islocked is NULL then 0 else islocked end AS islocked, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, [sq_attemptcount], [sq_lockouttime], lockouttime, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Logins WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Phones",
            "schema_name": "TollPlus",
            "id_field": "CustPhoneID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custphoneid, customerid, CASE when phonetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(phonetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as phonetype, CASE when phonenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(phonenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as phonenumber, CASE when extention is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(extention, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as extention, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when iscommunication is NULL then 0 else iscommunication end AS iscommunication, CASE when isverified is NULL then 0 else isverified end AS isverified, CASE when isbadphone is NULL then 0 else isbadphone end AS isbadphone, CASE when issolicitphone is NULL then 0 else issolicitphone end AS issolicitphone, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Phones WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Plans",
            "schema_name": "TollPlus",
            "id_field": "CustPlanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custplanid, customerid, planid, starteffectivedate, endeffectivedate, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Plans WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Trip_Charges_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripChargeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripchargeid, custtripid, amount, CASE when amountclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(amountclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as amountclass, paymentstatusid, outstandingamount, customerid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Trip_Charges_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customers",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerid, usertypeid, customerstatusid, accountstatusid, accountstatusdate, parentcustomerid, sourceofentry, revenuecategoryid, CASE when isprimary is NULL then 0 else isprimary end AS isprimary, sourcepkid, agencyid, regcustrefid, lastactivitytimestamp, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customers WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_CustomerTrips",
            "schema_name": "TollPlus",
            "id_field": "CustTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custtripid, tptripid, customerid, [entry_tolltxnid], [exit_tolltxnid], entrytripdatetime, exittripdatetime, CASE when tripidentmethod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripidentmethod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripidentmethod, CASE when tripchargetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripchargetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripchargetype, entrylaneid, entryplazaid, exitlaneid, exitplazaid, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, vehicleid, CASE when tagrefid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagrefid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagrefid, tollamount, feeamounts, discountsamount, outstandingamount, tripstageid, tripstatusid, tripstatusdate, posteddate, paymentstatusid, CASE when tagtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagtype, transactiontypeid, [rewards_discountamount], CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, disposition, pbmtollamount, avitollamount, CASE when licenseplatecountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatecountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatecountry, locationid, agencyid, netamount, CASE when tagagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagagency, CASE when isrovwaiting is NULL then 0 else isrovwaiting end AS isrovwaiting, sourceofentry, accountagencyid, [ttxn_id], CASE when isexcessivevtoll is NULL then 0 else isexcessivevtoll end AS isexcessivevtoll, CASE when transactionpostingtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionpostingtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionpostingtype, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_CustomerTrips WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Image_Review_Results",
            "schema_name": "TollPlus",
            "id_field": "ImageReviewResultID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select imagereviewresultid, sourcetransactionid, ipstransactionid, CASE when facilitycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facilitycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facilitycode, CASE when plazacode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazacode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazacode, lanecode, timestamp, vesserialnumber, disposition, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, CASE when ismanuallyreviewed is NULL then 0 else ismanuallyreviewed end AS ismanuallyreviewed, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, CASE when plateregistration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plateregistration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plateregistration, CASE when platejurisdiction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platejurisdiction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platejurisdiction, CASE when platejurisdictioncountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platejurisdictioncountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platejurisdictioncountry, sourcelanvilationid, sourcevilationid, imagecodeoff, imagereviewcount, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Image_Review_Results WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_TollRate_Dtls",
            "schema_name": "TollPlus",
            "id_field": "TollRateDtlID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tollratedtlid, tollrateid, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, CASE when lanetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanetype, tollamount, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_TollRate_Dtls WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_TollRate_Hdr",
            "schema_name": "TollPlus",
            "id_field": "TollRateHdrID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tollratehdrid, CASE when tollratename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tollratename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tollratename, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when transactionmenthod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionmenthod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionmenthod, CASE when vehicleclasstype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclasstype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclasstype, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_TollRate_Hdr WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Trips",
            "schema_name": "TollPlus",
            "id_field": "TpTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tptripid, [entry_tolltxnid], [exit_tolltxnid], entrytripdatetime, entrytripdatetimeutc, exittripdatetime, exittripdatetimeutc, CASE when tripidentmethod is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripidentmethod, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripidentmethod, CASE when tripchargetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripchargetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripchargetype, entrylaneid, entryplazaid, exitlaneid, exitplazaid, CASE when lanetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanetype, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, vehicleid, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, CASE when tagrefid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagrefid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagrefid, tollamount, receivedtollamount, feeamounts, discountsamount, outstandingamount, tripstageid, tripstatusid, tripstatusdate, posteddate, irtripid, paymentstatusid, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, sourcetripid, CASE when tagvehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagvehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagvehicleclass, CASE when tagtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagtype, transactiontypeid, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, ipstransactionid, pbmtollamount, avitollamount, originalpbmtollamount, originalavitollamount, CASE when licenseplatecountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatecountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatecountry, locationid, agencyid, CASE when disposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(disposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as disposition, receiveddate, CASE when tagagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagagency, tagagencyid, sourceofentry, accountagencyid, CASE when isimagereviewed is NULL then 0 else isimagereviewed end AS isimagereviewed, sourcetxnid, linkid, CASE when tripwith is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripwith, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripwith, CASE when isnonrevenue is NULL then 0 else isnonrevenue end AS isnonrevenue, CASE when txnrate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txnrate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txnrate, CASE when transactionpostingtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionpostingtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionpostingtype, sourceid, CASE when sourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcename, [acct_id], [ttxn_id], createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Trips WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Violated_Trip_Charges_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripChargeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripchargeid, citationid, violatorid, amount, CASE when amountclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(amountclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as amountclass, trippaymentstatusid, outstandingamount, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Violated_Trip_Charges_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Violated_Trip_Receipts_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripReceiptID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripreceiptid, citationid, violatorid, linkid, amountreceived, txndate, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, tripchargeid, invoiceid, overpaymentid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Violated_Trip_Receipts_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_ViolatedTrips",
            "schema_name": "TollPlus",
            "id_field": "CitationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select citationid, tptripid, violatorid, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, vehicleid, tollamount, feeamounts, outstandingamount, CASE when citationstage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(citationstage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as citationstage, CASE when citationtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(citationtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as citationtype, entrylaneid, exitlaneid, entryplazaid, exitplazaid, tripstageid, tripstatusid, tripstatusdate, stagemodifieddate, entrytripdatetime, exittripdatetime, paymentstatusid, transactiontypeid, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, agencyid, pbmtollamount, avitollamount, CASE when licenseplatecountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatecountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatecountry, locationid, custrefid, CASE when isimmediateflag is NULL then 0 else isimmediateflag end AS isimmediateflag, netamount, sourceofentry, accountagencyid, [acct_id], [violation_id], CASE when [violation_status] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([violation_status], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [violation_status], CASE when isexcessivevtoll is NULL then 0 else isexcessivevtoll end AS isexcessivevtoll, CASE when transactionpostingtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionpostingtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionpostingtype, CASE when iswriteoff is NULL then 0 else iswriteoff end AS iswriteoff, writeoffdate, writeoffamount, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, posteddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_ViolatedTrips WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TripStages",
            "schema_name": "TollPlus",
            "id_field": "TripStageID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripstageid, CASE when tripstagecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripstagecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripstagecode, CASE when tripstagedescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripstagedescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripstagedescription, parentstageid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TripStages WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TripStatuses",
            "schema_name": "TollPlus",
            "id_field": "TripStatusID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripstatusid, CASE when tripstatuscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripstatuscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripstatuscode, CASE when tripstatusdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripstatusdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripstatusdescription, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TripStatuses WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "NTTARawTransactions",
            "schema_name": "TranProcessing",
            "id_field": "TxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select txnid, CASE when sourcesystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcesystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcesystem, CASE when metadatarecordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(metadatarecordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as metadatarecordtype, metadatapublishtime, CASE when metadatarecordnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(metadatarecordnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as metadatarecordnumber, CASE when recordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtype, recordnumber, timestamp, CASE when facilitycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facilitycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facilitycode, CASE when plazacode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazacode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazacode, lane, logontimestamp, lanemode, revenuevehicleclass, revenueaxles, indicatedvehicleclass, indicatedaxles, forwardaxles, reverseaxles, vehiclespeed, fareamount, straddleindication, entryloopactivation, midlaneloopactivation, exitloopactivation, imagerequested, paymenttype, tagidnumber, tagagency, tagstatus, tagclass, iagtagvehicletype, iagtagvehicleaxles, iagtagvehicleweight, iagtagdualreartires, iagtagrevenuetype, iagtagcommissionflag, tagreads, violationserialnumber, vestimestamp, standbymodestatus, acmstatus, avireaderstatus, dualtiresensor, failovermodulestatus, redundantlcstatus, avcstatus, treadlestatus, scannerseparatorstatus, vesstatus, attendantterminalstatus, facilityserveravistatusdownload, facilityservertransactionupload, ups, digitaliointerface, receiptprinter, tvlbatchid, faretableid, taglowbattery, estimatedaxlecount, auxiliaryloopactivation, maintenanceoverride, CASE when rawstringdata is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rawstringdata, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rawstringdata, CASE when isunabletoparse is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(isunabletoparse, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as isunabletoparse, CASE when ismalformed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ismalformed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ismalformed, hostbosid, CASE when disposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(disposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as disposition, CASE when invoicestatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicestatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicestatus, equipmentcode, deviceinstance, statuscode, conditionstate, CASE when messagetext is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(messagetext, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as messagetext, logofftimestamp, tagtimestamp, CASE when tagstring is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagstring, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagstring, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TranProcessing.NTTARawTransactions WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TSARawTransactions",
            "schema_name": "TranProcessing",
            "id_field": "TxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select txnid, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, CASE when recordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtype, subscriberuniquetransactionid, CASE when resubmittalreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(resubmittalreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as resubmittalreason, resubmittalcount, CASE when authorityid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(authorityid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as authorityid, CASE when locationtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationtype, CASE when facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facility, CASE when subscriberid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subscriberid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subscriberid, CASE when entryinformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(entryinformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as entryinformation, CASE when plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plaza, lane, CASE when lanemode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanemode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanemode, CASE when transactiondate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiondate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiondate, CASE when transactiontime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontime, CASE when transponderid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderid, CASE when transponderstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderstatus, CASE when transpondervalidationlistfilename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transpondervalidationlistfilename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transpondervalidationlistfilename, CASE when licenseplatevalidationlistfilename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatevalidationlistfilename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatevalidationlistfilename, CASE when vehicleclassification is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclassification, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclassification, axlesexpected, axlescounted, speed, CASE when hovdesignation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hovdesignation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hovdesignation, CASE when exitbarrierorgantryinformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exitbarrierorgantryinformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exitbarrierorgantryinformation, collectorid, vaultid, CASE when vehicleclassificationfortolldetermination is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclassificationfortolldetermination, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclassificationfortolldetermination, transpondertollamount, CASE when transponderdiscounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderdiscounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderdiscounttype, discountedtranspondertollamount, videotollamountwithoutvideotollpremium, videotollamountwithvideotollpremium, CASE when videodiscounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(videodiscounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as videodiscounttype, discountedvideotollamountwithoutvideotollpremium, discountedvideotollamountwithvideotollpremium, cashtollamount, CASE when cashdiscounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cashdiscounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cashdiscounttype, discountedcashtollamount, amountpaid, CASE when unusualoccurrencecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(unusualoccurrencecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as unusualoccurrencecode, numberofimages, hostbosid, fileid, sourcepkid, CASE when ismalformed is NULL then 0 else ismalformed end AS ismalformed, CASE when isunabletoparse is NULL then 0 else isunabletoparse end AS isunabletoparse, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TranProcessing.TSARawTransactions WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TSATripAttributes",
            "schema_name": "TSA",
            "id_field": "TTpTripID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select ttptripid, tptripid, subscriberuniquetransactionid, CASE when authorityid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(authorityid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as authorityid, CASE when subscriberid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subscriberid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subscriberid, CASE when transponderid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderid, collectorid, vaultid, validtxnprimarykeyid, sourcetripid, sourcepkid, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, CASE when recordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtype, CASE when resubmittalreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(resubmittalreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as resubmittalreason, resubmittalcount, CASE when locationtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationtype, CASE when facility is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facility, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facility, CASE when entryinformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(entryinformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as entryinformation, CASE when plaza is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plaza, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plaza, lane, CASE when lanemode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanemode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanemode, CASE when transactiondate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiondate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiondate, CASE when transactiontime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontime, CASE when transponderstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderstatus, CASE when transpondervalidationlistfilename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transpondervalidationlistfilename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transpondervalidationlistfilename, CASE when licenseplatevalidationlistfilename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatevalidationlistfilename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatevalidationlistfilename, CASE when vehicleclassification is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclassification, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclassification, axlesexpected, axlescounted, speed, CASE when hovdesignation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hovdesignation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hovdesignation, CASE when exitbarrierorgantryinformation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exitbarrierorgantryinformation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exitbarrierorgantryinformation, CASE when vehicleclassificationfortolldetermination is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclassificationfortolldetermination, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclassificationfortolldetermination, transpondertollamount, CASE when transponderdiscounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderdiscounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderdiscounttype, discountedtranspondertollamount, videotollamountwithoutvideotollpremium, videotollamountwithvideotollpremium, CASE when videodiscounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(videodiscounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as videodiscounttype, discountedvideotollamountwithoutvideotollpremium, discountedvideotollamountwithvideotollpremium, cashtollamount, CASE when cashdiscounttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cashdiscounttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cashdiscounttype, discountedcashtollamount, amountpaid, CASE when unusualoccurrencecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(unusualoccurrencecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as unusualoccurrencecode, numberofimages, CASE when transactionstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactionstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactionstatus, CASE when disposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(disposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as disposition, lastvalidrecordcount, CASE when originaltransactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(originaltransactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as originaltransactiontype, postedamount, correctioncount, CASE when originalexittransactiondatetime is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(originalexittransactiondatetime, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as originalexittransactiondatetime, bmsalertdate, pbmtollamount, avitollamount, CASE when invoicestatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicestatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicestatus, CASE when rejectreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rejectreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rejectreason, basefee, variablefee, interoptransactionfee, netpayamount, CASE when subscriberidfromfile is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subscriberidfromfile, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subscriberidfromfile, calculatedvideoamtwithvideopremium, calculateddiscountedvideoamtwithvideopremium, revenuedate, createddate, updateddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TSA.TSATripAttributes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Gl_Transactions",
            "schema_name": "Finance",
            "id_field": "Gl_TxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select [gl_txnid], postingdate, [postingdate_yyyymm], customerid, txntypeid, businessprocessid, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, txndate, txnamount, CASE when iscontra is NULL then 0 else iscontra end AS iscontra, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when requestid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(requestid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as requestid, businessunitid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.Gl_Transactions WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Gl_Txn_LineItems",
            "schema_name": "Finance",
            "id_field": "PK_ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select [pk_id], [gl_txnid], CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, chartofaccountid, debitamount, creditamount, specialjournalid, CASE when [drcr_flag] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([drcr_flag], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [drcr_flag], [txntype_li_id], txntypeid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.Gl_Txn_LineItems WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "GlDailySummaryByCoaIDBuID",
            "schema_name": "Finance",
            "id_field": "ChartOfAccountID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select dailysummaryid, chartofaccountid, businessunitid, beginningbal, debittxnamount, credittxnamount, endingbal, posteddate, CASE when fiscalyearname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(fiscalyearname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as fiscalyearname, jobrundate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.GlDailySummaryByCoaIDBuID WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnTypes",
            "schema_name": "Finance",
            "id_field": "TxnTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select txntypeid, CASE when txntype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txntype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txntype, CASE when txndesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txndesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txndesc, [txntype_categoryid], CASE when statementnote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statementnote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statementnote, CASE when customernote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(customernote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as customernote, CASE when violatornote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(violatornote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as violatornote, isautomatic, adjustmentcategoryid, levelid, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when levelcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(levelcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as levelcode, businessunitid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.TxnTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Vehicles",
            "schema_name": "TollPlus",
            "id_field": "VehicleID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vehicleid, customerid, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclecountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclecountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclecountry, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, year, CASE when make is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(make, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as make, CASE when model is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(model, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as model, CASE when color is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(color, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as color, starteffectivedate, endeffectivedate, vehiclestatusid, CASE when vehicleclasscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclasscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclasscode, CASE when vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vin, CASE when isprotected is NULL then 0 else isprotected end AS isprotected, CASE when isexempted is NULL then 0 else isexempted end AS isexempted, CASE when istempnumber is NULL then 0 else istempnumber end AS istempnumber, CASE when tagid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagid, contractualtypeid, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, CASE when vehicleshape is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleshape, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleshape, CASE when fuelefficiency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(fuelefficiency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as fuelefficiency, CASE when ishamradiooperator is NULL then 0 else ishamradiooperator end AS ishamradiooperator, CASE when istrailer is NULL then 0 else istrailer end AS istrailer, CASE when licenseplateimagepath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplateimagepath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplateimagepath, CASE when departmentname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(departmentname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as departmentname, CASE when excessivevtolls is NULL then 0 else excessivevtolls end AS excessivevtolls, CASE when isinhv is NULL then 0 else isinhv end AS isinhv, CASE when isvrh is NULL then 0 else isvrh end AS isvrh, CASE when docno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(docno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as docno, CASE when vehiclebodyvin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclebodyvin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclebodyvin, CASE when county is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(county, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as county, CASE when [temp_source] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([temp_source], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [temp_source], [temp_pk], [temp_key], channelid, icnid, CASE when isvtollenabled is NULL then 0 else isvtollenabled end AS isvtollenabled, filepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Vehicles WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Invoice_Charges_Tracker",
            "schema_name": "TollPlus",
            "id_field": "InvoiceChargeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select invoicechargeid, invoiceid, CASE when invbatchid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invbatchid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invbatchid, amount, CASE when feecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(feecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as feecode, paymentstatusid, outstandingamount, CASE when iswriteoff is NULL then 0 else iswriteoff end AS iswriteoff, icnid, writeoffdate, writeoffamount, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Invoice_Charges_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Invoice_Header",
            "schema_name": "TollPlus",
            "id_field": "InvoiceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select invoiceid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, masterinvoiceid, invoicedate, duedate, startperiod, endperiod, customerid, vehicleid, stagestepid, previousdue, totalamount, amountpaid, balancedue, CASE when invoicestatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicestatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicestatus, currentcharges, adjustedamount, CASE when isviolator is NULL then 0 else isviolator end AS isviolator, CASE when invbatchid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invbatchid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invbatchid, CASE when [inv_file_path] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([inv_file_path], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [inv_file_path], unbilledamt, overpmtamt, servicetax, CASE when is_hold is NULL then 0 else is_hold end AS is_hold, ispdfgenerated, agencyid, graceperioddate, mailingdate, agestageid, currentchargestoll, currentchargesfee, nonpaymentfee, invoiceadjamt, CASE when invoiceaccountstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoiceaccountstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoiceaccountstatus, previousduestartperiod, previousdueendperiod, mailreturndate, CASE when isdiscountprocessed is NULL then 0 else isdiscountprocessed end AS isdiscountprocessed, unpaidtripcnt, collectionstatus, sourceid, CASE when sourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcename, unpaidtripamount, CASE when sourcewriteoff is NULL then 0 else sourcewriteoff end AS sourcewriteoff, channelid, icnid, CASE when citationstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(citationstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as citationstatus, secntvdate, CASE when sourceinvoicestatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourceinvoicestatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourceinvoicestatus, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Invoice_Header WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Invoice_LineItems",
            "schema_name": "TollPlus",
            "id_field": "InvLineItemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select invlineitemid, invoiceid, linkid, CASE when custtxncategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(custtxncategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as custtxncategory, CASE when txntype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txntype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txntype, CASE when [stmt_literal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([stmt_literal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [stmt_literal], amount, CASE when subsystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystem, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, txndate, CASE when referenceinvoiceid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(referenceinvoiceid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as referenceinvoiceid, CASE when sourceviolationstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourceviolationstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourceviolationstatus, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Invoice_LineItems WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Mbsheader",
            "schema_name": "TollPlus",
            "id_field": "MbsID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select mbsid, mbsgenerateddate, CASE when ispresentmbs is NULL then 0 else ispresentmbs end AS ispresentmbs, startperiod, endperiod, duedate, customerid, vehicleid, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, previousdue, amountpaid, adjustments, currentchargestoll, currentchargesfee, totalamount, CASE when plateimagepath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plateimagepath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plateimagepath, CASE when pdfpath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pdfpath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pdfpath, mailingdate, mailreturndate, emaileddate, emailreturndate, newduedate, sourcepkid, mbsstatusid, CASE when qacategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(qacategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as qacategory, platefilepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Mbsheader WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MbsInvoices",
            "schema_name": "TollPlus",
            "id_field": "MbsInvoicesID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select mbsinvoicesid, mbsid, invoiceid, agestageid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, invaddedreasonid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.MbsInvoices WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Invoice_Receipts_Tracker",
            "schema_name": "TollPlus",
            "id_field": "ReceiptID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select receiptid, invoiceid, [invoice_chargeid], CASE when invbatchid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invbatchid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invbatchid, amountreceived, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, txndate, overpaymentid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Invoice_Receipts_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Tags",
            "schema_name": "TollPlus",
            "id_field": "CustTagID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custtagid, customerid, tagstartdate, tagenddate, CASE when tagtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagtype, CASE when tagstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagstatus, CASE when tagalias is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagalias, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagalias, CASE when hextagid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hextagid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hextagid, CASE when serialno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(serialno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as serialno, CASE when returnedorassignedtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(returnedorassignedtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as returnedorassignedtype, CASE when itemcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(itemcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as itemcode, CASE when isnonrevenue is NULL then 0 else isnonrevenue end AS isnonrevenue, CASE when isgroundtransportation is NULL then 0 else isgroundtransportation end AS isgroundtransportation, CASE when tagagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagagency, CASE when specialitytag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(specialitytag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as specialitytag, CASE when mounting is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mounting, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mounting, CASE when isdfwblocked is NULL then 0 else isdfwblocked end AS isdfwblocked, CASE when isdalblocked is NULL then 0 else isdalblocked end AS isdalblocked, tagassigneddate, tagstatusdate, channelid, icnid, tagassignedenddate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Tags WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_AppLication_Parameters",
            "schema_name": "TollPlus",
            "id_field": "ParameterID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select parameterid, CASE when parameterkey is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parameterkey, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parameterkey, CASE when parametername is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parametername, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parametername, CASE when parametervalue is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parametervalue, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parametervalue, CASE when parameterdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parameterdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parameterdesc, CASE when measurementdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(measurementdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as measurementdesc, CASE when configtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(configtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as configtype, CASE when departmenttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(departmenttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as departmenttype, CASE when datatype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(datatype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as datatype, minlength, maxlength, CASE when allowedsplchars is NULL then 0 else allowedsplchars end AS allowedsplchars, CASE when isspaceallowed is NULL then 0 else isspaceallowed end AS isspaceallowed, CASE when regularexp is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(regularexp, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as regularexp, starteffectivedate, endeffectivedate, CASE when iseditable is NULL then 0 else iseditable end AS iseditable, channelid, icnid, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_AppLication_Parameters WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ViolatorCollectionsOutbound",
            "schema_name": "TER",
            "id_field": "VioCollOutboundID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select viocolloutboundid, fileid, CASE when recordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtype, violatorid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, mbsid, CASE when firstname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(firstname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as firstname, CASE when lastname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastname, CASE when address1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(address1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as address1, CASE when address2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(address2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as address2, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when zipcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zipcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zipcode, CASE when mobilephonenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mobilephonenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mobilephonenumber, CASE when workphonenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(workphonenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as workphonenumber, invoiceamount, tollamount, feeamount, paymentorcreditadjustment, reversalorcharge, totalamountdue, CASE when nsfindicator is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(nsfindicator, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as nsfindicator, nsfdate, zcinvoicedate, firstnnpdate, secondnnpdate, thirdnnpdate, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when vehiclemake is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemake, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemake, CASE when vehiclemodel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemodel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemodel, CASE when vehiclecolor is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclecolor, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclecolor, vehicleyear, CASE when hastsatransactions is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hastsatransactions, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hastsatransactions, CASE when rentalcarindicator is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rentalcarindicator, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rentalcarindicator, recalldate, lastactivityoninvoice, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.ViolatorCollectionsOutbound WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PaymentTxn_LineItems",
            "schema_name": "Finance",
            "id_field": "LineItemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select lineitemid, paymentid, CASE when apptxntypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(apptxntypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as apptxntypecode, lineitemamount, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, customerid, paymentdate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.PaymentTxn_LineItems WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PaymentTxns",
            "schema_name": "Finance",
            "id_field": "PaymentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentid, paymentdate, CASE when voucherno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(voucherno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as voucherno, CASE when subsystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystem, paymentmodeid, CASE when intiatedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(intiatedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as intiatedby, CASE when activitytype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(activitytype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as activitytype, CASE when statementnote is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statementnote, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statementnote, txnamount, paymentstatusid, refpaymentid, CASE when reftype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reftype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reftype, sourcepkid, accountstatusid, CASE when approvedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(approvedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as approvedby, channelid, locationid, sourceofentry, CASE when reasontext is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasontext, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasontext, icnid, CASE when isvirtualcheck is NULL then 0 else isvirtualcheck end AS isvirtualcheck, CASE when pmttxntype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pmttxntype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pmttxntype, sourcepmtid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.PaymentTxns WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "SubSystems",
            "schema_name": "TollPlus",
            "id_field": "SubSystemID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select subsystemid, CASE when subsystemname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystemname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystemname, CASE when subsystemcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystemcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystemcode, CASE when subsystemdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystemdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystemdescription, parentsubsystemid, CASE when iswebdisplay is NULL then 0 else iswebdisplay end AS iswebdisplay, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.SubSystems WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "AppTxnTypes",
            "schema_name": "TollPlus",
            "id_field": "AppTxnTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select apptxntypeid, CASE when apptxntypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(apptxntypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as apptxntypecode, CASE when apptxntypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(apptxntypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as apptxntypedesc, CASE when [effected_balancetype_positive] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([effected_balancetype_positive], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [effected_balancetype_positive], CASE when [effected_balancetype_negative] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([effected_balancetype_negative], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [effected_balancetype_negative], CASE when [main_balance_type] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([main_balance_type], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [main_balance_type], [txntype_categoryid], createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.AppTxnTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Trip_Receipts_Tracker",
            "schema_name": "TollPlus",
            "id_field": "TripReceiptID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripreceiptid, customerid, linkid, amountreceived, txndate, custtripid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, tripchargeid, invoiceid, overpaymentid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Trip_Receipts_Tracker WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "RefundRequests_Queue",
            "schema_name": "Finance",
            "id_field": "RefundRequestID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select refundrequestid, exceptionrrid, customerid, CASE when refundrequeststate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(refundrequeststate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as refundrequeststate, CASE when refundrequesttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(refundrequesttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as refundrequesttype, CASE when subsystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystem, txntypeid, paytypeid, originalpaytypeid, amount, paymenttxnid, requesteddate, processeddate, CASE when reason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reason, approveddate, CASE when approvedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(approvedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as approvedby, retrycnt, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.RefundRequests_Queue WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnType_Categories",
            "schema_name": "TollPlus",
            "id_field": "CategoryID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select categoryid, CASE when categoryname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(categoryname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as categoryname, CASE when categorydesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(categorydesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as categorydesc, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, [parent_categoryid], createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TxnType_Categories WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_Customer_Vehicle_Tags",
            "schema_name": "TollPlus",
            "id_field": "VehicleTagID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vehicletagid, vehicleid, custtagid, CASE when isblocklisted is NULL then 0 else isblocklisted end AS isblocklisted, starteffectivedate, endeffectivedate, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Vehicle_Tags WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TP_CustTxns",
            "schema_name": "TollPlus",
            "id_field": "CustTxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custtxnid, customerid, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, txnamount, posteddate, vehicleid, CASE when apptxntypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(apptxntypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as apptxntypecode, CASE when businessprocesscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(businessprocesscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as businessprocesscode, CASE when [stmt_literal] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([stmt_literal], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [stmt_literal], CASE when custtxncategory is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(custtxncategory, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as custtxncategory, previousbalance, currentbalance, CASE when subsystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystem, CASE when locationname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationname, CASE when balancetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(balancetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as balancetype, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_CustTxns WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BusinessProcesses",
            "schema_name": "Finance",
            "id_field": "BusinessProcessID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select businessprocessid, CASE when businessprocesscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(businessprocesscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as businessprocesscode, CASE when businessprocessdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(businessprocessdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as businessprocessdescription, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when isavailable is NULL then 0 else isavailable end AS isavailable, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.BusinessProcesses WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ChartOfAccounts",
            "schema_name": "Finance",
            "id_field": "ChartOfAccountID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select [surrogate_coaid], chartofaccountid, CASE when accountname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(accountname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as accountname, parentchartofaccountid, CASE when agcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agcode, CASE when asgcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(asgcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as asgcode, lowerbound, upperbound, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when iscontrolaccount is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(iscontrolaccount, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as iscontrolaccount, CASE when normalbalancetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(normalbalancetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as normalbalancetype, legalaccountid, CASE when agencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencycode, starteffectivedate, endeffectivedate, CASE when comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as comments, CASE when isdeleted is NULL then 0 else isdeleted end AS isdeleted, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.ChartOfAccounts WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ZipCodes",
            "schema_name": "TollPlus",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when zipcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zipcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zipcode, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when county is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(county, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as county, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when txdotid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txdotid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txdotid, CASE when isadminhearing is NULL then 0 else isadminhearing end AS isadminhearing, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.ZipCodes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BusinessProcess_TxnTypes_Associations",
            "schema_name": "Finance",
            "id_field": "TxnAssociationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select txnassociationid, businessprocessid, txntypeid, CASE when txncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txncode, chartofaccountid, CASE when lineitemcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lineitemcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lineitemcode, CASE when source is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(source, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as source, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.BusinessProcess_TxnTypes_Associations WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_TollTxn_ReasonCodes",
            "schema_name": "TollPlus",
            "id_field": "ReasonCodeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select reasoncodeid, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, CASE when reasondesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasondesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasondesc, CASE when reasontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasontype, CASE when autoaccepted is NULL then 0 else autoaccepted end AS autoaccepted, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, CASE when isreprocessingallowed is NULL then 0 else isreprocessingallowed end AS isreprocessingallowed, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_TollTxn_ReasonCodes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "DPSTrooper",
            "schema_name": "TER",
            "id_field": "DPSTrooperID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select dpstrooperid, CASE when firstname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(firstname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as firstname, CASE when lastname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastname, CASE when area is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(area, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as area, CASE when district is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(district, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as district, CASE when idnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(idnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as idnumber, CASE when region is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(region, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as region, channelid, icnid, CASE when troopersignatureimage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(troopersignatureimage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as troopersignatureimage, CASE when isactive is NULL then 0 else isactive end AS isactive, filepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.DPSTrooper WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TollAdjustments",
            "schema_name": "Finance",
            "id_field": "TollAdjustmentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tolladjustmentid, CASE when adjustmenttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adjustmenttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adjustmenttype, CASE when adjustmenttypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adjustmenttypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adjustmenttypedesc, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when parentadjustmenttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parentadjustmenttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parentadjustmenttype, CASE when parentadjustmenttypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parentadjustmenttypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parentadjustmenttypedesc, CASE when isntta is NULL then 0 else isntta end AS isntta, CASE when istsa is NULL then 0 else istsa end AS istsa, CASE when isdalordfw is NULL then 0 else isdalordfw end AS isdalordfw, CASE when isiop is NULL then 0 else isiop end AS isiop, CASE when isiopawayntta is NULL then 0 else isiopawayntta end AS isiopawayntta, CASE when isiopawaytsa is NULL then 0 else isiopawaytsa end AS isiopawaytsa, CASE when isonlyinbound is NULL then 0 else isonlyinbound end AS isonlyinbound, CASE when isonlythroughcase is NULL then 0 else isonlythroughcase end AS isonlythroughcase, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.TollAdjustments WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Customer_Tags_History",
            "schema_name": "TollPlus",
            "id_field": "HistID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custtagid, customerid, tagstartdate, tagenddate, CASE when tagtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagtype, CASE when tagstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagstatus, CASE when tagalias is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagalias, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagalias, CASE when hextagid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hextagid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hextagid, CASE when serialno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(serialno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as serialno, histid, CASE when action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as action, CASE when returnedorassignedtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(returnedorassignedtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as returnedorassignedtype, CASE when itemcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(itemcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as itemcode, CASE when isnonrevenue is NULL then 0 else isnonrevenue end AS isnonrevenue, CASE when isgroundtransportation is NULL then 0 else isgroundtransportation end AS isgroundtransportation, CASE when tagagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagagency, CASE when specialitytag is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(specialitytag, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as specialitytag, CASE when mounting is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mounting, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mounting, CASE when isdfwblocked_dropping is NULL then 0 else isdfwblocked_dropping end AS isdfwblocked_dropping, CASE when isdalblocked_dropping is NULL then 0 else isdalblocked_dropping end AS isdalblocked_dropping, icnid, tagassigneddate, tagstatusdate, channelid, tagassignedenddate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Tags_History WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "CustomerNotificationQueue",
            "schema_name": "Notifications",
            "id_field": "CustomerNotificationQueueID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customernotificationqueueid, configalerttypealertchannelid, customerid, custcorrespondlogid, CASE when jsondatakey is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(jsondatakey, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as jsondatakey, CASE when jsondatacommon is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(jsondatacommon, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as jsondatacommon, notifstatus, parentcustomernotificationqueueid, requesteddate, linkid, CASE when linksource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksource, fileid, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, CASE when mbsreprint is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mbsreprint, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mbsreprint, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Notifications.CustomerNotificationQueue WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Customer_Internal_Users",
            "schema_name": "TollPlus",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select customerid, usertypeid, CASE when username is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(username, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as username, CASE when password is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(password, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as password, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when isdomainaccount is NULL then 0 else isdomainaccount end AS isdomainaccount, CASE when themes is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(themes, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as themes, CASE when languages is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(languages, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as languages, [last_logindate], [last_pwd_modifieddate], [current_pwd_expirydate], [pwd_attempts_count], CASE when islocked is NULL then 0 else islocked end AS islocked, lockouttime, CASE when locationcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationcode, CASE when employeeid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(employeeid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as employeeid, starteffectivedate, endeffectivedate, terminateddate, CASE when isloginverificationrequired is NULL then 0 else isloginverificationrequired end AS isloginverificationrequired, CASE when emailaddress is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(emailaddress, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as emailaddress, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Internal_Users WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "AdminHearing",
            "schema_name": "Court",
            "id_field": "AdminHearingID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select adminhearingid, hvid, vioaffidavitid, judgeid, CASE when causeno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(causeno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as causeno, hvstatuslookupid, hearingdate, countyid, requesteddate, CASE when hearingreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hearingreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hearingreason, CASE when comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as comments, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Court.AdminHearing WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "BanActions",
            "schema_name": "TER",
            "id_field": "BanActionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select banactionid, vehiclebanid, CASE when banaction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(banaction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as banaction, issueddate, CASE when issuedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(issuedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as issuedby, linkid, CASE when linksource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksource, CASE when fileupload is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(fileupload, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as fileupload, filepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.BanActions WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Violation_Workflow",
            "schema_name": "TollPlus",
            "id_field": "WorkflowID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select workflowid, CASE when stage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stage, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when type is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(type, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as type, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when ismanualchangesallowed is NULL then 0 else ismanualchangesallowed end AS ismanualchangesallowed, CASE when isavailbleforuse is NULL then 0 else isavailbleforuse end AS isavailbleforuse, CASE when templatename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(templatename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as templatename, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Violation_Workflow WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "HabitualViolators",
            "schema_name": "TER",
            "id_field": "HVID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select hvid, violatorid, hvseq, CASE when hvenabled is NULL then 0 else hvenabled end AS hvenabled, vehicleid, CASE when affidavittype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(affidavittype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as affidavittype, CASE when ishold is NULL then 0 else ishold end AS ishold, hvdesignationdate, hvterminationdate, CASE when hvterminationreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hvterminationreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hvterminationreason, hvfirstqualifiedtrandate, hvlastqualifiedtrandate, hvqualifiedtrancount, hvqualifiedamountdue, hvqualifiedtollsdue, hvqualifiedfeesdue, hvqualifiedpenalitiesdue, totalamountdue, totaltollsdue, totalfeesdue, totaltrancount, totalcitationcount, CASE when adminhearingcounty is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adminhearingcounty, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adminhearingcounty, CASE when vehicleregistrationcounty is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleregistrationcounty, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleregistrationcounty, CASE when rovaddresscounty is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rovaddresscounty, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rovaddresscounty, jobrundate, CASE when currentstatuscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(currentstatuscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as currentstatuscode, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.HabitualViolators WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VRBRequestDMV",
            "schema_name": "TER",
            "id_field": "VRBRequestDMVID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vrbrequestdmvid, vrbid, fileid, CASE when county is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(county, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as county, CASE when vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vin, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when documentnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(documentnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as documentnumber, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VRBRequestDMV WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "UnRegisteredCustomersMbsSchedules",
            "schema_name": "TollPlus",
            "id_field": "UnRegMbsScheduleID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select unregmbsscheduleid, customerid, vehicleid, nextscheduledate, lastmbsid, CASE when licenseplatenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licenseplatenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licenseplatenumber, CASE when statecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statecode, CASE when mbsgenstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mbsgenstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mbsgenstatus, retryattempts, scheduleddate, agencyid, CASE when isimmediateflag is NULL then 0 else isimmediateflag end AS isimmediateflag, CASE when isloadbalance is NULL then 0 else isloadbalance end AS isloadbalance, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.UnRegisteredCustomersMbsSchedules WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "PaymentPlanViolator",
            "schema_name": "TER",
            "id_field": "PaymentPlanViolatorID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentplanviolatorid, violatorid, hvid, paymentplanid, paymentplanviolatorseq, CASE when hvflag is NULL then 0 else hvflag end AS hvflag, mbsid, ppcustomerid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.PaymentPlanViolator WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Vehicle_Models",
            "schema_name": "TollPlus",
            "id_field": "VehicleModelID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vehiclemodelid, CASE when make is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(make, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as make, CASE when model is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(model, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as model, CASE when modeldesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(modeldesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as modeldesc, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, CASE when makedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(makedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as makedesc, CASE when recommendedtagtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recommendedtagtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recommendedtagtype, CASE when mounting is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mounting, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mounting, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Vehicle_Models WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ConfigAlertTypeAlertChannels",
            "schema_name": "Notifications",
            "id_field": "ConfigAlertTypeAlertChannelID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select configalerttypealertchannelid, alerttypeid, alertchannelid, templateid, CASE when templatequery is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(templatequery, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as templatequery, sender, CASE when isactive is NULL then 0 else isactive end AS isactive, chargetocustomer, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, orderno, CASE when sourcetable is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcetable, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcetable, CASE when textmessage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(textmessage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as textmessage, channelid, icnid, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Notifications.ConfigAlertTypeAlertChannels WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VehicleBanRequest",
            "schema_name": "TER",
            "id_field": "VehicleBanRequestID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vehiclebanrequestid, fileid, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, vehicleyear, CASE when vehiclemake is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemake, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemake, CASE when vehiclemodel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemodel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemodel, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, vehiclebanid, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VehicleBanRequest WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "CollectionsOutboundUpdatePaymentPlan",
            "schema_name": "TER",
            "id_field": "VioCollOutboundPayPlanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select viocolloutboundpayplanid, fileid, violatorid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, CASE when planid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(planid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as planid, plandate, CASE when planstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(planstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as planstatus, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.CollectionsOutboundUpdatePaymentPlan WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ViolatorCollectionsInbound",
            "schema_name": "TER",
            "id_field": "VioCollInboundID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select viocollinboundid, fileid, violatorid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, transactionamount, balaftertransaction, transactiondate, CASE when reason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reason, CASE when paymentreferenceid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(paymentreferenceid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as paymentreferenceid, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when error is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(error, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as error, paymentid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.ViolatorCollectionsInbound WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "IOPTagAgencyMapping",
            "schema_name": "TollPlus",
            "id_field": "TID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when nttatagagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(nttatagagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as nttatagagencyid, CASE when ioptagagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ioptagagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ioptagagencyid, CASE when homeagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(homeagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as homeagencyid, CASE when internaltagprefix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(internaltagprefix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as internaltagprefix, CASE when hubid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hubid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hubid, CASE when iophomeagencyid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(iophomeagencyid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as iophomeagencyid, tid, CASE when hextagid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hextagid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hextagid, CASE when agency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agency, CASE when agencyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencyname, CASE when ishomeagency is NULL then 0 else ishomeagency end AS ishomeagency, CASE when isdisplayfromapplication is NULL then 0 else isdisplayfromapplication end AS isdisplayfromapplication, isexitdatetimewithtz, CASE when imiparentagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(imiparentagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as imiparentagency, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.IOPTagAgencyMapping WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "DMVResponse",
            "schema_name": "TollPlus",
            "id_field": "DMVResponseID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select dmvresponseid, fileid, CASE when [original_input_request] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([original_input_request], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [original_input_request], CASE when currentlicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(currentlicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as currentlicense, CASE when plateageyears is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plateageyears, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plateageyears, CASE when [reg_classcode] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([reg_classcode], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [reg_classcode], CASE when [plate_type_description] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([plate_type_description], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [plate_type_description], CASE when countyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(countyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as countyname, vehicleyear, CASE when vehiclemake is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemake, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemake, CASE when [vehicle_body_style] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([vehicle_body_style], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [vehicle_body_style], CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, CASE when previousowner is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(previousowner, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as previousowner, CASE when [ownername_line1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ownername_line1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ownername_line1], CASE when [ownername_line2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([ownername_line2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [ownername_line2], CASE when [owneraddress_line1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([owneraddress_line1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [owneraddress_line1], CASE when [owneraddress_line2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([owneraddress_line2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [owneraddress_line2], CASE when ownercity is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ownercity, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ownercity, CASE when ownerstate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ownerstate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ownerstate, CASE when ownerzip is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ownerzip, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ownerzip, [expiration_mm], [expiration_yyyy], [previous_expiration_yyyy], CASE when vehiclemodel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemodel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemodel, [registration_issuedate], [vehicle_solddate], receiveddate, endeffectivedate, CASE when inputlicensenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(inputlicensenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as inputlicensenumber, CASE when vehiclevin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclevin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclevin, CASE when vehiclebodyvin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclebodyvin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclebodyvin, CASE when stickernumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stickernumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stickernumber, CASE when previouslicense is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(previouslicense, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as previouslicense, CASE when [renew_receipt_name] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_name], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_name], CASE when [renew_receipt_addr_line1] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_addr_line1], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_addr_line1], CASE when [renew_receipt_addr_line2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_addr_line2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_addr_line2], CASE when [renew_receipt_addr_city] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_addr_city], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_addr_city], CASE when [renew_receipt_addr_state] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_addr_state], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_addr_state], CASE when [renew_receipt_addr_zip] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_addr_zip], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_addr_zip], CASE when [rts_titlenumber] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([rts_titlenumber], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [rts_titlenumber], [rts_titledate], surrenerdate, CASE when [vehicle_location_addr] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([vehicle_location_addr], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [vehicle_location_addr], CASE when [vehicle_location_addr2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([vehicle_location_addr2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [vehicle_location_addr2], CASE when [vehicle_location_city] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([vehicle_location_city], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [vehicle_location_city], CASE when [vehicle_location_state] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([vehicle_location_state], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [vehicle_location_state], CASE when [vehicle_location_zip] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([vehicle_location_zip], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [vehicle_location_zip], CASE when [primary_color_code] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([primary_color_code], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [primary_color_code], CASE when [primary_color] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([primary_color], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [primary_color], CASE when [secondary_color_code] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([secondary_color_code], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [secondary_color_code], CASE when [secondary_color] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([secondary_color], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [secondary_color], CASE when [unused_extra_space] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([unused_extra_space], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [unused_extra_space], CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when ownerzip2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ownerzip2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ownerzip2, CASE when [renew_receipt_addr_zip2] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([renew_receipt_addr_zip2], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [renew_receipt_addr_zip2], CASE when [owner_middlename] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([owner_middlename], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [owner_middlename], CASE when [owner_suffix] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([owner_suffix], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [owner_suffix], regexpirationdate, CASE when providername is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(providername, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as providername, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.DMVResponse WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ViolatorCollectionsOutboundStatus",
            "schema_name": "TER",
            "id_field": "VioCollOutboundStatusUpdateID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select viocolloutboundstatusupdateid, fileid, susrelfileid, violatorid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when reason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reason, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.ViolatorCollectionsOutboundStatus WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "NTTAHostBOSFileTracker",
            "schema_name": "TranProcessing",
            "id_field": "ID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select id, publishtime, CASE when sourcesystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcesystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcesystem, CASE when recordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtype, CASE when recordfilename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordfilename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordfilename, CASE when filepath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filepath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filepath, CASE when ismalformed is NULL then 0 else ismalformed end AS ismalformed, CASE when reason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reason, CASE when recordmessage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordmessage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordmessage, createddate, updateddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TranProcessing.NTTAHostBOSFileTracker WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "AddressSources",
            "schema_name": "TollPlus",
            "id_field": "AddressSourceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select addresssourceid, CASE when addresssourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addresssourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addresssourcename, priorityorder, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when isdisplay is NULL then 0 else isdisplay end AS isdisplay, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.AddressSources WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TexasCounties",
            "schema_name": "TollPlus",
            "id_field": "CountyID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select countyid, CASE when countyno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(countyno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as countyno, CASE when countyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(countyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as countyname, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TexasCounties WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VRBAgencyLookup",
            "schema_name": "TER",
            "id_field": "VRBAgencyLookupID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vrbagencylookupid, CASE when vrbagencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vrbagencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vrbagencycode, CASE when vrbagencydesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vrbagencydesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vrbagencydesc, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VRBAgencyLookup WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "CollectionAgencies",
            "schema_name": "TER",
            "id_field": "CollAgencyID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select collagencyid, CASE when collagencyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(collagencyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as collagencyname, CASE when collagencydesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(collagencydesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as collagencydesc, CASE when collagencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(collagencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as collagencycode, CASE when isprimaryagency is NULL then 0 else isprimaryagency end AS isprimaryagency, parentcollagencyid, CASE when isactive is NULL then 0 else isactive end AS isactive, mindueamount, maxdueamount, maxnewaccounts, CASE when displayname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(displayname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as displayname, customervolume, CASE when isnewaccountprocessed is NULL then 0 else isnewaccountprocessed end AS isnewaccountprocessed, CASE when ispayenabled is NULL then 0 else ispayenabled end AS ispayenabled, CASE when isundoenabled is NULL then 0 else isundoenabled end AS isundoenabled, newaccountpreference, amountvolume, collectionfee, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.CollectionAgencies WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "CustNotifQueueTracker",
            "schema_name": "Notifications",
            "id_field": "CustNotifQueueTrackerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custnotifqueuetrackerid, customernotificationqueueid, notifstatus, processeddatetime, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Notifications.CustNotifQueueTracker WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "AlertTypes",
            "schema_name": "Notifications",
            "id_field": "AlertTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select alerttypeid, CASE when alerttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(alerttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as alerttype, CASE when alerttypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(alerttypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as alerttypedesc, CASE when configurableflag is NULL then 0 else configurableflag end AS configurableflag, [parent_alerttypeid], CASE when ispaybymail is NULL then 0 else ispaybymail end AS ispaybymail, CASE when ispostpaid is NULL then 0 else ispostpaid end AS ispostpaid, CASE when isprepaid is NULL then 0 else isprepaid end AS isprepaid, transmissiontype, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when seedlist is NULL then 0 else seedlist end AS seedlist, CASE when ismobilewebsite is NULL then 0 else ismobilewebsite end AS ismobilewebsite, channelid, icnid, CASE when groupname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(groupname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as groupname, CASE when isportaldisplay is NULL then 0 else isportaldisplay end AS isportaldisplay, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Notifications.AlertTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Ref_FeeTypes",
            "schema_name": "TollPlus",
            "id_field": "FeeTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select feetypeid, CASE when feename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(feename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as feename, CASE when feecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(feecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as feecode, CASE when feedescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(feedescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as feedescription, CASE when feefactor is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(feefactor, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as feefactor, amount, starteffectivedate, endeffectivedate, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when appliedon_accountcreation is NULL then 0 else appliedon_accountcreation end AS appliedon_accountcreation, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Ref_FeeTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VRBRejectLookup",
            "schema_name": "TER",
            "id_field": "VRBRejectLookupID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vrbrejectlookupid, CASE when vrbrejectcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vrbrejectcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vrbrejectcode, CASE when vrbrejectdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vrbrejectdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vrbrejectdesc, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VRBRejectLookup WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Plaza_Types",
            "schema_name": "TollPlus",
            "id_field": "PlazaTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select plazatypeid, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when note is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(note, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as note, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Plaza_Types WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VehicleBan",
            "schema_name": "TER",
            "id_field": "VehicleBanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vehiclebanid, hvid, CASE when isactive is NULL then 0 else isactive end AS isactive, vblookupid, actiondate, sourcepkid, removallookupid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VehicleBan WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Customer_Activities",
            "schema_name": "TollPlus",
            "id_field": "ActivityID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select activityid, customerid, activitydate, CASE when activitytype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(activitytype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as activitytype, CASE when activitytext is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(activitytext, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as activitytext, CASE when performedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(performedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as performedby, CASE when subsystem is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsystem, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsystem, CASE when activitysource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(activitysource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as activitysource, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when userlocation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(userlocation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as userlocation, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when tagid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagid, CASE when tagagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tagagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tagagency, icnid, outboundcommunicationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Activities WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "DPSBanActions",
            "schema_name": "TER",
            "id_field": "DPSBanActionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select dpsbanactionid, CASE when dpsaction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dpsaction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dpsaction, issuedate, CASE when location is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(location, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as location, CASE when troopername is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(troopername, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as troopername, CASE when trooperradionum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(trooperradionum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as trooperradionum, CASE when alpraction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(alpraction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as alpraction, CASE when notifiedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(notifiedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as notifiedby, vehiclebanid, CASE when milemarker is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(milemarker, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as milemarker, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.DPSBanActions WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "FailureToPayCitations",
            "schema_name": "TER",
            "id_field": "FailureCitationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select failurecitationid, courtid, judgeid, violatorid, courtappearancedate, dpstrooperid, maildate, printdate, CASE when citationnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(citationnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as citationnumber, CASE when nttarepresentative is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(nttarepresentative, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as nttarepresentative, referencetripid, hvstatuslookupid, cdltype, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when dpscitationnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dpscitationnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dpscitationnumber, custresponselookupid, CASE when dismissalreasondesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dismissalreasondesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dismissalreasondesc, dpscitationissueddate, CASE when casenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(casenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as casenumber, sourcepkid, CASE when isprimaryowner is NULL then 0 else isprimaryowner end AS isprimaryowner, notaryofficerid, citationinvoiceid, agestageid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.FailureToPayCitations WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "CitationNumberSequence",
            "schema_name": "TER",
            "id_field": "SequenceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select sequenceid, failurecitationid, CASE when sequence is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sequence, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sequence, CASE when isconsumed is NULL then 0 else isconsumed end AS isconsumed, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.CitationNumberSequence WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Transaction_Types",
            "schema_name": "TollPlus",
            "id_field": "TransactionTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select transactiontypeid, CASE when transactiontcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontcode, CASE when transactiontdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontdesc, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Transaction_Types WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "MbsProcessStatus",
            "schema_name": "TollPlus",
            "id_field": "MbsProcessStatusID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select mbsprocessstatusid, CASE when mbsprocesscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mbsprocesscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mbsprocesscode, CASE when mbsprocessstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mbsprocessstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mbsprocessstatus, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when processdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(processdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as processdescription, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.MbsProcessStatus WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "BankruptcyStatuses",
            "schema_name": "TollPlus",
            "id_field": "BankruptcyStatusID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select bankruptcystatusid, CASE when bankruptcystatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(bankruptcystatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as bankruptcystatus, CASE when bankruptcystatusdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(bankruptcystatusdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as bankruptcystatusdesc, statusid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.BankruptcyStatuses WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Counties",
            "schema_name": "Court",
            "id_field": "CountyID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select countyid, CASE when countyname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(countyname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as countyname, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Court.Counties WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ChequePayments",
            "schema_name": "Finance",
            "id_field": "PaymentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentid, CASE when chequenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(chequenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as chequenumber, chequetxndate, CASE when referenceurl is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(referenceurl, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as referenceurl, filepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.ChequePayments WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ItemTypes",
            "schema_name": "Inventory",
            "id_field": "ItemTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select itemtypeid, CASE when itemtypename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(itemtypename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as itemtypename, CASE when itemtypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(itemtypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as itemtypedesc, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when isserialized is NULL then 0 else isserialized end AS isserialized, CASE when filepath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filepath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filepath, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Inventory.ItemTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "AlertChannels",
            "schema_name": "Notifications",
            "id_field": "AlertChannelID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select alertchannelid, CASE when alertchannelname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(alertchannelname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as alertchannelname, bitmapvalue, CASE when channeldesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(channeldesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as channeldesc, CASE when active is NULL then 0 else active end AS active, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Notifications.AlertChannels WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "HVStatusLookup",
            "schema_name": "TER",
            "id_field": "HVStatusLookupID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select hvstatuslookupid, CASE when statuscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statuscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statuscode, CASE when statusdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statusdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statusdescription, parentstatusid, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when detaileddesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(detaileddesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as detaileddesc, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.HVStatusLookup WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "PlateTypes",
            "schema_name": "TollPlus",
            "id_field": "PlateTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select platetypeid, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, CASE when platetypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetypedesc, CASE when statecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statecode, CASE when countrycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(countrycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as countrycode, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.PlateTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Ref_Invoice_Workflow_Stage_Fees",
            "schema_name": "TollPlus",
            "id_field": "StageFeeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select stagefeeid, stageid, feetypeid, CASE when isactive is NULL then 0 else isactive end AS isactive, [fee_days], appliedfor, CASE when iswaivefee is NULL then 0 else iswaivefee end AS iswaivefee, CASE when isconsiderfeeformbs is NULL then 0 else isconsiderfeeformbs end AS isconsiderfeeformbs, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.Ref_Invoice_Workflow_Stage_Fees WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "PaymentPlans",
            "schema_name": "TER",
            "id_field": "PaymentPlanID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentplanid, CASE when remedystage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remedystage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remedystage, CASE when custtagid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(custtagid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as custtagid, CASE when agreementlocation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agreementlocation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agreementlocation, CASE when statuslookupcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statuslookupcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statuslookupcode, statusdatetime, totalamountpayable, calculateddownpayment, customdownpayment, monthlypayment, totalnoofmonths, startdate, enddate, totalreceived, balancedue, lastpaiddate, nextduedate, lastpaidamount, defaulteddate, defaultscount, paidinfulldate, quoteexpirydate, totalsettlementamount, quotefinalizeddate, quotesigneddate, downpaymentdate, CASE when downpaymentapprovedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(downpaymentapprovedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as downpaymentapprovedby, CASE when cashpaymentapprovedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cashpaymentapprovedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cashpaymentapprovedby, tollamount, feeamount, CASE when citationnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(citationnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as citationnumber, filepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.PaymentPlans WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "DMVExceptionQueue",
            "schema_name": "TollPlus",
            "id_field": "ExceptionQueueID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select exceptionqueueid, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, CASE when exceptiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exceptiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exceptiontype, CASE when exceptionraisedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exceptionraisedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exceptionraisedby, exceptionraiseddate, CASE when exceptionresolveduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(exceptionresolveduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as exceptionresolveduser, exceptionresolveddate, CASE when comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as comments, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.DMVExceptionQueue WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Overpayments",
            "schema_name": "Finance",
            "id_field": "OverpaymentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select overpaymentid, customerid, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, overpaymentamount, amountused, remainingamount, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, tripadjustmentid, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.Overpayments WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "BankruptcyTypes",
            "schema_name": "TollPlus",
            "id_field": "BankruptcyTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select bankruptcytypeid, CASE when bankruptcytype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(bankruptcytype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as bankruptcytype, CASE when bankruptcytypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(bankruptcytypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as bankruptcytypedesc, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.BankruptcyTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Bankruptcy_Filing",
            "schema_name": "TollPlus",
            "id_field": "BankruptcyFID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select bankruptcyfid, customerid, startdate, CASE when petitionnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(petitionnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as petitionnumber, bankruptcystatusid, bankruptcytypeid, decisiondate, icnid, channelid, CASE when ismigrated is NULL then 0 else ismigrated end AS ismigrated, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Bankruptcy_Filing WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "DMVRequestTracker",
            "schema_name": "TollPlus",
            "id_field": "RequestTrackerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select requesttrackerid, fileid, CASE when licensenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(licensenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as licensenumber, receiveddate, transactiondate, CASE when requestsource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(requestsource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as requestsource, CASE when requesteduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(requesteduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as requesteduser, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when vehiclecountry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclecountry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclecountry, expirationyear, endeffectivedate, businessdate, CASE when dmvresponse is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dmvresponse, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dmvresponse, CASE when dmvprovider is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dmvprovider, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dmvprovider, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.DMVRequestTracker WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ViolatorCollectionsAgencyTracker",
            "schema_name": "TER",
            "id_field": "VioCollAgencyTrackerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select viocollagencytrackerid, violatorid, CASE when agency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agency, phase, CASE when previousagency is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(previousagency, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as previousagency, CASE when isactive is NULL then 0 else isactive end AS isactive, channelid, icnid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.ViolatorCollectionsAgencyTracker WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "HVEligibleTransactions",
            "schema_name": "TER",
            "id_field": "HVEligibleTxnID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select hveligibletxnid, hvid, linkid, CASE when linksourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksourcename, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.HVEligibleTransactions WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "HabitualViolatorStatusTracker",
            "schema_name": "TER",
            "id_field": "HVStatusID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select hvstatusid, hvid, CASE when parentstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parentstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parentstatus, CASE when substatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(substatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as substatus, statusstartdate, statusenddate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.HabitualViolatorStatusTracker WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TxnDispositions",
            "schema_name": "TranProcessing",
            "id_field": "DispID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select dispid, CASE when dispositioncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dispositioncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dispositioncode, CASE when dispositiondescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dispositiondescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dispositiondescription, sourceofentry, CASE when tripstatuscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tripstatuscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tripstatuscode, CASE when isfeeapplicable is NULL then 0 else isfeeapplicable end AS isfeeapplicable, CASE when isreprocessingallowed is NULL then 0 else isreprocessingallowed end AS isreprocessingallowed, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TranProcessing.TxnDispositions WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Customer_Emails",
            "schema_name": "TollPlus",
            "id_field": "CustMailID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custmailid, customerid, CASE when emailtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(emailtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as emailtype, CASE when emailaddress is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(emailaddress, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as emailaddress, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when iscommunication is NULL then 0 else iscommunication end AS iscommunication, CASE when isvalid is NULL then 0 else isvalid end AS isvalid, CASE when isverified is NULL then 0 else isverified end AS isverified, CASE when isbademail is NULL then 0 else isbademail end AS isbademail, verificationcount, verificationdate, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TP_Customer_Emails WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VRBRequestDallas",
            "schema_name": "TER",
            "id_field": "VRBRequestDallasID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vrbrequestdallasid, vrbid, CASE when citationnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(citationnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as citationnumber, CASE when firstname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(firstname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as firstname, CASE when lastname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastname, CASE when address is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(address, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as address, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when zip is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip, fileid, offencedate, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vin is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vin, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vin, casebalance, casefiledate, CASE when dallasscofflaw is NULL then 0 else dallasscofflaw end AS dallasscofflaw, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VRBRequestDallas WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VehicleRegBlocks",
            "schema_name": "TER",
            "id_field": "VRBID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vrbid, hvid, CASE when isactive is NULL then 0 else isactive end AS isactive, statuslookupid, vrbagencylookupid, requesteddate, placeddate, rejectiondate, vrbrejectlookupid, removerequesteddate, removerejectiondate, vrbremovalrejectionlookupid, removeddate, vrbremovallookupid, retrycount, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.VehicleRegBlocks WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "LaneCategories",
            "schema_name": "TollPlus",
            "id_field": "LaneCategoryID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select lanecategoryid, CASE when lanecategorydesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lanecategorydesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lanecategorydesc, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate, from TBOS.TollPlus.LaneCategories WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "CustomerPayments",
            "schema_name": "Finance",
            "id_field": "CustPaymentID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custpaymentid, paymentid, customerid, amount, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.CustomerPayments WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "RecordTypes",
            "schema_name": "TranProcessing",
            "id_field": "RecID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select recid, CASE when recordtypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtypecode, CASE when recordformat is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordformat, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordformat, sourceofentry, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TranProcessing.RecordTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TripSource",
            "schema_name": "TranProcessing",
            "id_field": "TripSourceID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select tripsourceid, CASE when entrytype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(entrytype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as entrytype, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TranProcessing.TripSource WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "PlazaCourts",
            "schema_name": "Court",
            "id_field": "PlazaCourtID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select plazacourtid, plazaid, courtid, milemarker, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Court.PlazaCourts WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ViolationVehicleTransferCustomers",
            "schema_name": "TollPlus",
            "id_field": "VTNCustID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vtncustid, customerid, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclestate is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclestate, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclestate, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, effectivedate, CASE when customerfullname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(customerfullname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as customerfullname, CASE when docno is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(docno, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as docno, nonliabilityreasonid, CASE when normalizedvehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(normalizedvehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as normalizedvehiclenumber, CASE when isvalid is NULL then 0 else isvalid end AS isvalid, CASE when comments is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(comments, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as comments, CASE when documentpath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(documentpath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as documentpath, filepathconfigid, CASE when status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as status, requesteddate, processeddate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.ViolationVehicleTransferCustomers WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "VehicleClasses",
            "schema_name": "TollPlus",
            "id_field": "VehicleClassID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select vehicleclassid, CASE when vehicleclasscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclasscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclasscode, CASE when name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as name, CASE when vehicleclassdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclassdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclassdesc, thresholdamount, tagdeposit, starteffectivedate, endeffectivedate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.VehicleClasses WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "FleetCustomerAttributes",
            "schema_name": "TollPlus",
            "id_field": "FleetAttrID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select fleetattrid, customerid, CASE when abbreviation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(abbreviation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as abbreviation, vcfoptionsid, fleettypeid, CAST(vcfgenerationtime AS time(6)) AS vcfgenerationtime, vcfgenerationfrequency, vcfgenerationday, icnid, channelid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.FleetCustomerAttributes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "EligibleForCitations",
            "schema_name": "TER",
            "id_field": "EligibleCitationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select eligiblecitationid, accountnumber, CASE when name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as name, CASE when vehiclenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclenumber, CASE when vehiclemake is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemake, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemake, CASE when vehiclemodel is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclemodel, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclemodel, CASE when vehicleyear is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleyear, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleyear, noofeligiblenotices, totaloutstandingtolls, firsteligibletxndate, lasteligibletxndate, CASE when coownerexists is NULL then 0 else coownerexists end AS coownerexists, CASE when suffix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(suffix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as suffix, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, prvrefreshoptoutdate, optoutdate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.EligibleForCitations WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "LocationChannels",
            "schema_name": "TollPlus",
            "id_field": "LocationChannelID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select locationchannelid, locationid, channelid, icnid, createddate, starteffectivedate, endeffectivedate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.LocationChannels WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "PmCaseTypes",
            "schema_name": "CaseManager",
            "id_field": "CaseTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select casetypeid, CASE when casetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(casetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as casetype, CASE when casetypedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(casetypedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as casetypedesc, CASE when isvisible is NULL then 0 else isvisible end AS isvisible, CASE when fetchapiurl is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(fetchapiurl, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as fetchapiurl, [parent_casetypeid], CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, casecreatednotificationtrigger, CASE when visibleselfservicechannel is NULL then 0 else visibleselfservicechannel end AS visibleselfservicechannel, CASE when customersurveytrigger is NULL then 0 else customersurveytrigger end AS customersurveytrigger, caseclosurenotificationtrigger, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.CaseManager.PmCaseTypes WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TpFileTracker",
            "schema_name": "TollPlus",
            "id_field": "FileID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select fileid, CASE when filename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filename, CASE when filetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filetype, CASE when filesource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filesource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filesource, CASE when destination is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(destination, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as destination, CASE when requestsource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(requestsource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as requestsource, CASE when filedirection is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filedirection, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filedirection, filereceivedate, filegenerateddate, businessdate, CASE when fileprocessed is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(fileprocessed, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as fileprocessed, processeddate, processedcount, filestatus, totalcount, recordcount, failedcount, nooftxns, CASE when filesequencenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(filesequencenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as filesequencenumber, CASE when parentfileid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(parentfileid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as parentfileid, retryattempts, CASE when module is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(module, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as module, CASE when remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as remarks, sourcepkid, CASE when sourcename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcename, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.TpFileTracker WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "PaymentPlanTerms",
            "schema_name": "TER",
            "id_field": "PaymentPlantermID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select paymentplantermid, paymentplanid, termnumber, termduedate, customtermduedate, termamount, termoutstandingamount, CASE when isactive is NULL then 0 else isactive end AS isactive, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.PaymentPlanTerms WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Courts",
            "schema_name": "Court",
            "id_field": "CourtID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select courtid, countyid, CASE when courtname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(courtname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as courtname, CASE when addressline1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline1, CASE when addressline2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline2, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when zip1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip1, CASE when zip2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip2, starteffectivedate, endeffectivedate, CASE when precinctnumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(precinctnumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as precinctnumber, CASE when placenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(placenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as placenumber, CASE when telephonenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(telephonenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as telephonenumber, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Court.Courts WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "OperationalLocations",
            "schema_name": "TollPlus",
            "id_field": "OperationalLocationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select operationallocationid, CASE when locationname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationname, CASE when locationcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationcode, CASE when locationdesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationdesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationdesc, CASE when address1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(address1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as address1, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when zipcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zipcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zipcode, CASE when isthirdpartylocation is NULL then 0 else isthirdpartylocation end AS isthirdpartylocation, CASE when locationtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(locationtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as locationtype, retaileruserid, CASE when iswarehouse is NULL then 0 else iswarehouse end AS iswarehouse, CASE when issemafoneenabled is NULL then 0 else issemafoneenabled end AS issemafoneenabled, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when islinkedtouser is NULL then 0 else islinkedtouser end AS islinkedtouser, CASE when encryptedlocation is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(encryptedlocation, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as encryptedlocation, CASE when merchantid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(merchantid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as merchantid, CASE when hostedsecureid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hostedsecureid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hostedsecureid, CASE when hostedsecureapitoken is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(hostedsecureapitoken, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as hostedsecureapitoken, CASE when issendtagrequesttortp is NULL then 0 else issendtagrequesttortp end AS issendtagrequesttortp, channelid, icnid, CASE when isnew is NULL then 0 else isnew end AS isnew, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateuser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateuser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateuser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.OperationalLocations WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Courtjudges",
            "schema_name": "Court",
            "id_field": "JudgeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select judgeid, courtid, CASE when lastname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastname, CASE when firstname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(firstname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as firstname, starteffectivedate, endeffectivedate, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Court.Courtjudges WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ViolatorCollectionsOutboundUpdate",
            "schema_name": "TER",
            "id_field": "VioCollOutboundUpdateID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select viocolloutboundupdateid, fileid, CASE when recordtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(recordtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as recordtype, violatorid, CASE when invoicenumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(invoicenumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as invoicenumber, transactionid, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, transactionamount, balaftertransaction, transactiondate, CASE when adjustmentreason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(adjustmentreason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as adjustmentreason, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TER.ViolatorCollectionsOutboundUpdate WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "ChaseTransactions",
            "schema_name": "Finance",
            "id_field": "ChaseTransactionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select chasetransactionid, paymentid, CASE when txnrefnum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(txnrefnum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as txnrefnum, CASE when customerrefnum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(customerrefnum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as customerrefnum, CASE when responsecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(responsecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as responsecode, CASE when responsemessage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(responsemessage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as responsemessage, tracenumber, CASE when uid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(uid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as uid, sourceid, createddate, updateddate, CASE when cardexpiry is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cardexpiry, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cardexpiry, CASE when cardkey is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cardkey, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cardkey, CASE when name is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(name, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as name, CASE when cardtype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cardtype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cardtype, txndate, amount, CASE when cvvmatch is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cvvmatch, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cvvmatch, CASE when avsmatch is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(avsmatch, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as avsmatch, transactionstatus, CASE when originaltxnrefnum is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(originaltxnrefnum, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as originaltxnrefnum, CASE when error is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(error, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as error, CASE when merchantid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(merchantid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as merchantid, CASE when isaddingnewcard is NULL then 0 else isaddingnewcard end AS isaddingnewcard, CASE when mitreceivedtransactionid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(mitreceivedtransactionid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as mitreceivedtransactionid, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.Finance.ChaseTransactions WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Customer_Addresses",
            "schema_name": "History",
            "id_field": "CustomerID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select custaddressid, customerid, CASE when addresstype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addresstype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addresstype, CASE when addressline1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline1, CASE when addressline2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline2, CASE when addressline3 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(addressline3, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as addressline3, CASE when city is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(city, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as city, CASE when state is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(state, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as state, CASE when country is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(country, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as country, CASE when zip1 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip1, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip1, CASE when zip2 is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(zip2, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as zip2, CASE when isactive is NULL then 0 else isactive end AS isactive, CASE when iscommunication is NULL then 0 else iscommunication end AS iscommunication, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, histid, CASE when action is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(action, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as action, CASE when isvalid is NULL then 0 else isvalid end AS isvalid, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, addressupdateddate, CASE when isaddressupdatenotified is NULL then 0 else isaddressupdatenotified end AS isaddressupdatenotified, isvalidupdateddate, CASE when isskiptraced is NULL then 0 else isskiptraced end AS isskiptraced, addresssourceid, rovsourceid, CASE when rovsourcetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(rovsourcetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as rovsourcetype, CASE when subsource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subsource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subsource, movedtohistorydate, icnid, channelid, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.History.TP_Customer_Addresses WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "TP_Customer_OutboundCommunications",
            "schema_name": "docmgr",
            "id_field": "OutboundCommunicationID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select outboundcommunicationid, customerid, CASE when documenttype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(documenttype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as documenttype, communicationdate, generateddate, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, CASE when documentpath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(documentpath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as documentpath, CASE when initiatedby is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(initiatedby, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as initiatedby, queueid, CASE when isdelivered is NULL then 0 else isdelivered end as isdelivered, paymentid, deliverydate, readdate, generatedby, filepathconfigurationid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.DocMgr.TP_Customer_OutboundCommunications WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "BalanceTransferQueue",
            "schema_name": "TollPlus",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select balancetransferqueueid, fromcustomerid, tocustomerid, transferamount, CASE when reason is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reason, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reason, requesteddate, CASE when transferstatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transferstatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transferstatus, transferdate, createdate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, fromadjustmentid, toadjustmentid, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from TBOS.TollPlus.BalanceTransferQueue WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "OverPaymentsLog",
            "schema_name": "TollPlus",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select overpaymentlogid, customerid, paymentid, adjustmentid, amountreceived, linkid, CASE when linksource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(linksource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as linksource, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, overpaymentid, tripadjustmentid, lnd_updatedate, CASE when lnd_updatetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lnd_updatetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lnd_updatetype, SRC_ChangeDate from TBOS.TollPlus.OverPaymentsLog WITH (NOLOCK)",
            "gcs_upload_flag": "False"
        },
        {
            "table_name": "Transactions",
            "schema_name": "EIP",
            "id_field": "TransactionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select transactionid, CASE when agencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencycode, CASE when serverid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(serverid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as serverid, CASE when plazaid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazaid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazaid, CASE when laneid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(laneid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as laneid, CASE when tranid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tranid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tranid, CASE when laneposition is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(laneposition, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as laneposition, CASE when issuingauthority is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(issuingauthority, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as issuingauthority, timestamp, utctimestamp, localtimestamp, transactiondate, transactiontime, CASE when transponderid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderid, CASE when transponderclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transponderclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transponderclass, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, CASE when vehiclelength is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehiclelength, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehiclelength, CASE when violationcode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(violationcode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as violationcode, tollclass, tolldue, tollpaid, imageofrecordid, primaryplateimageid, primaryplatereadconfidence, CASE when ocrplateregistration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ocrplateregistration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ocrplateregistration, registrationreadconfidence, CASE when ocrplatejurisdiction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ocrplatejurisdiction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ocrplatejurisdiction, jurisdictionreadconfidence, CASE when signaturehandle is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(signaturehandle, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as signaturehandle, signatureconfidence, combinedplateresultstatus, combinedstateresultstatus, startdate, enddate, stagetypeid, stageid, statusid, CASE when statusdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statusdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statusdescription, statusdate, vehicleid, groupid, representativesigimageid, signaturematchid, signatureconflictid1, signatureconflictid2, daynighttwilight, CASE when node is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(node, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as node, CASE when nodeinst is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(nodeinst, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as nodeinst, roadwayid, agencytimestamp, receiveddate, auditfileid, misreaddisposition, disposition, reasoncode, CASE when lastreviewer is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastreviewer, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastreviewer, CASE when platetypeprefix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetypeprefix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetypeprefix, CASE when platetypesuffix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetypesuffix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetypesuffix, CASE when plateregistration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plateregistration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plateregistration, CASE when platejurisdiction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platejurisdiction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platejurisdiction, isfserialnumber, revenueaxles, indicatedvehicleclass, indicatedaxles, actualaxles, vehiclespeed, tagstatus, CASE when facilitycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(facilitycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as facilitycode, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, CASE when subscriberid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(subscriberid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as subscriberid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.EIP.Transactions WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Results_Log",
            "schema_name": "EIP",
            "id_field": "TransactionID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select transactionid, CASE when node is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(node, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as node, groupid, groupsize, groupstageid, isvalidgroup, CASE when tranid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(tranid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as tranid, CASE when agencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencycode, CASE when roadid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(roadid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as roadid, CASE when plazaid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plazaid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plazaid, CASE when laneid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(laneid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as laneid, CASE when vehicleclass is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vehicleclass, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vehicleclass, transactiondate, transactiontime, imageofrecordid, disposition, reasoncode, timemir, CASE when platejurisdiction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platejurisdiction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platejurisdiction, CASE when plateregistration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(plateregistration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as plateregistration, CASE when platetypeprefix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetypeprefix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetypeprefix, CASE when platetypesuffix is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetypesuffix, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetypesuffix, CASE when alprjurisdiction is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(alprjurisdiction, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as alprjurisdiction, CASE when alprregistration is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(alprregistration, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as alprregistration, eipreceiveddate, eipcompleteddate, CASE when platesyntax is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platesyntax, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platesyntax, statusid, subreasontime, CASE when lastreviewer is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(lastreviewer, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as lastreviewer, transactiontypeid, totalimgenhtime, reviewcount, CASE when cameraname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cameraname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cameraname, CASE when cameraid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cameraid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cameraid, isdayimage, imagecontrast, imagebrightness, platereadconfidence, iscommonsyntax, signaturematchstatus, CASE when cameraview is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cameraview, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cameraview, isvalidgroupaip, representativetranid, CASE when platetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(platetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as platetype, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.EIP.Results_Log WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "Image_Storage_Paths",
            "schema_name": "EIP",
            "id_field": "",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CASE when pathid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pathid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pathid, CASE when agencycode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(agencycode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as agencycode, storagetype, CASE when imagetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(imagetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as imagetype, CASE when pathname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(pathname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as pathname, CASE when virtualpath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(virtualpath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as virtualpath, CASE when sharedpath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sharedpath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sharedpath, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.EIP.Image_Storage_Paths WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnStatuses",
            "schema_name": "MIR",
            "id_field": "StatusID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select statusid, CASE when statusname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statusname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statusname, CASE when statuscode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statuscode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statuscode, CASE when statusdescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(statusdescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as statusdescription, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.TxnStatuses WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnQueues",
            "schema_name": "MIR",
            "id_field": "QueueID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select queueid, CASE when queuename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(queuename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as queuename, CASE when queuecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(queuecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as queuecode, CASE when [queue description] is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE([queue description], CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as [queue description], maxtranstopull, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, createddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, updateddate, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.TxnQueues WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MST_TransactionTypes",
            "schema_name": "MIR",
            "id_field": "TransactionTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select transactiontypeid, CASE when transactiontype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontype, CASE when transactiontypesource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(transactiontypesource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as transactiontypesource, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.MST_TransactionTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MST_SourceTypes",
            "schema_name": "MIR",
            "id_field": "SourceTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select sourcetypeid, CASE when sourcetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(sourcetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as sourcetype, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.MST_SourceTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnStages",
            "schema_name": "MIR",
            "id_field": "StageID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select stageid, CASE when stagename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagename, CASE when stagecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagecode, CASE when stagedescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagedescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagedescription, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.TxnStages WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "AuditTypes",
            "schema_name": "EIP",
            "id_field": "AuditID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select auditid, CASE when audittype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(audittype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as audittype, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.EIP.AuditTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "ReasonCodes",
            "schema_name": "MIR",
            "id_field": "ReasonCodeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select reasoncodeid, CASE when reasoncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncode, CASE when reasoncodedesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(reasoncodedesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as reasoncodedesc, CASE when shortcutkey is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(shortcutkey, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as shortcutkey, parentid, tpmappingreasoncodeid, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.ReasonCodes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MST_ResponseTypes",
            "schema_name": "MIR",
            "id_field": "ResponseTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select responsetypeid, CASE when responsetype is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(responsetype, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as responsetype, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.MST_ResponseTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "TxnStageTypes",
            "schema_name": "MIR",
            "id_field": "StageTypeID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select stagetypeid, CASE when stagetypename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagetypename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagetypename, CASE when stagetypecode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagetypecode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagetypecode, CASE when stagetypedescription is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(stagetypedescription, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as stagetypedescription, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.TxnStageTypes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "MST_DispositionCodes",
            "schema_name": "MIR",
            "id_field": "Disposition_CodeID_PK",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select [disposition_codeid_pk], CASE when dispositioncode is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(dispositioncode, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as dispositioncode, CASE when description is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(description, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as description, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from IPS.MIR.MST_DispositionCodes WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "VehicleImages",
            "schema_name": "EIP",
            "id_field": "TxnImageID",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select txnimageid, transactionid, CASE when imagename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(imagename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as imagename, imageindex, imagerows, imagecols, CASE when cameraname is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cameraname, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cameraname, CASE when cameraview is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cameraview, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cameraview, CASE when cameraid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(cameraid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as cameraid, cameratype, signaturetype, ocrindex, CASE when vsrhandle is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vsrhandle, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vsrhandle, vsrconfidence, CASE when vsrcharresults is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(vsrcharresults, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as vsrcharresults, vsrloactionright, vsrloactionleft, vsrloactiontop, vsrloactionbottom, roihorizontalposition, roihorizontalsize, roiverticalposition, roiverticalsize, issignaturevalid, isdayimage, imagecontrast, imagebrightness, disposition, reasoncode, CASE when roiimagename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(roiimagename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as roiimagename, CASE when roiimagepathid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(roiimagepathid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as roiimagepathid, CASE when roiimagepath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(roiimagepath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as roiimagepath, CASE when ocrimagepathid is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ocrimagepathid, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ocrimagepathid, CASE when ocrimagepath is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ocrimagepath, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ocrimagepath, ocrregistrationconfidence, ocrjurisdictionconfidence, CASE when ocrimagename is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(ocrimagename, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as ocrimagename, createddate, CASE when createduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(createduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as createduser, updateddate, CASE when updateduser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(updateduser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) end as updateduser, GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate, from IPS.EIP.VehicleImages WITH (NOLOCK)",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "PMCase",
            "schema_name": "CaseManager",
            "id_field": "CaseId",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CaseId, CaseTypeId, CaseSource, CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CaseTitle, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) as CaseTitle, DateReported, ICNId, PriorityId, StatusId, CurrentCaseTypeActivityId, AssignedTo, CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(JsonData, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) as JsonData, CustomerId, DueDate, SLAExpiryDate, CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(Remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) as Remarks, CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) as CreatedUser, CreatedDate, CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) as UpdatedUser, UpdatedDate, CurrentActivityStatusID, RoleCaseTypeActCustTypeStatusId, ClosureReasonCode, ChannelId, CASE when IsManual  is NULL then 0 else IsManual end as IsManual, CASE when CaseApprovalNotification  is NULL then 0 else CaseApprovalNotification end as CaseApprovalNotification, CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(CaseTypeComment, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'), CHAR(34)) as CaseTypeComment,GETDATE() AS LND_UpdateDate, 'I' AS LND_UpdateType, NULL AS SRC_ChangeDate from CaseManager.PMCase where cast(CreatedDate as date) in('7/3/2024','7/7/2024','7/4/2024','7/1/2024','6/22/2024','7/5/2024','6/27/2024','7/6/2024','7/9/2024','6/28/2024','7/2/2024','7/18/2024','6/24/2024','7/8/2024','6/23/2024','7/10/2024','6/21/2024','6/26/2024','6/25/2024','6/29/2024')",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "RefundResponseDetails",
            "schema_name": "Finance",
            "id_field": "RefundResponseId",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select RefundResponseId, CustomerId, DisbursementId, RefundAmount, CASE when CheckNumber is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(CheckNumber, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as CheckNumber, RefundRequestedDate, CASE when DisbursementDesc is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(DisbursementDesc, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as DisbursementDesc, RefundIssuedDate, CASE when ErrorMessage is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(ErrorMessage, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as ErrorMessage, IsValid, CASE when Status is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(Status, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as Status, FileId, CreatedDate, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as CreatedUser, UpdatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as UpdatedUser, PaymentId from finance.RefundResponseDetails",
            "gcs_upload_flag": "FALSE"
        },
        {
            "table_name": "caselinks",
            "schema_name": "Tollplus",
            "id_field": "CaselinkId",
            "row_chunk_size": "2000000",
            "chunk_flag": "True",
            "query": "select CaseLinkId, CaseId, LinkId, CASE when LinkSource is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(LinkSource, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as LinkSource, CaseStatus, CASE when Remarks is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(Remarks, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as Remarks, CASE when CreatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(CreatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as CreatedUser, CreatedDate, CASE when UpdatedUser is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(UpdatedUser, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as UpdatedUser, UpdatedDate, CASE when LinkStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(LinkStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as LinkStatus, CASE when ImageReviewStatus is NULL then NULL else CONCAT(CHAR(34), REPLACE(REPLACE(REPLACE(REPLACE(ImageReviewStatus, CHAR(34), '\"\"'), CHAR(147), '\"\"'), CHAR(148),'\"\"'),CHAR(168),''), CHAR(34)) end as ImageReviewStatus from tollplus.caselinks",
            "gcs_upload_flag": "FALSE"
        }
 
    ]
}
