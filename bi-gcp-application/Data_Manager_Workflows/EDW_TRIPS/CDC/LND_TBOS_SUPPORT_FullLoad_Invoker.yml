# Child Workflow for Process LND_TBOS_SUPPORT_FullLoad_Invoker
# Process Name - LND_TBOS_SUPPORT_FullLoad_Invoker
# Calls a stored procedure - LND_TBOS_SUPPORT.FullLoad_Invoker


# labels
# workflow:child
# callout:sql

main:
    params: [args]
    steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - execution_results: {} # results from each execution
          - execution_results.success: {} # successful executions saved under 'success' key
          - execution_results.failure: {} # failed executions saved under 'failure' key
          - payload: {}
          
          
    - LND_TBOS_SUPPORT_FullLoad_Invoker:
        try:
            call: googleapis.bigquery.v2.jobs.query
            args:
                projectId: ${project_id}
                body:
                    useLegacySql: false
                    useQueryCache: false 
                    query: "CALL LND_TBOS_SUPPORT.FullLoad_Invoker()"

            result: query_result    
        except:
            as: e
            steps:
                - assign_sp_triggering_error:
                    assign:
                        - execution_results.failure["LND_TBOS_SUPPORT_FullLoad_Invoker"]: ${e}
                        - payload: { 'status':'Failed', 'child_workflow_id': 'LND_TBOS_SUPPORT_FullLoad_Invoker', 'parent_workflow_id': '', 'log_source':'workflows' }
                        - payload["error"]: ${json.encode_to_string(e)} 
                        - payload["timestamp"]: ${time.format(sys.now(),"America/Chicago")}
                - log_sp_triggering_error:
                    call: sys.log 
                    args:
                        json: ${payload}
                        severity: "CRITICAL" 
                - raise_query_error:
                    raise: ${e}   
    - Set_Job_Id:
        assign:
          - sp_job_id : ${query_result.jobReference.jobId}
          - location : ${query_result.jobReference.location}

    - Get_Job_Info:
        try:
            call: googleapis.bigquery.v2.jobs.get
            args:
                projectId: ${project_id}
                jobId: ${sp_job_id}
                location: ${location}
            result: job_info   #Storing result into variable job_info
        except:
            as: e
            steps:
                - assign_job_info_error:
                    assign:
                        - execution_results.failure["LND_TBOS_SUPPORT_FullLoad_Invoker"]: ${e}
                        - payload: { 'status':'Failed', 'child_workflow_id': 'LND_TBOS_SUPPORT_FullLoad_Invoker', 'parent_workflow_id': '', 'log_source':'workflows' }
                        - payload["error"]: ${json.encode_to_string(e)} 
                        - payload["timestamp"]: ${time.format(sys.now(),"America/Chicago")}
                - log_job_info_error:
                    call: sys.log 
                    args:
                        json: ${payload}
                        severity: "CRITICAL" 
                - raise_job_error:
                    raise: ${e}  

    - Check_Job_State:
        switch:
          - condition: ${job_info.status.state != "DONE"}
            steps: 
              - wait_30_s:
                  call: sys.sleep # Polling through sleep
                  args:
                    seconds: 30
                  next: Get_Job_Info

    - Get_Sp_Job_Result:
        try:
            call: googleapis.bigquery.v2.jobs.getQueryResults
            args:
                projectId: ${project_id}
                jobId: ${sp_job_id}
                location: ${location}
            result: sp_result
        except:
            as: e
            steps:
                - assign_job_result_error:
                    assign:
                        - execution_results.failure["LND_TBOS_SUPPORT_FullLoad_Invoker"]: ${e}
                        - payload: { 'status':'Failed', 'child_workflow_id': 'LND_TBOS_SUPPORT_FullLoad_Invoker', 'parent_workflow_id': '', 'log_source':'workflows' }
                        - payload["error"]: ${json.encode_to_string(e)} 
                        - payload["timestamp"]: ${time.format(sys.now(),"America/Chicago")}
                - log_job_result_error:
                    call: sys.log 
                    args:
                        json: ${payload}
                        severity: "CRITICAL" 
                - raise_sp_error:
                    raise: ${e}

    - success_log:
        steps:
            - assign_success_result:
                assign:
                    - execution_results.success["LND_TBOS_SUPPORT_FullLoad_Invoker"]: ${sp_result}
                    - payload: { 'status':'Success', 'child_workflow_id': 'LND_TBOS_SUPPORT_FullLoad_Invoker', 'parent_workflow_id': '', 'log_source':'workflows' }
                    - payload["result"]: ${sp_result}
                    - payload["timestamp"]: ${time.format(sys.now(),"America/Chicago")}
            - log_success_result:
                call: sys.log
                args:
                    json: ${payload}
                    severity: "INFO" 
    - returnOutput:
        return: '${sp_result}'

